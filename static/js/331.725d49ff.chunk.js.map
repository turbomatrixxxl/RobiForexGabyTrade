{"version":3,"file":"static/js/331.725d49ff.chunk.js","mappings":"8JACA,QAAiC,kCAAjC,EAA2E,yB,aCC3E,QCIe,SAAkBA,GAc7B,IAd8B,KAChCC,EAAI,YACJC,EAAW,SACXC,EAAQ,UACRC,EAAS,KACTC,EAAI,aACJC,EAAY,MACZC,EAAK,MACLC,EAAK,YACLC,EAAW,aACXC,EAAY,WACZC,EAAU,SACVC,EAAQ,SACRC,GAAW,GACZb,EACC,MAAMc,EAAc,CAClBJ,aAAcA,GAAgB,MAC9BK,MAAO,CAAEN,YAAaA,GAAe,OACrCO,SAAUV,EACVD,KAAMA,GAAQ,GACdD,WAAWa,EAAAA,EAAAA,GAAKC,EAAcd,GAC9BF,YAAaA,GAAe,GAC5BC,SAAUA,IAAY,EACtBK,MAAOA,GAAS,GAChBW,OAAQR,GAGV,OACES,EAAAA,EAAAA,MAAA,OAAKL,MAAO,CAAER,MAAOA,GAAS,QAAUH,UAAWc,EAAsBN,SAAA,CACtEC,GACCQ,EAAAA,EAAAA,KAAA,YAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACMR,GAAW,IACfS,KAAK,IAILnB,WAAWa,EAAAA,EAAAA,GAAKC,EAAcd,OAGhCiB,EAAAA,EAAAA,KAAA,SAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACElB,WAAWa,EAAAA,EAAAA,GAAKC,EAAcd,IAC1BU,GAAW,IACfb,KAAMA,GAAQ,UAGjBW,IAGP,C,0DCpDA,MAAMY,EAAoBC,GAAUA,EAAMC,MAE7BC,GAAoBC,EAAAA,EAAAA,IAC/B,CAACJ,GACAK,GAAeA,EAAWC,aAGhBC,GAAcH,EAAAA,EAAAA,IACzB,CAACJ,GACAK,GAAeA,EAAWH,OAGhBM,GAAgBJ,EAAAA,EAAAA,IAC3B,CAACJ,GACAK,GAAeA,EAAWI,SAGhBC,GAAcN,EAAAA,EAAAA,IACzB,CAACJ,GACAK,GAAeA,EAAWM,OAGhBC,GAAuBR,EAAAA,EAAAA,IAClC,CAACJ,GACAK,GAAeA,EAAWQ,gBAGvBC,EAAwB,CAAC,EAElBC,EAAkBC,IACxBF,EAAsBE,KACzBF,EAAsBE,IAAUZ,EAAAA,EAAAA,IAC9B,CAACG,GACAL,GAAUA,EAAMe,KAAMC,GAASA,EAAKC,KAAOH,IAAW,OAGpDF,EAAsBE,IC5BlBI,EAAWA,KACtB,MAAMC,GAAWC,EAAAA,EAAAA,MAQjB,MAAO,CACLhB,aARkBiB,EAAAA,EAAAA,IAAYpB,GAS9BqB,WARgBD,EAAAA,EAAAA,IAAYf,GAS5BiB,YARiBF,EAAAA,EAAAA,IAAYb,GAS7BR,OARYqB,EAAAA,EAAAA,IAAYhB,GASxBmB,UAReH,EAAAA,EAAAA,IAAYR,GAS3BM,WACAR,gBATqBU,EAAAA,EAAAA,IAAYX,I,kIChBrC,SAAgB,SAAW,oCAAoC,YAAc,uCAAuC,OAAS,kCAAkC,MAAQ,iCAAiC,UAAY,qCAAqC,KAAO,gCAAgC,MAAQ,iCAAiC,iBAAmB,4CAA4C,gBAAkB,2CAA2C,gBAAkB,2CAA2C,eAAiB,0CAA0C,YAAc,uCAAuC,aAAe,wCAAwC,eAAiB,0CAA0C,cAAgB,yCAAyC,UAAY,qCAAqC,SAAW,oCAAoC,cAAgB,yCAAyC,aAAe,wCAAwC,YAAc,uCAAuC,mBAAqB,8CAA8C,YAAc,uCAAuC,aAAe,yC,uBCCzqC,QCWe,WACb,MAAM,OAAEI,IAAWW,EAAAA,EAAAA,MACb,MAAEzB,IAAUkB,EAAAA,EAAAA,KACZC,GAAWC,EAAAA,EAAAA,MACXM,GAAeC,EAAAA,EAAAA,UACfC,GAAiBD,EAAAA,EAAAA,QAAO,OAEvBE,EAASC,IAAcC,EAAAA,EAAAA,UAAS,KAChCC,EAAiBC,IAAsBF,EAAAA,EAAAA,WAAS,IAChDG,EAAMC,IAAWJ,EAAAA,EAAAA,UAAS,MAE3BK,EAAepC,EAAMe,KAAMC,GAASA,EAAKC,KAAOH,GAEhDuB,GAAuB,OAAZD,QAAY,IAAZA,OAAY,EAAZA,EAAcC,WAAY,GAErCC,EAAmBC,IACvB,IAAIC,EAAO,IAAIC,KAAKF,GACpB,GAAIG,MAAMF,EAAKG,WAAY,CACzB,MAAMC,EAAiBL,EAAUM,QAC/B,qDACA,aAEFL,EAAO,IAAIC,KAAKG,EAClB,CACA,GAAIF,MAAMF,EAAKG,WAAY,MAAO,GAE9BH,EAAKM,aAAe,IAAIN,EAAKO,WAAW,IAE5C,MAAMC,EAAgBR,EAAKS,mBAAmB,GAAI,CAChDC,KAAM,UACNC,OAAQ,YAGJC,EAAMZ,EAAKa,UACXC,EAAQd,EAAKe,eAAe,UAAW,CAAED,MAAO,SAChDE,EAAOhB,EAAKiB,cAElB,MAAM,GAANC,OAAUN,EAAG,KAAAM,OAAIJ,EAAK,KAAAI,OAAIF,EAAI,KAAAE,OAAIV,IAG9BW,EAAiB,IAAItB,GAAUuB,KAAK,CAACC,EAAGC,IAC9B,IAAIrB,KAAKH,EAAgBuB,EAAEE,SAASpB,UACpC,IAAIF,KAAKH,EAAgBwB,EAAEC,SAASpB,WAQpD,IAJAqB,EAAAA,EAAAA,WAAU,KAAO,IAADC,EACQ,QAAtBA,EAAArC,EAAesC,eAAO,IAAAD,GAAtBA,EAAwBE,eAAe,CAAEC,SAAU,YAClD,CAACT,KAECvB,EACH,OAAOzC,EAAAA,EAAAA,KAAA,OAAKjB,UAAWc,EAAO6E,SAASnF,SAAC,mBAG1C,MAwCMoF,EAAOC,KAAKC,MAAMC,aAAaC,QAAQ,SAE7C,OACEhF,EAAAA,EAAAA,MAAA,OAAKhB,UAAWc,EAAOmF,SAASzF,SAAA,EAC9BQ,EAAAA,EAAAA,MAAA,MAAIhB,UAAWc,EAAOoF,YAAY1F,SAAA,CAC/ByE,EAAekB,IAAKC,IAAG,IAAAC,EAAA,OACtBD,EAAIE,SACFtF,EAAAA,EAAAA,MAAA,MAAiBhB,UAAWc,EAAOyF,MAAM/F,SAAA,EACvCS,EAAAA,EAAAA,KAAA,QAAMjB,WAAWa,EAAAA,EAAAA,GAAKC,EAAO0F,UAAW1F,EAAO2F,MAAMjG,SAC3B,QAD2B6F,EACtC,OAAZ3C,QAAY,IAAZA,OAAY,EAAZA,EAAckC,KAAK3F,YAAI,IAAAoG,EAAAA,EAAI,MAE9BpF,EAAAA,EAAAA,KAAA,QAAMjB,UAAWc,EAAO4F,gBAAgBlG,SAAE4F,EAAIO,WAC9C1F,EAAAA,EAAAA,KAAA,QAAMjB,UAAWc,EAAO8F,eAAepG,SACpC4F,EAAIf,OACDzB,EAAgBwC,EAAIf,QACpB,yBARCe,EAAI7D,KAYbvB,EAAAA,EAAAA,MAAA,MAAiBhB,UAAWc,EAAO+F,OAAOrG,SAAA,EACxCS,EAAAA,EAAAA,KAAA,QAAMjB,WAAWa,EAAAA,EAAAA,GAAKC,EAAO0F,UAAW1F,EAAOgG,OAAOtG,SACnDoF,EAAOA,EAAKmB,SAAW,UAE1B9F,EAAAA,EAAAA,KAAA,QAAMjB,UAAWc,EAAOkG,iBAAiBxG,SAAE4F,EAAIO,WAC/C1F,EAAAA,EAAAA,KAAA,QAAMjB,UAAWc,EAAOmG,gBAAgBzG,SACrC4F,EAAIf,OACDzB,EAAgBwC,EAAIf,QACpB,yBARCe,EAAI7D,MAchBiB,IACCvC,EAAAA,EAAAA,KAAA,MAAIjB,UAAWc,EAAOoG,YAAY1G,SAC/BgD,EAAK3D,KAAKsH,WAAW,WACpBlG,EAAAA,EAAAA,KAAA,OACEmG,IAAKC,IAAIC,gBAAgB9D,GACzB+D,IAAI,eACJvH,UAAWc,EAAO0G,gBAGpBvG,EAAAA,EAAAA,KAAA,QAAAT,SAAOgD,EAAKvD,UAMlBgB,EAAAA,EAAAA,KAAA,OAAKwG,IAAKvE,QAGZlC,EAAAA,EAAAA,MAAA,OAAKhB,UAAWc,EAAO4G,YAAYlH,SAAA,EACjCQ,EAAAA,EAAAA,MAAC2G,EAAAA,EAAS,CACR9H,KAAK,WACLY,UAAQ,EACRN,MAAM,OACNH,UAAWc,EAAO8G,aAClBvH,YAAY,MACZP,YAAY,eACZM,MAAO+C,EACPjD,aAAe2H,GAAMzE,EAAWyE,EAAEC,OAAO1H,OAAOI,SAAA,EAChDS,EAAAA,EAAAA,KAAA,UACEpB,KAAK,SACLG,UAAWc,EAAOiH,eAClBC,QAnFgBC,KACxBjF,EAAawC,QAAQ0C,SAkFc1H,UAC3BS,EAAAA,EAAAA,KAACkH,EAAAA,IAAW,CAACnI,UAAWc,EAAOsH,cAAeC,KAAM,QAEtDpH,EAAAA,EAAAA,KAAA,SACEpB,KAAK,OACL4H,IAAKzE,EACLpC,SArFgBiH,IACxB,MAAMS,EAAeT,EAAEC,OAAOS,MAAM,GAChCD,GACF7E,EAAQ6E,IAmFF3H,MAAO,CAAE6H,QAAS,WAGpBxH,EAAAA,EAAAA,MAAA,OAAKhB,UAAWc,EAAO2H,aAAajI,SAAA,EAClCS,EAAAA,EAAAA,KAAA,UACEpB,KAAK,SACLG,UAAWc,EAAOiH,eAClBC,QAtFcU,KACxBnF,EAAoBoF,IAAUA,IAqFOnI,UAC3BS,EAAAA,EAAAA,KAAC2H,EAAAA,IAAU,CAAC5I,UAAWc,EAAO+H,UAAWR,KAAM,OAEhD/E,IACCrC,EAAAA,EAAAA,KAAA,OAAKjB,UAAWc,EAAOgI,YAAYtI,UACjCS,EAAAA,EAAAA,KAAC8H,EAAAA,GAAW,CACVC,aAxFUC,IACxB7F,EAAYuF,GAASA,EAAOM,EAAUC,QAwFxB/I,MAAO,IACPgJ,OAAQ,IACRC,cAAe,CAAEC,aAAa,GAC9BC,kBAAkB,6BAO5BrI,EAAAA,EAAAA,KAAA,UAAQjB,UAAWc,EAAOyI,cAAevB,QAvIzBwB,KACfrG,EAAQsG,SAEbhH,GACEiH,EAAAA,EAAAA,IAAW,CACTtH,SACAuH,YAAa,CACX,CACEpH,GAAIqH,OAAOC,aACXlD,QAASxD,EACTmD,SAAS,EACTjB,QAAQ,IAAItB,MAAO+F,mBAK3B1G,EAAW,IACXG,GAAmB,GACnBE,EAAQ,QAqH4DjD,UAC9DS,EAAAA,EAAAA,KAAC8I,EAAAA,IAAY,CAAC/J,UAAWc,EAAOkJ,SAAU3B,KAAM,YAK1D,C","sources":["webpack://my-react-app/./src/components/commonComponents/ChatInput/ChatInput.module.css?8275","components/commonComponents/ChatInput/index.js","components/commonComponents/ChatInput/ChatInput.jsx","redux/public/selectorsChats.js","hooks/useChats.js","webpack://my-react-app/./src/pages/ConversationsPage/ConversationsPage.module.css?9d95","pages/ConversationsPage/index.js","pages/ConversationsPage/ConversationsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"inputContainer\":\"ChatInput_inputContainer__IBOKh\",\"input\":\"ChatInput_input__s+2Y2\",\"inputCenter\":\"ChatInput_inputCenter__Ckgec\",\"inputInfo\":\"ChatInput_inputInfo__HNq2h\",\"autoResizeTextarea\":\"ChatInput_autoResizeTextarea__nF2eA\"};","import ChatInput from \"./ChatInput\";\n\nexport default ChatInput;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\n\nimport styles from \"./ChatInput.module.css\";\n\nexport default function ChatInput({\n  type,\n  placeholder,\n  required,\n  className,\n  name,\n  handleChange,\n  width,\n  value,\n  paddingLeft,\n  autoComplete,\n  handleBlur,\n  children,\n  textarea = false,\n}) {\n  const commonProps = {\n    autoComplete: autoComplete || \"off\",\n    style: { paddingLeft: paddingLeft || \"0px\" },\n    onChange: handleChange,\n    name: name || \"\",\n    className: clsx(styles.input, className),\n    placeholder: placeholder || \"\",\n    required: required || false,\n    value: value || \"\",\n    onBlur: handleBlur,\n  };\n\n  return (\n    <div style={{ width: width || \"auto\" }} className={styles.inputContainer}>\n      {textarea ? (\n        <textarea\n          {...commonProps}\n          rows=\"1\"\n          //   onInput={(e) => {\n          //     handleChange && handleChange(e);\n          //   }}\n          className={clsx(styles.input, className)} // adaugi o clasÄƒ\n        />\n      ) : (\n        <input\n          className={clsx(styles.input, className)}\n          {...commonProps}\n          type={type || \"text\"}\n        />\n      )}\n      {children}\n    </div>\n  );\n}\n\nChatInput.propTypes = {\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  paddingLeft: PropTypes.string,\n  autoComplete: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  name: PropTypes.string,\n  type: PropTypes.string,\n  handleChange: PropTypes.func,\n  handleBlur: PropTypes.func,\n  required: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  textarea: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  placeholder: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  children: PropTypes.node,\n};\n","import { createSelector } from \"reselect\";\n\nconst selectChatsState = (state) => state.chats;\n\nexport const selectActiveChats = createSelector(\n  [selectChatsState],\n  (chatsState) => chatsState.activeChats\n);\n\nexport const selectChats = createSelector(\n  [selectChatsState],\n  (chatsState) => chatsState.chats\n);\n\nexport const selectLoading = createSelector(\n  [selectChatsState],\n  (chatsState) => chatsState.loading\n);\n\nexport const selectError = createSelector(\n  [selectChatsState],\n  (chatsState) => chatsState.error\n);\n\nexport const selectVisitedChatIds = createSelector(\n  [selectChatsState],\n  (chatsState) => chatsState.visitedChatIds\n);\n\nconst chatByIdSelectorCache = {};\n\nexport const selectChatById = (chatId) => {\n  if (!chatByIdSelectorCache[chatId]) {\n    chatByIdSelectorCache[chatId] = createSelector(\n      [selectChats],\n      (chats) => chats.find((chat) => chat.id === chatId) || null\n    );\n  }\n  return chatByIdSelectorCache[chatId];\n};\n","import { useDispatch, useSelector } from \"react-redux\";\nimport {\n  selectError,\n  selectActiveChats,\n  selectLoading,\n  selectChats,\n  selectChatById,\n  selectVisitedChatIds,\n} from \"../redux/public/selectorsChats\";\n\nexport const useChats = () => {\n  const dispatch = useDispatch();\n  const activeChats = useSelector(selectActiveChats);\n  const isLoading = useSelector(selectLoading);\n  const errorChats = useSelector(selectError);\n  const chats = useSelector(selectChats);\n  const chatById = useSelector(selectChatById);\n  const visitedChatIds = useSelector(selectVisitedChatIds);\n\n  return {\n    activeChats,\n    isLoading,\n    errorChats,\n    chats,\n    chatById,\n    dispatch,\n    visitedChatIds,\n  };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"chatPage\":\"ConversationsPage_chatPage__iHtDC\",\"messageList\":\"ConversationsPage_messageList__UOKyd\",\"outbox\":\"ConversationsPage_outbox__vbClZ\",\"inbox\":\"ConversationsPage_inbox__FdOzf\",\"ownerName\":\"ConversationsPage_ownerName__A0CU9\",\"left\":\"ConversationsPage_left__YpJWE\",\"right\":\"ConversationsPage_right__suqrc\",\"msgOutboxContent\":\"ConversationsPage_msgOutboxContent__4-udD\",\"timestampOutbox\":\"ConversationsPage_timestampOutbox__WioDZ\",\"msgInboxContent\":\"ConversationsPage_msgInboxContent__013QE\",\"timestampInbox\":\"ConversationsPage_timestampInbox__Ch2ye\",\"sendMsgCont\":\"ConversationsPage_sendMsgCont__JHT7e\",\"sendMsgInput\":\"ConversationsPage_sendMsgInput__wI62t\",\"writeMsgButton\":\"ConversationsPage_writeMsgButton__8qlVa\",\"paperClipIcon\":\"ConversationsPage_paperClipIcon__WcUSa\",\"smileIcon\":\"ConversationsPage_smileIcon__k+3uR\",\"sendIcon\":\"ConversationsPage_sendIcon__vdd5C\",\"sendMsgButton\":\"ConversationsPage_sendMsgButton__aXC9y\",\"emojiWrapper\":\"ConversationsPage_emojiWrapper__c2SaD\",\"emojiPicker\":\"ConversationsPage_emojiPicker__JnkFE\",\"emojiPickerWrapper\":\"ConversationsPage_emojiPickerWrapper__LdSyq\",\"filePreview\":\"ConversationsPage_filePreview__bdJ60\",\"imagePreview\":\"ConversationsPage_imagePreview__kPE-I\"};","import ConversationsPage from \"./ConversationsPage\";\n\nexport default ConversationsPage;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { updateChat } from \"../../redux/public/chatsSlice\";\nimport { useParams } from \"react-router-dom\";\nimport { useChats } from \"../../hooks/useChats\";\nimport ChatInput from \"../../components/commonComponents/ChatInput\";\n\nimport { FaPaperclip, FaRegSmile, FaPaperPlane } from \"react-icons/fa\";\nimport EmojiPicker from \"emoji-picker-react\";\n\nimport styles from \"./ConversationsPage.module.css\";\nimport clsx from \"clsx\";\n\nexport default function ConversationsPage() {\n  const { chatId } = useParams();\n  const { chats } = useChats();\n  const dispatch = useDispatch();\n  const fileInputRef = useRef();\n  const messagesEndRef = useRef(null);\n\n  const [message, setMessage] = useState(\"\");\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n  const [file, setFile] = useState(null);\n\n  const selectedChat = chats.find((chat) => chat.id === chatId);\n\n  const messages = selectedChat?.messages || [];\n\n  const formatTimestamp = (timestamp) => {\n    let date = new Date(timestamp);\n    if (isNaN(date.getTime())) {\n      const fixedTimestamp = timestamp.replace(\n        /(\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}):(\\d{2})\\.(\\d{3})Z$/,\n        \"$1:59.$3Z\"\n      );\n      date = new Date(fixedTimestamp);\n    }\n    if (isNaN(date.getTime())) return \"\";\n\n    if (date.getSeconds() > 59) date.setSeconds(59);\n\n    const formattedTime = date.toLocaleTimeString([], {\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n    });\n\n    const day = date.getDate();\n    const month = date.toLocaleString(\"default\", { month: \"long\" });\n    const year = date.getFullYear();\n\n    return `${day} ${month} ${year}-${formattedTime}`;\n  };\n\n  const sortedMessages = [...messages].sort((a, b) => {\n    const dateA = new Date(formatTimestamp(a.sentAt)).getTime();\n    const dateB = new Date(formatTimestamp(b.sentAt)).getTime();\n    return dateA - dateB; // de la cel mai vechi la cel mai nou\n  });\n\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  }, [sortedMessages]);\n\n  if (!selectedChat) {\n    return <div className={styles.notFound}>Chat not found</div>;\n  }\n\n  const handleSendMsg = () => {\n    if (!message.trim()) return;\n\n    dispatch(\n      updateChat({\n        chatId,\n        newMessages: [\n          {\n            id: crypto.randomUUID(),\n            content: message,\n            isInbox: false,\n            sentAt: new Date().toISOString(),\n          },\n        ],\n      })\n    );\n    setMessage(\"\");\n    setShowEmojiPicker(false);\n    setFile(null);\n  };\n\n  const handleAttachClick = () => {\n    fileInputRef.current.click();\n  };\n\n  const handleFileChange = (e) => {\n    const selectedFile = e.target.files[0];\n    if (selectedFile) {\n      setFile(selectedFile);\n    }\n  };\n\n  const toggleEmojiPicker = () => {\n    setShowEmojiPicker((prev) => !prev);\n  };\n\n  const handleEmojiClick = (emojiData) => {\n    setMessage((prev) => prev + emojiData.emoji);\n  };\n\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n\n  return (\n    <div className={styles.chatPage}>\n      <ul className={styles.messageList}>\n        {sortedMessages.map((msg) =>\n          msg.isInbox ? (\n            <li key={msg.id} className={styles.inbox}>\n              <span className={clsx(styles.ownerName, styles.left)}>\n                {selectedChat?.user.name ?? \"\"}\n              </span>\n              <span className={styles.msgInboxContent}>{msg.content}</span>\n              <span className={styles.timestampInbox}>\n                {msg.sentAt\n                  ? formatTimestamp(msg.sentAt)\n                  : \"Time not available\"}\n              </span>\n            </li>\n          ) : (\n            <li key={msg.id} className={styles.outbox}>\n              <span className={clsx(styles.ownerName, styles.right)}>\n                {user ? user.username : \"User\"}\n              </span>\n              <span className={styles.msgOutboxContent}>{msg.content}</span>\n              <span className={styles.timestampOutbox}>\n                {msg.sentAt\n                  ? formatTimestamp(msg.sentAt)\n                  : \"Time not available\"}\n              </span>\n            </li>\n          )\n        )}\n\n        {file && (\n          <li className={styles.filePreview}>\n            {file.type.startsWith(\"image/\") ? (\n              <img\n                src={URL.createObjectURL(file)}\n                alt=\"File Preview\"\n                className={styles.imagePreview}\n              />\n            ) : (\n              <span>{file.name}</span>\n            )}\n          </li>\n        )}\n\n        {/* ReferinÈ›Äƒ pentru scroll */}\n        <div ref={messagesEndRef} />\n      </ul>\n\n      <div className={styles.sendMsgCont}>\n        <ChatInput\n          type=\"textarea\"\n          textarea\n          width=\"100%\"\n          className={styles.sendMsgInput}\n          paddingLeft=\"5px\"\n          placeholder=\"Type here...\"\n          value={message}\n          handleChange={(e) => setMessage(e.target.value)}>\n          <button\n            type=\"button\"\n            className={styles.writeMsgButton}\n            onClick={handleAttachClick}>\n            <FaPaperclip className={styles.paperClipIcon} size={16} />\n          </button>\n          <input\n            type=\"file\"\n            ref={fileInputRef}\n            onChange={handleFileChange}\n            style={{ display: \"none\" }}\n          />\n\n          <div className={styles.emojiWrapper}>\n            <button\n              type=\"button\"\n              className={styles.writeMsgButton}\n              onClick={toggleEmojiPicker}>\n              <FaRegSmile className={styles.smileIcon} size={16} />\n            </button>\n            {showEmojiPicker && (\n              <div className={styles.emojiPicker}>\n                <EmojiPicker\n                  onEmojiClick={handleEmojiClick}\n                  width={250}\n                  height={300}\n                  previewConfig={{ showPreview: false }}\n                  searchPlaceHolder=\"Search emoji...\"\n                />\n              </div>\n            )}\n          </div>\n        </ChatInput>\n\n        <button className={styles.sendMsgButton} onClick={handleSendMsg}>\n          <FaPaperPlane className={styles.sendIcon} size={18} />\n        </button>\n      </div>\n    </div>\n  );\n}\n"],"names":["_ref","type","placeholder","required","className","name","handleChange","width","value","paddingLeft","autoComplete","handleBlur","children","textarea","commonProps","style","onChange","clsx","styles","onBlur","_jsxs","_jsx","_objectSpread","rows","selectChatsState","state","chats","selectActiveChats","createSelector","chatsState","activeChats","selectChats","selectLoading","loading","selectError","error","selectVisitedChatIds","visitedChatIds","chatByIdSelectorCache","selectChatById","chatId","find","chat","id","useChats","dispatch","useDispatch","useSelector","isLoading","errorChats","chatById","useParams","fileInputRef","useRef","messagesEndRef","message","setMessage","useState","showEmojiPicker","setShowEmojiPicker","file","setFile","selectedChat","messages","formatTimestamp","timestamp","date","Date","isNaN","getTime","fixedTimestamp","replace","getSeconds","setSeconds","formattedTime","toLocaleTimeString","hour","minute","day","getDate","month","toLocaleString","year","getFullYear","concat","sortedMessages","sort","a","b","sentAt","useEffect","_messagesEndRef$curre","current","scrollIntoView","behavior","notFound","user","JSON","parse","localStorage","getItem","chatPage","messageList","map","msg","_selectedChat$user$na","isInbox","inbox","ownerName","left","msgInboxContent","content","timestampInbox","outbox","right","username","msgOutboxContent","timestampOutbox","filePreview","startsWith","src","URL","createObjectURL","alt","imagePreview","ref","sendMsgCont","ChatInput","sendMsgInput","e","target","writeMsgButton","onClick","handleAttachClick","click","FaPaperclip","paperClipIcon","size","selectedFile","files","display","emojiWrapper","toggleEmojiPicker","prev","FaRegSmile","smileIcon","emojiPicker","EmojiPicker","onEmojiClick","emojiData","emoji","height","previewConfig","showPreview","searchPlaceHolder","sendMsgButton","handleSendMsg","trim","updateChat","newMessages","crypto","randomUUID","toISOString","FaPaperPlane","sendIcon"],"sourceRoot":""}