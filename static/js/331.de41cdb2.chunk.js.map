{"version":3,"file":"static/js/331.de41cdb2.chunk.js","mappings":"oJAEA,MAAMA,EAAoBC,GAAUA,EAAMC,MAE7BC,GAAoBC,EAAAA,EAAAA,IAC/B,CAACJ,GACAK,GAAeA,EAAWC,aAGhBC,GAAcH,EAAAA,EAAAA,IACzB,CAACJ,GACAK,GAAeA,EAAWH,OAGhBM,GAAgBJ,EAAAA,EAAAA,IAC3B,CAACJ,GACAK,GAAeA,EAAWI,SAGhBC,GAAcN,EAAAA,EAAAA,IACzB,CAACJ,GACAK,GAAeA,EAAWM,OAGhBC,GAAuBR,EAAAA,EAAAA,IAClC,CAACJ,GACAK,GAAeA,EAAWQ,gBAGvBC,EAAwB,CAAC,EAElBC,EAAkBC,IACxBF,EAAsBE,KACzBF,EAAsBE,IAAUZ,EAAAA,EAAAA,IAC9B,CAACG,GACAL,GAAUA,EAAMe,KAAMC,GAASA,EAAKC,KAAOH,IAAW,OAGpDF,EAAsBE,IC5BlBI,EAAWA,KACtB,MAAMC,GAAWC,EAAAA,EAAAA,MAQjB,MAAO,CACLhB,aARkBiB,EAAAA,EAAAA,IAAYpB,GAS9BqB,WARgBD,EAAAA,EAAAA,IAAYf,GAS5BiB,YARiBF,EAAAA,EAAAA,IAAYb,GAS7BR,OARYqB,EAAAA,EAAAA,IAAYhB,GASxBmB,UAReH,EAAAA,EAAAA,IAAYR,GAS3BM,WACAR,gBATqBU,EAAAA,EAAAA,IAAYX,I,2FChBrC,SAAgB,SAAW,oCAAoC,YAAc,uCAAuC,OAAS,kCAAkC,MAAQ,iCAAiC,UAAY,qCAAqC,KAAO,gCAAgC,MAAQ,iCAAiC,iBAAmB,4CAA4C,gBAAkB,2CAA2C,gBAAkB,2CAA2C,eAAiB,0CAA0C,YAAc,uCAAuC,aAAe,yC,aCCjoB,QCQe,WACb,MAAM,OAAEI,IAAWW,EAAAA,EAAAA,MACb,MAAEzB,IAAUkB,EAAAA,EAAAA,MACZ,KAAEQ,IAASC,EAAAA,EAAAA,MAEXC,GAAiBC,EAAAA,EAAAA,QAAO,MAExBC,EAAe9B,EAAMe,KAAMC,GAASA,EAAKC,KAAOH,GAEhDiB,GAAuB,OAAZD,QAAY,IAAZA,OAAY,EAAZA,EAAcC,WAAY,GAErCC,EAAmBC,IACvB,IAAIC,EAAO,IAAIC,KAAKF,GACpB,GAAIG,MAAMF,EAAKG,WAAY,CACzB,MAAMC,EAAiBL,EAAUM,QAC/B,qDACA,aAEFL,EAAO,IAAIC,KAAKG,EAClB,CACA,GAAIF,MAAMF,EAAKG,WAAY,MAAO,GAE9BH,EAAKM,aAAe,IAAIN,EAAKO,WAAW,IAE5C,MAAMC,EAAgBR,EAAKS,mBAAmB,GAAI,CAChDC,KAAM,UACNC,OAAQ,YAGJC,EAAMZ,EAAKa,UACXC,EAAQd,EAAKe,eAAe,UAAW,CAAED,MAAO,SAChDE,EAAOhB,EAAKiB,cAElB,MAAM,GAANC,OAAUN,EAAG,KAAAM,OAAIJ,EAAK,KAAAI,OAAIF,EAAI,KAAAE,OAAIV,IAG9BW,EAAiB,IAAItB,GAAUuB,KAAK,CAACC,EAAGC,IAC9B,IAAIrB,KAAKH,EAAgBuB,EAAEE,SAASpB,UACpC,IAAIF,KAAKH,EAAgBwB,EAAEC,SAASpB,WAQpD,IAJAqB,EAAAA,EAAAA,WAAU,KAAO,IAADC,EACQ,QAAtBA,EAAA/B,EAAegC,eAAO,IAAAD,GAAtBA,EAAwBE,eAAe,CAAEC,SAAU,YAClD,CAACT,KAECvB,EACH,OAAOiC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAOC,SAASC,SAAC,mBAG1C,MAAMC,EAAOC,KAAKC,MAAMC,aAAaC,QAAQ,SAE7C,OACET,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAOQ,SAASN,UAC9BO,EAAAA,EAAAA,MAAA,MAAIV,UAAWC,EAAOU,YAAYR,SAAA,CAC/Bd,EAAeuB,IAAKC,IAAG,IAAAC,EAAA,OACtBD,EAAIE,SACFL,EAAAA,EAAAA,MAAA,MAAiBV,UAAWC,EAAOe,MAAMb,SAAA,EACvCJ,EAAAA,EAAAA,KAAA,QAAMC,WAAWiB,EAAAA,EAAAA,GAAKhB,EAAOiB,UAAWjB,EAAOkB,MAAMhB,SAC3B,QAD2BW,EACtC,OAAZhD,QAAY,IAAZA,OAAY,EAAZA,EAAcsC,KAAKgB,YAAI,IAAAN,EAAAA,EAAI,MAE9Bf,EAAAA,EAAAA,KAAA,QAAMC,UAAWC,EAAOoB,gBAAgBlB,SAAEU,EAAIS,WAC9CvB,EAAAA,EAAAA,KAAA,QAAMC,UAAWC,EAAOsB,eAAepB,SACpCU,EAAIpB,OACDzB,EAAgB6C,EAAIpB,QACpB,yBARCoB,EAAI5D,KAYbyD,EAAAA,EAAAA,MAAA,MAAiBV,UAAWC,EAAOuB,OAAOrB,SAAA,EACxCJ,EAAAA,EAAAA,KAAA,QAAMC,WAAWiB,EAAAA,EAAAA,GAAKhB,EAAOiB,UAAWjB,EAAOwB,OAAOtB,SACnDC,EAAOA,EAAKsB,SAAW,UAE1B3B,EAAAA,EAAAA,KAAA,QAAMC,UAAWC,EAAO0B,iBAAiBxB,SAAEU,EAAIS,WAC/CvB,EAAAA,EAAAA,KAAA,QAAMC,UAAWC,EAAO2B,gBAAgBzB,SACrCU,EAAIpB,OACDzB,EAAgB6C,EAAIpB,QACpB,yBARCoB,EAAI5D,MAchBS,IACCqC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAO4B,YAAY1B,SAC/BzC,EAAKoE,KAAKC,WAAW,WACpBhC,EAAAA,EAAAA,KAAA,OACEiC,IAAKC,IAAIC,gBAAgBxE,GACzByE,IAAI,eACJnC,UAAWC,EAAOmC,gBAGpBrC,EAAAA,EAAAA,KAAA,QAAAI,SAAOzC,EAAK0D,UAMlBrB,EAAAA,EAAAA,KAAA,OAAKsC,IAAKzE,QAIlB,C","sources":["redux/public/selectorsChats.js","hooks/useChats.js","webpack://my-react-app/./src/pages/ConversationsPage/ConversationsPage.module.css?9d95","pages/ConversationsPage/index.js","pages/ConversationsPage/ConversationsPage.jsx"],"sourcesContent":["import { createSelector } from \"reselect\";\n\nconst selectChatsState = (state) => state.chats;\n\nexport const selectActiveChats = createSelector(\n  [selectChatsState],\n  (chatsState) => chatsState.activeChats\n);\n\nexport const selectChats = createSelector(\n  [selectChatsState],\n  (chatsState) => chatsState.chats\n);\n\nexport const selectLoading = createSelector(\n  [selectChatsState],\n  (chatsState) => chatsState.loading\n);\n\nexport const selectError = createSelector(\n  [selectChatsState],\n  (chatsState) => chatsState.error\n);\n\nexport const selectVisitedChatIds = createSelector(\n  [selectChatsState],\n  (chatsState) => chatsState.visitedChatIds\n);\n\nconst chatByIdSelectorCache = {};\n\nexport const selectChatById = (chatId) => {\n  if (!chatByIdSelectorCache[chatId]) {\n    chatByIdSelectorCache[chatId] = createSelector(\n      [selectChats],\n      (chats) => chats.find((chat) => chat.id === chatId) || null\n    );\n  }\n  return chatByIdSelectorCache[chatId];\n};\n","import { useDispatch, useSelector } from \"react-redux\";\nimport {\n  selectError,\n  selectActiveChats,\n  selectLoading,\n  selectChats,\n  selectChatById,\n  selectVisitedChatIds,\n} from \"../redux/public/selectorsChats\";\n\nexport const useChats = () => {\n  const dispatch = useDispatch();\n  const activeChats = useSelector(selectActiveChats);\n  const isLoading = useSelector(selectLoading);\n  const errorChats = useSelector(selectError);\n  const chats = useSelector(selectChats);\n  const chatById = useSelector(selectChatById);\n  const visitedChatIds = useSelector(selectVisitedChatIds);\n\n  return {\n    activeChats,\n    isLoading,\n    errorChats,\n    chats,\n    chatById,\n    dispatch,\n    visitedChatIds,\n  };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"chatPage\":\"ConversationsPage_chatPage__iHtDC\",\"messageList\":\"ConversationsPage_messageList__UOKyd\",\"outbox\":\"ConversationsPage_outbox__vbClZ\",\"inbox\":\"ConversationsPage_inbox__FdOzf\",\"ownerName\":\"ConversationsPage_ownerName__A0CU9\",\"left\":\"ConversationsPage_left__YpJWE\",\"right\":\"ConversationsPage_right__suqrc\",\"msgOutboxContent\":\"ConversationsPage_msgOutboxContent__4-udD\",\"timestampOutbox\":\"ConversationsPage_timestampOutbox__WioDZ\",\"msgInboxContent\":\"ConversationsPage_msgInboxContent__013QE\",\"timestampInbox\":\"ConversationsPage_timestampInbox__Ch2ye\",\"filePreview\":\"ConversationsPage_filePreview__bdJ60\",\"imagePreview\":\"ConversationsPage_imagePreview__kPE-I\"};","import ConversationsPage from \"./ConversationsPage\";\n\nexport default ConversationsPage;\n","import React, { useRef, useEffect } from \"react\";\n\nimport { useOutletContext } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\nimport { useChats } from \"../../hooks/useChats\";\n\nimport clsx from \"clsx\";\n\nimport styles from \"./ConversationsPage.module.css\";\n\nexport default function ConversationsPage() {\n  const { chatId } = useParams();\n  const { chats } = useChats();\n  const { file } = useOutletContext();\n\n  const messagesEndRef = useRef(null);\n\n  const selectedChat = chats.find((chat) => chat.id === chatId);\n\n  const messages = selectedChat?.messages || [];\n\n  const formatTimestamp = (timestamp) => {\n    let date = new Date(timestamp);\n    if (isNaN(date.getTime())) {\n      const fixedTimestamp = timestamp.replace(\n        /(\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}):(\\d{2})\\.(\\d{3})Z$/,\n        \"$1:59.$3Z\"\n      );\n      date = new Date(fixedTimestamp);\n    }\n    if (isNaN(date.getTime())) return \"\";\n\n    if (date.getSeconds() > 59) date.setSeconds(59);\n\n    const formattedTime = date.toLocaleTimeString([], {\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n    });\n\n    const day = date.getDate();\n    const month = date.toLocaleString(\"default\", { month: \"long\" });\n    const year = date.getFullYear();\n\n    return `${day} ${month} ${year}-${formattedTime}`;\n  };\n\n  const sortedMessages = [...messages].sort((a, b) => {\n    const dateA = new Date(formatTimestamp(a.sentAt)).getTime();\n    const dateB = new Date(formatTimestamp(b.sentAt)).getTime();\n    return dateA - dateB; // de la cel mai vechi la cel mai nou\n  });\n\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  }, [sortedMessages]);\n\n  if (!selectedChat) {\n    return <div className={styles.notFound}>Chat not found</div>;\n  }\n\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n\n  return (\n    <div className={styles.chatPage}>\n      <ul className={styles.messageList}>\n        {sortedMessages.map((msg) =>\n          msg.isInbox ? (\n            <li key={msg.id} className={styles.inbox}>\n              <span className={clsx(styles.ownerName, styles.left)}>\n                {selectedChat?.user.name ?? \"\"}\n              </span>\n              <span className={styles.msgInboxContent}>{msg.content}</span>\n              <span className={styles.timestampInbox}>\n                {msg.sentAt\n                  ? formatTimestamp(msg.sentAt)\n                  : \"Time not available\"}\n              </span>\n            </li>\n          ) : (\n            <li key={msg.id} className={styles.outbox}>\n              <span className={clsx(styles.ownerName, styles.right)}>\n                {user ? user.username : \"User\"}\n              </span>\n              <span className={styles.msgOutboxContent}>{msg.content}</span>\n              <span className={styles.timestampOutbox}>\n                {msg.sentAt\n                  ? formatTimestamp(msg.sentAt)\n                  : \"Time not available\"}\n              </span>\n            </li>\n          )\n        )}\n\n        {file && (\n          <li className={styles.filePreview}>\n            {file.type.startsWith(\"image/\") ? (\n              <img\n                src={URL.createObjectURL(file)}\n                alt=\"File Preview\"\n                className={styles.imagePreview}\n              />\n            ) : (\n              <span>{file.name}</span>\n            )}\n          </li>\n        )}\n\n        {/* Referință pentru scroll */}\n        <div ref={messagesEndRef} />\n      </ul>\n    </div>\n  );\n}\n"],"names":["selectChatsState","state","chats","selectActiveChats","createSelector","chatsState","activeChats","selectChats","selectLoading","loading","selectError","error","selectVisitedChatIds","visitedChatIds","chatByIdSelectorCache","selectChatById","chatId","find","chat","id","useChats","dispatch","useDispatch","useSelector","isLoading","errorChats","chatById","useParams","file","useOutletContext","messagesEndRef","useRef","selectedChat","messages","formatTimestamp","timestamp","date","Date","isNaN","getTime","fixedTimestamp","replace","getSeconds","setSeconds","formattedTime","toLocaleTimeString","hour","minute","day","getDate","month","toLocaleString","year","getFullYear","concat","sortedMessages","sort","a","b","sentAt","useEffect","_messagesEndRef$curre","current","scrollIntoView","behavior","_jsx","className","styles","notFound","children","user","JSON","parse","localStorage","getItem","chatPage","_jsxs","messageList","map","msg","_selectedChat$user$na","isInbox","inbox","clsx","ownerName","left","name","msgInboxContent","content","timestampInbox","outbox","right","username","msgOutboxContent","timestampOutbox","filePreview","type","startsWith","src","URL","createObjectURL","alt","imagePreview","ref"],"sourceRoot":""}