{"version":3,"file":"static/js/782.9273a75d.chunk.js","mappings":"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","sources":["utils/safeToDate.js","webpack://my-react-app/./src/components/ChatsList/ChatsList.module.css?3c66","components/ChatsList/ChatsList.jsx","components/ChatsList/index.js","webpack://my-react-app/./src/components/commonComponents/ChatInput/ChatInput.module.css?8275","components/commonComponents/ChatInput/index.js","components/commonComponents/ChatInput/ChatInput.jsx","webpack://my-react-app/./src/components/ChatsAside/ChatsAside.module.css?1726","components/ChatsAside/ChatsAside.jsx","webpack://my-react-app/./src/components/ActiveChatModal/ActiveChatModal.module.css?f0c9","components/ActiveChatModal/ActiveChatModal.jsx","webpack://my-react-app/./src/components/ChatHeader/ChatHeader.module.css?1ebc","components/ChatHeader/ChatHeader.jsx","components/ChatHeader/index.js","webpack://my-react-app/./src/pages/ChatPage/ChatPage.module.css?88db","pages/ChatPage/index.js","pages/ChatPage/ChatPage.jsx","redux/public/selectorsChats.js","hooks/useChats.js"],"sourcesContent":["// Repară timestamp-urile \"corupte\" și întoarce un obiect Date valid sau null\nexport default function safeToDate(ts) {\n  if (!ts) return null;\n\n  // 1) încercare directă\n  const d1 = new Date(ts);\n  if (!isNaN(d1)) return d1;\n\n  // 2) repară secunde > 59 în ISO de forma 2025-03-29T16:06:66.190Z\n  const fixed = ts.replace(\n    /T(\\d{2}):(\\d{2}):(\\d{2})\\.(\\d{3})Z$/,\n    (_, hh, mm, ss, ms) =>\n      `T${hh}:${mm}:${Math.min(Number(ss), 59)\n        .toString()\n        .padStart(2, \"0\")}.${ms}Z`\n  );\n  const d2 = new Date(fixed);\n  if (!isNaN(d2)) return d2;\n\n  // 3) ultim fallback\n  const d3 = new Date(Date.parse(ts));\n  return isNaN(d3) ? null : d3;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ChatsList_list__I-cRZ\",\"listItem\":\"ChatsList_listItem__kPu93\",\"active\":\"ChatsList_active__LcVu2\",\"isBlocked\":\"ChatsList_isBlocked__bvkN+\",\"imgCont\":\"ChatsList_imgCont__pOqR3\",\"userImg\":\"ChatsList_userImg__Bdvyb\",\"isOnline\":\"ChatsList_isOnline__xmj-1\",\"online\":\"ChatsList_online__oLjAE\",\"notOnline\":\"ChatsList_notOnline__gBOoL\",\"infoCont\":\"ChatsList_infoCont__rZvnu\",\"name\":\"ChatsList_name__oTa81\",\"lastMessage\":\"ChatsList_lastMessage__AJabn\",\"notRead\":\"ChatsList_notRead__fSYdV\",\"settingsCont\":\"ChatsList_settingsCont__KMBhv\",\"btnCont\":\"ChatsList_btnCont__RAUBe\",\"modalCont\":\"ChatsList_modalCont__eVDCI\",\"modalContDark\":\"ChatsList_modalContDark__gC0RD\",\"modalContViolet\":\"ChatsList_modalContViolet__NCs2Q\",\"modalBtn\":\"ChatsList_modalBtn__0dJNK\",\"modalBtnB\":\"ChatsList_modalBtnB__jzQ2Y\",\"modalBtnNb\":\"ChatsList_modalBtnNb__ZrIWi\",\"modalBtnNotLight\":\"ChatsList_modalBtnNotLight__cv2Xy\"};","import React, { useEffect, useRef, useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { useMediaQuery } from \"react-responsive\";\n\nimport { NavLink, useNavigate, useParams } from \"react-router-dom\";\n\nimport { useDispatch } from \"react-redux\";\nimport {\n  accessChat,\n  toggleBlockUser,\n  deleteUser,\n  markChatAsRead,\n} from \"../../redux/public/chatsSlice\"; // Assuming this is your async action\n\nimport { useChats } from \"../../hooks/useChats\";\n\nimport clsx from \"clsx\";\n\nimport safeToDate from \"../../utils/safeToDate\";\n\nimport { FaCog } from \"react-icons/fa\";\n\nimport roby from \"../../images/Roby.jpg\";\nimport gaby from \"../../images/teamMembersPhoto/Roby.jpg\";\n\nimport styles from \"./ChatsList.module.css\";\n\nconst breakpoints = {\n  mobile: \"(max-width: 767px)\",\n  tablet: \"(min-width:768px)\",\n  desktop: \"(min-width:1115px)\",\n};\nexport default function ChatsList({ search, theme }) {\n  const { chats } = useChats();\n  const { chatId } = useParams();\n  const modalRef = useRef(null);\n\n  const navigate = useNavigate();\n\n  const [reloadMap, setReloadMap] = useState({});\n  const [isSettingsVisible, setIsSettingsVisible] = useState(false);\n\n  const dispatch = useDispatch();\n\n  // console.log(\"chats :\", chats);\n\n  useEffect(() => {\n    function handleClickOutside(event) {\n      if (modalRef.current && !modalRef.current.contains(event.target)) {\n        setIsSettingsVisible(false);\n      }\n    }\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [modalRef]);\n\n  const isMobile = useMediaQuery({ query: breakpoints.mobile });\n\n  const handleImageError = (chatId) => {\n    setTimeout(() => {\n      setReloadMap((prev) => ({\n        ...prev,\n        [chatId]: (prev[chatId] || 0) + 1,\n      }));\n    }, 1000);\n  };\n\n  // var 1 cu reduce\n  // const getLastInboxMessage = (chat) => {\n  //   const inboxMessages = chat?.messages?.filter((msg) => msg?.isInbox);\n  //   if (!inboxMessages?.length) return null;\n  //   const lastInboxMessage = inboxMessages?.reduce((latest, msg) =>\n  //     new Date(safeToDate(msg.sentAt)) > new Date(safeToDate(latest.sentAt))\n  //       ? msg\n  //       : latest\n  //   );\n\n  //   console.log(lastInboxMessage);\n\n  //   return lastInboxMessage;\n  // };\n\n  // var 2 cu reduce\n  // function getLastInboxMessage(chat) {\n  //   const inbox = chat?.messages?.filter((m) => m?.isInbox) ?? [];\n  //   if (!inbox.length) return null;\n\n  //   return inbox.reduce((latest, msg) => {\n  //     const dMsg = safeToDate(msg.sentAt);\n  //     const dLatest = safeToDate(latest.sentAt);\n  //     if (!dLatest) return msg; // dacă latest e invalid, ia msg\n  //     if (!dMsg) return latest; // dacă msg e invalid, păstrează latest\n  //     return dMsg > dLatest ? msg : latest;\n  //   });\n  // }\n\n  // var 3 cu sort\n  // const getLastInboxMessage = (chat) => {\n  //   if (!chat?.messages) return null;\n\n  //   const inboxMessages = chat.messages.filter((msg) => msg?.isInbox);\n  //   if (!inboxMessages.length) return null;\n\n  //   const sortedInboxMessages = inboxMessages\n  //     .slice() // copie ca să nu modifici array-ul original\n  //     .sort((a, b) => safeToDate(a.sentAt) - safeToDate(b.sentAt));\n\n  //   return sortedInboxMessages[sortedInboxMessages.length - 1] || null;\n  // };\n\n  // var 4 a mea cu sort\n  const getLastInboxMessage = (chat) => {\n    const inboxMessages = chat?.messages?.filter((msg) => msg?.isInbox);\n    if (!inboxMessages?.length) return null;\n    const sortedInboxMessages = inboxMessages?.sort(\n      (a, b) => safeToDate(a.sentAt) - safeToDate(b.sentAt)\n    );\n\n    // console.log(\"lastInboxMessage :\", sortedInboxMessages);\n    const indexOfLastMessage = Number(sortedInboxMessages.length - 1);\n\n    // console.log(indexOfLastMessage);\n\n    return sortedInboxMessages[indexOfLastMessage];\n  };\n\n  const filteredChats = chats?.filter((chat) =>\n    chat?.user?.name?.toLowerCase().includes(search.toLowerCase())\n  );\n\n  function handleClick() {\n    setIsSettingsVisible(!isSettingsVisible);\n  }\n  function toggleBlock() {\n    dispatch(toggleBlockUser({ chatId }));\n  }\n\n  function deletehat() {\n    dispatch(deleteUser({ chatId }));\n  }\n\n  return (\n    <ul className={styles.list}>\n      {filteredChats.map((chat) => (\n        <li key={chat.id}>\n          <NavLink\n            to={`/home/chat/${chat.id}`}\n            className={({ isActive }) =>\n              clsx(styles.listItem, {\n                [styles.active]: isActive,\n                [styles.isBlocked]: chat?.user?.isBlocked, // folosește starea userului din chat\n              })\n            }\n            onClick={() => {\n              dispatch(accessChat({ chatId: chat.id }));\n              dispatch(markChatAsRead({ chatId }));\n            }}>\n            <div className={styles.imgCont}>\n              <img\n                key={reloadMap[chat.id] || 0}\n                className={styles.userImg}\n                src={chat.id === \"admin\" ? gaby : chat?.user?.avatar ?? roby}\n                alt=\"User img\"\n                loading=\"lazy\"\n                onError={() => handleImageError(chat.id)}\n              />\n              <div\n                className={clsx(\n                  styles.isOnline,\n                  chat?.user?.isOnline ? styles.online : styles.notOnline\n                )}></div>\n            </div>\n            <div className={styles.infoCont}>\n              <p className={styles.name}>{chat?.user?.name}</p>\n              <p\n                className={clsx(\n                  styles.lastMessage,\n                  getLastInboxMessage(chat)?.isRead === false && styles.notRead\n                )}>\n                {getLastInboxMessage(chat)?.content || \"No messages yet\"}\n              </p>\n            </div>\n            {chat?.id !== \"admin\" && chat?.id !== \"global\" && (\n              <div className={styles.settingsCont}>\n                <button\n                  onClick={handleClick}\n                  type=\"button\"\n                  className={styles.btnCont}>\n                  <FaCog\n                    size={isMobile ? 12 : 18}\n                    color=\"#161616cc\"\n                    className={styles.cogIcon}\n                  />\n                </button>\n                {isSettingsVisible && chat?.id === chatId && (\n                  <div\n                    ref={modalRef}\n                    className={clsx(\n                      styles.modalCont,\n                      theme === \"dark\" && styles.modalContDark,\n                      theme === \"violet\" && styles.modalContViolet\n                    )}>\n                    <button\n                      type=\"button\"\n                      className={clsx(\n                        styles.modalBtn,\n                        chat?.user?.isBlocked\n                          ? styles.modalBtnB\n                          : styles.modalBtnNb\n                      )}\n                      onClick={toggleBlock}>\n                      {chat?.user?.isBlocked ? `Unblock...🔓` : `Block...🚫`}\n                    </button>\n                    <button\n                      type=\"button\"\n                      className={clsx(\n                        styles.modalBtn,\n                        theme !== \"light\" && styles.modalBtnNotLight\n                      )}\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        e.preventDefault();\n                        deletehat();\n                        navigate(\"/home/chat\");\n                      }}>\n                      Delete\n                    </button>\n                  </div>\n                )}\n              </div>\n            )}\n          </NavLink>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nChatsList.propTypes = {\n  search: PropTypes.string,\n  theme: PropTypes.string,\n};\n","import ChatsList from \"./ChatsList\";\n\nexport default ChatsList;\n","// extracted by mini-css-extract-plugin\nexport default {\"inputContainer\":\"ChatInput_inputContainer__IBOKh\",\"input\":\"ChatInput_input__s+2Y2\",\"inputCenter\":\"ChatInput_inputCenter__Ckgec\",\"inputInfo\":\"ChatInput_inputInfo__HNq2h\",\"autoResizeTextarea\":\"ChatInput_autoResizeTextarea__nF2eA\"};","import ChatInput from \"./ChatInput\";\n\nexport default ChatInput;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\n\nimport styles from \"./ChatInput.module.css\";\n\nexport default function ChatInput({\n  type,\n  placeholder,\n  required,\n  className,\n  name,\n  handleChange,\n  width,\n  value,\n  paddingLeft,\n  autoComplete,\n  handleBlur,\n  children,\n  textarea = false,\n}) {\n  const commonProps = {\n    autoComplete: autoComplete || \"off\",\n    style: { paddingLeft: paddingLeft || \"0px\" },\n    onChange: handleChange,\n    name: name || \"\",\n    className: clsx(styles.input, className),\n    placeholder: placeholder || \"\",\n    required: required || false,\n    value: value || \"\",\n    onBlur: handleBlur,\n  };\n\n  return (\n    <div style={{ width: width || \"auto\" }} className={styles.inputContainer}>\n      {textarea ? (\n        <textarea\n          {...commonProps}\n          rows=\"1\"\n          //   onInput={(e) => {\n          //     handleChange && handleChange(e);\n          //   }}\n          className={clsx(styles.input, className)} // adaugi o clasă\n        />\n      ) : (\n        <input\n          className={clsx(styles.input, className)}\n          {...commonProps}\n          type={type || \"text\"}\n        />\n      )}\n      {children}\n    </div>\n  );\n}\n\nChatInput.propTypes = {\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  paddingLeft: PropTypes.string,\n  autoComplete: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  name: PropTypes.string,\n  type: PropTypes.string,\n  handleChange: PropTypes.func,\n  handleBlur: PropTypes.func,\n  required: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  textarea: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  placeholder: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  children: PropTypes.node,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"aside\":\"ChatsAside_aside__3mHuE\",\"asideHeader\":\"ChatsAside_asideHeader__go94t\",\"asideHeaderTitle\":\"ChatsAside_asideHeaderTitle__ALyVk\",\"asideHeaderCounter\":\"ChatsAside_asideHeaderCounter__rN0LL\",\"asideContent\":\"ChatsAside_asideContent__KW7KY\",\"asideInput\":\"ChatsAside_asideInput__uYH6S\",\"asideInputButton\":\"ChatsAside_asideInputButton__B2-T-\",\"asideInputSearchIcon\":\"ChatsAside_asideInputSearchIcon__faP6M\",\"asideChatListCont\":\"ChatsAside_asideChatListCont__+VFhF\"};","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\n// import { useChats } from \"../../hooks/useChats\";\n\nimport ChatsList from \"../ChatsList\";\nimport ChatInput from \"../commonComponents/ChatInput\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMagnifyingGlass } from \"@fortawesome/free-solid-svg-icons\";\n\nimport styles from \"./ChatsAside.module.css\";\n\nexport default function ChatsAside({ isBlocked, theme }) {\n  // const { activeChats } = useChats();\n\n  const [search, setSearch] = useState(\"\");\n\n  return (\n    <aside className={styles.aside}>\n      {/* <div className={styles.asideHeader}>\n        <p className={styles.asideHeaderTitle}>Active</p>\n        <div className={styles.asideHeaderCounter}>{activeChats}</div>\n      </div> */}\n      <div className={styles.asideContent}>\n        <ChatInput\n          className={styles.asideInput}\n          paddingLeft={\"18px\"}\n          placeholder={\"Search...\"}\n          value={search}\n          handleChange={(e) => setSearch(e.target.value)}>\n          <button className={styles.asideInputButton}>\n            <FontAwesomeIcon\n              className={styles.asideInputSearchIcon}\n              icon={faMagnifyingGlass}\n            />\n          </button>\n        </ChatInput>\n        <div className={styles.asideChatListCont}>\n          <ChatsList theme={theme} search={search} isBlocked={isBlocked} />\n        </div>\n      </div>\n    </aside>\n  );\n}\n\nChatsAside.propTypes = {\n  isBlocked: PropTypes.bool,\n  theme: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"chatList\":\"ActiveChatModal_chatList__Q9fFe\",\"noActive\":\"ActiveChatModal_noActive__PZy9L\",\"chatListItem\":\"ActiveChatModal_chatListItem__6sAea\",\"avatar\":\"ActiveChatModal_avatar__EvQWo\",\"usersInfo\":\"ActiveChatModal_usersInfo__coDBx\",\"userName\":\"ActiveChatModal_userName__oP5eh\",\"reply\":\"ActiveChatModal_reply__O8ION\"};","import React, { useEffect, useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { useChats } from \"../../hooks/useChats\";\n\nimport gaby from \"../../images/teamMembersPhoto/Roby.jpg\";\n\nimport styles from \"./ActiveChatModal.module.css\";\n\nexport default function ActiveChatModal({ chats, closeModal }) {\n  const modalRef = useRef();\n  const { visitedChatIds } = useChats();\n\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (modalRef.current && !modalRef.current.contains(event.target)) {\n        closeModal();\n      }\n    };\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [closeModal]);\n\n  const activeChats = chats.filter((chat) => visitedChatIds.includes(chat.id));\n\n  return (\n    <div ref={modalRef}>\n      {activeChats.length === 0 ? (\n        <p className={styles.noActive}>There are no active chats !</p>\n      ) : (\n        <ul className={styles.chatList}>\n          {activeChats.map((chat) => (\n            <li key={chat.id} className={styles.chatListItem}>\n              <Link to={`/home/chat/${chat.id}`} onClick={closeModal}>\n                <img\n                  src={chat.id === \"admin\" ? gaby : chat?.user?.avatar}\n                  alt=\"Avatar\"\n                  className={styles.avatar}\n                  loading=\"lazy\"\n                />\n                <div className={styles.usersInfo}>\n                  <span className={styles.userName}>{chat?.user?.name}</span>\n                  <span className={styles.reply}>Reply...</span>\n                </div>\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n\nActiveChatModal.propTypes = {\n  chats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      user: PropTypes.shape({\n        avatar: PropTypes.string.isRequired,\n        id: PropTypes.string.isRequired,\n      }).isRequired,\n    })\n  ).isRequired,\n  closeModal: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"ChatHeader_header__sYB9S\",\"asideHeader\":\"ChatHeader_asideHeader__3HEkW\",\"asideHeaderTitle\":\"ChatHeader_asideHeaderTitle__jNGTA\",\"asideHeaderCounter\":\"ChatHeader_asideHeaderCounter__S7TPJ\",\"chatHeaderRight\":\"ChatHeader_chatHeaderRight__UCw0f\",\"leftCont\":\"ChatHeader_leftCont__wIxId\",\"chatInfo\":\"ChatHeader_chatInfo__yqipb\",\"avatar\":\"ChatHeader_avatar__xU414\",\"usersInfo\":\"ChatHeader_usersInfo__T6Apf\",\"userName\":\"ChatHeader_userName__45JlD\",\"noLight\":\"ChatHeader_noLight__A3NKs\",\"reply\":\"ChatHeader_reply__uD5RZ\",\"rightContButton\":\"ChatHeader_rightContButton__OKbTe\",\"button\":\"ChatHeader_button__Dm29Y\"};","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { useParams } from \"react-router-dom\";\n\nimport { useChats } from \"../../hooks/useChats\";\n\nimport clsx from \"clsx\";\n\nimport ActiveChatModal from \"../ActiveChatModal/ActiveChatModal\";\n\nimport { FaEllipsisH } from \"react-icons/fa\";\n\nimport gaby from \"../../images/teamMembersPhoto/Roby.jpg\";\n\nimport styles from \"./ChatHeader.module.css\";\n\nfunction ChatHeader({ theme }) {\n  const { chatId } = useParams();\n  const { activeChats, chats } = useChats();\n  const selectedChat = chats.find((chat) => chat.id === chatId);\n\n  const [showModal, setShowModal] = useState(false);\n\n  const toggleModal = () => setShowModal((prev) => !prev);\n\n  return (\n    <div className={clsx(styles.header)}>\n      <div className={styles.asideHeader}>\n        <p\n          className={clsx(\n            styles.asideHeaderTitle,\n            theme !== \"light\" && styles.noLight\n          )}>\n          Active\n        </p>\n        <div className={styles.asideHeaderCounter}>{activeChats}</div>\n      </div>\n      <div className={styles.chatHeaderRight}>\n        {showModal && (\n          <ActiveChatModal chats={chats} closeModal={toggleModal} />\n        )}\n        {selectedChat && (\n          <div className={styles.chatInfo}>\n            <img\n              src={\n                selectedChat.id === \"admin\" ? gaby : selectedChat.user.avatar\n              }\n              alt=\"Avatar\"\n              className={styles.avatar}\n            />\n            <div className={styles.usersInfo}>\n              <span\n                className={clsx(\n                  styles.userName,\n                  theme !== \"light\" && styles.noLight\n                )}>\n                {selectedChat?.user?.name}\n              </span>\n              <span className={styles.reply}>Reply</span>\n            </div>\n          </div>\n        )}\n        <button className={clsx(styles.rightContButton)} onClick={toggleModal}>\n          <FaEllipsisH size={16} className={styles.button} />\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default ChatHeader;\n\nChatHeader.propTypes = {\n  theme: PropTypes.string,\n};\n","import ChatHeader from \"./ChatHeader\";\n\nexport default ChatHeader;\n","// extracted by mini-css-extract-plugin\nexport default {\"cont\":\"ChatPage_cont__7VJ-l\",\"lightCont\":\"ChatPage_lightCont__WQleb\",\"darkCont\":\"ChatPage_darkCont__bU2Pt\",\"violetCont\":\"ChatPage_violetCont__ZSN2u\",\"content\":\"ChatPage_content__Rt+WH\",\"main\":\"ChatPage_main__6DIbi\",\"sendMsgCont\":\"ChatPage_sendMsgCont__gCZXa\",\"sendMsgInput\":\"ChatPage_sendMsgInput__2pJuU\",\"writeMsgButton\":\"ChatPage_writeMsgButton__UWYJz\",\"paperClipIcon\":\"ChatPage_paperClipIcon__b6Umr\",\"emojiWrapper\":\"ChatPage_emojiWrapper__3QUTM\",\"smileIcon\":\"ChatPage_smileIcon__U6la2\",\"emojiPicker\":\"ChatPage_emojiPicker__WVEAX\",\"sendMsgButton\":\"ChatPage_sendMsgButton__kraaH\",\"sendBlocked\":\"ChatPage_sendBlocked__O52pu\",\"sendIcon\":\"ChatPage_sendIcon__MJcgz\",\"emojiPickerWrapper\":\"ChatPage_emojiPickerWrapper__MRts-\"};","import ChatPage from \"./ChatPage\";\n\nexport default ChatPage;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { Outlet } from \"react-router-dom\";\n\nimport clsx from \"clsx\";\n\nimport { useDispatch } from \"react-redux\";\nimport { updateChat } from \"../../redux/public/chatsSlice\";\nimport { useParams } from \"react-router-dom\";\nimport { useChats } from \"../../hooks/useChats\";\n\nimport ChatsAside from \"../../components/ChatsAside/ChatsAside\";\nimport ChatHeader from \"../../components/ChatHeader\";\nimport ChatInput from \"../../components/commonComponents/ChatInput\";\n\nimport { FaPaperclip, FaRegSmile, FaPaperPlane } from \"react-icons/fa\";\nimport EmojiPicker from \"emoji-picker-react\";\n\nimport styles from \"./ChatPage.module.css\";\n\nexport default function ChatPage() {\n  const { chatId } = useParams();\n  const dispatch = useDispatch();\n  const fileInputRef = useRef();\n  const { chats } = useChats();\n\n  const [message, setMessage] = useState(\"\");\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n  const [file, setFile] = useState(null);\n  const [isBlocked, setIsBlocked] = useState(false);\n\n  const user = chats.find((u) => u.id === chatId);\n\n  useEffect(() => {\n    if (user) {\n      setIsBlocked(user?.user?.isBlocked || false);\n    }\n  }, [user]);\n\n  // console.log(isBlocked);\n\n  const handleSendMsg = () => {\n    if (!message.trim()) return;\n\n    dispatch(\n      updateChat({\n        chatId,\n        newMessages: [\n          {\n            id: crypto.randomUUID(),\n            content: message,\n            isInbox: false,\n            sentAt: new Date().toISOString(),\n          },\n        ],\n      })\n    );\n    setMessage(\"\");\n    setShowEmojiPicker(false);\n    setFile(null);\n  };\n\n  const handleAttachClick = () => {\n    fileInputRef.current.click();\n  };\n\n  const handleFileChange = (e) => {\n    const selectedFile = e.target.files[0];\n    if (selectedFile) {\n      setFile(selectedFile);\n    }\n  };\n\n  const toggleEmojiPicker = () => {\n    setShowEmojiPicker((prev) => !prev);\n  };\n\n  const handleEmojiClick = (emojiData) => {\n    setMessage((prev) => prev + emojiData.emoji);\n  };\n\n  const theme = localStorage.getItem(\"theme\") || \"dark\";\n\n  return (\n    <div\n      className={clsx(\n        styles.cont,\n        theme === \"light\"\n          ? styles.lightCont\n          : theme === \"violet\"\n          ? styles.violetCont\n          : styles.darkCont\n      )}>\n      <ChatHeader theme={theme} />\n      <div className={clsx(styles.content)}>\n        <ChatsAside isBlocked={isBlocked} theme={theme} />\n        <section className={styles.main}>\n          <Outlet context={{ file }} />\n        </section>\n      </div>\n      <div className={styles.sendMsgCont}>\n        <ChatInput\n          type=\"textarea\"\n          textarea\n          width=\"100%\"\n          className={styles.sendMsgInput}\n          paddingLeft=\"5px\"\n          placeholder=\"Type here...\"\n          value={message}\n          handleChange={(e) => setMessage(e.target.value)}>\n          <button\n            type=\"button\"\n            className={styles.writeMsgButton}\n            onClick={handleAttachClick}>\n            <FaPaperclip className={styles.paperClipIcon} size={16} />\n          </button>\n          <input\n            type=\"file\"\n            ref={fileInputRef}\n            onChange={handleFileChange}\n            style={{ display: \"none\" }}\n          />\n\n          <div className={styles.emojiWrapper}>\n            <button\n              type=\"button\"\n              className={styles.writeMsgButton}\n              onClick={toggleEmojiPicker}>\n              <FaRegSmile className={styles.smileIcon} size={16} />\n            </button>\n            {showEmojiPicker && (\n              <div className={styles.emojiPicker}>\n                <EmojiPicker\n                  onEmojiClick={handleEmojiClick}\n                  width={250}\n                  height={300}\n                  previewConfig={{ showPreview: false }}\n                  searchPlaceHolder=\"Search emoji...\"\n                />\n              </div>\n            )}\n          </div>\n        </ChatInput>\n\n        <button\n          disabled={isBlocked}\n          type=\"button\"\n          className={clsx(\n            styles.sendMsgButton,\n            isBlocked && styles.sendBlocked\n          )}\n          onClick={handleSendMsg}>\n          <FaPaperPlane className={styles.sendIcon} size={18} />\n        </button>\n      </div>\n    </div>\n  );\n}\n","import { createSelector } from \"reselect\";\n\nconst selectChatsState = (state) => state.chats;\n\nexport const selectActiveChats = createSelector(\n  [selectChatsState],\n  (chatsState) => chatsState.activeChats\n);\n\nexport const selectChats = createSelector(\n  [selectChatsState],\n  (chatsState) => chatsState.chats\n);\n\nexport const selectLoading = createSelector(\n  [selectChatsState],\n  (chatsState) => chatsState.loading\n);\n\nexport const selectError = createSelector(\n  [selectChatsState],\n  (chatsState) => chatsState.error\n);\n\nexport const selectVisitedChatIds = createSelector(\n  [selectChatsState],\n  (chatsState) => chatsState.visitedChatIds\n);\n\nconst chatByIdSelectorCache = {};\n\nexport const selectChatById = (chatId) => {\n  if (!chatByIdSelectorCache[chatId]) {\n    chatByIdSelectorCache[chatId] = createSelector(\n      [selectChats],\n      (chats) => chats.find((chat) => chat.id === chatId) || null\n    );\n  }\n  return chatByIdSelectorCache[chatId];\n};\n","import { useDispatch, useSelector } from \"react-redux\";\nimport {\n  selectError,\n  selectActiveChats,\n  selectLoading,\n  selectChats,\n  selectChatById,\n  selectVisitedChatIds,\n} from \"../redux/public/selectorsChats\";\n\nexport const useChats = () => {\n  const dispatch = useDispatch();\n  const activeChats = useSelector(selectActiveChats);\n  const isLoading = useSelector(selectLoading);\n  const errorChats = useSelector(selectError);\n  const chats = useSelector(selectChats);\n  const chatById = useSelector(selectChatById);\n  const visitedChatIds = useSelector(selectVisitedChatIds);\n\n  return {\n    activeChats,\n    isLoading,\n    errorChats,\n    chats,\n    chatById,\n    dispatch,\n    visitedChatIds,\n  };\n};\n"],"names":["safeToDate","ts","d1","Date","isNaN","fixed","replace","_","hh","mm","ss","ms","concat","Math","min","Number","toString","padStart","d2","d3","parse","breakpoints","_ref","search","theme","chats","useChats","chatId","useParams","modalRef","useRef","navigate","useNavigate","reloadMap","setReloadMap","useState","isSettingsVisible","setIsSettingsVisible","dispatch","useDispatch","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","isMobile","useMediaQuery","query","getLastInboxMessage","chat","_chat$messages","inboxMessages","messages","filter","msg","isInbox","length","sortedInboxMessages","sort","a","b","sentAt","filteredChats","_chat$user","_chat$user$name","user","name","toLowerCase","includes","handleClick","toggleBlock","toggleBlockUser","_jsx","className","styles","list","children","map","_chat$user$avatar","_chat$user3","_chat$user4","_chat$user5","_getLastInboxMessage","_getLastInboxMessage2","_chat$user6","_chat$user7","_jsxs","NavLink","to","id","_ref2","_chat$user2","isActive","clsx","listItem","active","isBlocked","onClick","accessChat","markChatAsRead","imgCont","userImg","src","gaby","avatar","roby","alt","loading","onError","setTimeout","prev","_objectSpread","handleImageError","isOnline","online","notOnline","infoCont","lastMessage","isRead","notRead","content","settingsCont","type","btnCont","FaCog","size","color","cogIcon","ref","modalCont","modalContDark","modalContViolet","modalBtn","modalBtnB","modalBtnNb","modalBtnNotLight","e","stopPropagation","preventDefault","deleteUser","placeholder","required","handleChange","width","value","paddingLeft","autoComplete","handleBlur","textarea","commonProps","style","onChange","onBlur","rows","ChatsAside","setSearch","ChatInput","FontAwesomeIcon","icon","faMagnifyingGlass","ChatsList","ActiveChatModal","closeModal","visitedChatIds","activeChats","Link","_selectedChat$user","selectedChat","find","showModal","setShowModal","toggleModal","FaEllipsisH","fileInputRef","message","setMessage","showEmojiPicker","setShowEmojiPicker","file","setFile","setIsBlocked","u","_user$user","localStorage","getItem","ChatHeader","Outlet","context","handleAttachClick","click","FaPaperclip","selectedFile","files","display","toggleEmojiPicker","FaRegSmile","EmojiPicker","onEmojiClick","emojiData","emoji","height","previewConfig","showPreview","searchPlaceHolder","disabled","handleSendMsg","trim","updateChat","newMessages","crypto","randomUUID","toISOString","FaPaperPlane","selectChatsState","state","selectActiveChats","createSelector","chatsState","selectChats","selectLoading","selectError","error","selectVisitedChatIds","chatByIdSelectorCache","selectChatById","useSelector","isLoading","errorChats","chatById"],"sourceRoot":""}