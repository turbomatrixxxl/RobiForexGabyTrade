{"version":3,"file":"static/js/878.df729f76.chunk.js","mappings":"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","sources":["webpack://my-react-app/./src/components/ThemeSelector/ThemeSelector.module.css?ae7a","components/ThemeSelector/ThemeSelector.jsx","webpack://my-react-app/./src/components/LanguageSelector/LanguageSelector.module.css?d034","components/LanguageSelector/LanguageSelector.jsx","webpack://my-react-app/./src/components/InputAdi/Input.module.css?b114","components/InputAdi/Input.jsx","webpack://my-react-app/./src/components/modal/UpdateUser/UpdateUser.module.css?4294","components/modal/UpdateUser/UpdateUser.jsx","webpack://my-react-app/./src/components/Header/Header.module.css?4e72","components/Header/Header.jsx","components/Header/index.js","webpack://my-react-app/./src/components/SharedLayout/SharedLayout.module.css?d5af","components/SharedLayout/SharedLayout.jsx","webpack://my-react-app/./src/components/commonComponents/Modal/Modal.module.css?ed0b","components/commonComponents/Modal/Modal.jsx","webpack://my-react-app/./src/components/LogoSection/LogoSection.module.css?353c","components/LogoSection/LogoSection.jsx","webpack://my-react-app/./src/components/BotStatusCard/BotStatusCard.module.css?a877","webpack://my-react-app/./src/components/commonComponents/Loader/LiveSelector/LiveSelector.module.css?85ab","components/commonComponents/Loader/LiveSelector/index.js","components/commonComponents/Loader/LiveSelector/LiveSelector.jsx","components/BotStatusCard/BotStatusCard.jsx","webpack://my-react-app/./src/components/BotsStatus/BotsStatus.module.css?afb0","components/BotsStatus/BotsStatus.jsx","webpack://my-react-app/./src/components/Sidebar/Sidebar.module.css?6ffa","components/Sidebar/index.js","components/Sidebar/Sidebar.jsx","webpack://my-react-app/./src/components/ParametersForm/ParametersForm.module.css?83ea","components/ParametersForm/ParametersForm.jsx","webpack://my-react-app/./src/components/SidebarRight/SidebarRight.module.css?4565","components/SidebarRight/SidebarRight.jsx","webpack://my-react-app/./src/pages/HomePage/HomePage.module.css?5baa","pages/HomePage/HomePage.jsx","pages/HomePage/index.js","webpack://my-react-app/./src/components/ModalFooter/ModalFooter.module.css?899e","webpack://my-react-app/./src/components/commonComponents/FooterLogo/FooterLogo.module.css?c643","components/commonComponents/FooterLogo/FooterLogo.jsx","webpack://my-react-app/./src/components/commonComponents/FormButton/FormButton.module.css?d01f","components/commonComponents/FormButton/FormButton.jsx","components/ModalFooter/ModalFooter.jsx","webpack://my-react-app/./src/components/Footer/Footer.module.css?bcd4","components/Footer/Footer.jsx","hooks/useToggle.js","webpack://my-react-app/./src/components/commonComponents/Button/Button.module.css?4e57","components/commonComponents/Button/index.js","components/commonComponents/Button/Button.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"selector\":\"ThemeSelector_selector__UGq2p\",\"button\":\"ThemeSelector_button__dVBjT\",\"span\":\"ThemeSelector_span__TXBJ4\",\"spanDark\":\"ThemeSelector_spanDark__tzftB\",\"svg\":\"ThemeSelector_svg__g4HOZ\",\"svgDark\":\"ThemeSelector_svgDark__n1mQY\",\"options\":\"ThemeSelector_options__ZGEwm\",\"optionsDark\":\"ThemeSelector_optionsDark__iYmS-\",\"optionsViolet\":\"ThemeSelector_optionsViolet__2tTia\",\"option\":\"ThemeSelector_option__OPIKe\",\"optionDark\":\"ThemeSelector_optionDark__gEjSE\",\"activeOption\":\"ThemeSelector_activeOption__6Vkt+\",\"activeOptionViolet\":\"ThemeSelector_activeOptionViolet__QUHD9\"};","import React, { useState, useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport clsx from \"clsx\";\n\nimport { HiChevronDown, HiChevronUp } from \"react-icons/hi\";\n\nimport styles from \"./ThemeSelector.module.css\";\n\nexport default function ThemeSelector({ theme }) {\n  const [themeA, setTheme] = useState(theme || \"dark\");\n  const [isOpen, setIsOpen] = useState(false); // Controls dropdown open/close\n\n  const dropdownRef = useRef(null); // Ref for dropdown to detect clicks outside\n\n  const handleSelect = (selectedTheme) => {\n    setTheme(selectedTheme);\n    localStorage.setItem(\"theme\", selectedTheme); // Save theme to localStorage\n\n    setIsOpen(false); // Close the dropdown\n  };\n\n  // Close dropdown when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        setIsOpen(false); // Close dropdown if click is outside\n      }\n    };\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, []);\n\n  return (\n    <div className={styles.selector} ref={dropdownRef}>\n      {/* Display \"Theme\" when dropdown is closed */}\n      <button\n        className={styles.button}\n        onClick={() => setIsOpen((prev) => !prev)}>\n        <span\n          className={clsx(\n            styles.span,\n            themeA === \"dark\" || themeA === \"violet\"\n              ? styles.spanDark\n              : styles.span\n          )}>\n          Theme\n        </span>\n        {!isOpen ? (\n          <HiChevronDown\n            className={clsx(\n              styles.svg,\n              themeA === \"dark\" || themeA === \"violet\"\n                ? styles.svgDark\n                : styles.svg\n            )}\n          />\n        ) : (\n          <HiChevronUp\n            className={clsx(\n              styles.svg,\n              themeA === \"dark\" || themeA === \"violet\"\n                ? styles.svgDark\n                : styles.svg\n            )}\n          />\n        )}\n      </button>\n\n      {/* Dropdown options */}\n      {isOpen && (\n        <ul\n          className={clsx(\n            styles.options,\n            themeA === \"dark\" ? styles.optionsDark : styles.options,\n            themeA === \"violet\" ? styles.optionsViolet : styles.options\n          )}>\n          {[\"light\", \"dark\", \"violet\"].map((option) => (\n            <li\n              key={option}\n              className={clsx(\n                styles.option,\n                themeA === \"dark\" ? styles.optionDark : styles.option,\n                option === themeA &&\n                  (themeA === \"violet\"\n                    ? styles.activeOptionViolet\n                    : styles.activeOption)\n              )}\n              onClick={() => handleSelect(option)}>\n              {option.charAt(0).toUpperCase() + option.slice(1)}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n\nThemeSelector.propTypes = {\n  theme: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"selector\":\"LanguageSelector_selector__ubXbo\",\"button\":\"LanguageSelector_button__OpgVV\",\"span\":\"LanguageSelector_span__FGW6h\",\"spanDark\":\"LanguageSelector_spanDark__FvjiJ\",\"svg\":\"LanguageSelector_svg__rzwa-\",\"svgDark\":\"LanguageSelector_svgDark__Gc9TH\",\"options\":\"LanguageSelector_options__FaAT0\",\"optionsDark\":\"LanguageSelector_optionsDark__IE9gK\",\"optionsViolet\":\"LanguageSelector_optionsViolet__PTByL\",\"option\":\"LanguageSelector_option__yRyzm\",\"optionDark\":\"LanguageSelector_optionDark__yGAYw\",\"activeOption\":\"LanguageSelector_activeOption__UxQ6I\",\"activeOptionViolet\":\"LanguageSelector_activeOptionViolet__eqXo-\"};","import React, { useState, useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\n\n// import { useDispatch } from \"react-redux\";\n// import { updateTheme } from \"../../redux/private/operationsPrivate\"; // Adjust the import path for your Redux slice\n// import { useAuth } from \"../../hooks/useAuth\"; // Adjust the import path for your custom hook\n// import { refreshUser } from \"../../redux/auth/operationsAuth\";\n\nimport clsx from \"clsx\";\n\nimport { HiChevronDown, HiChevronUp } from \"react-icons/hi\";\n\nimport styles from \"./LanguageSelector.module.css\";\n\nexport default function LanguageSelector({ theme, lang }) {\n  // const dispatch = useDispatch();\n  // const { user } = useAuth(); // Get user info\n\n  const [langA, setLang] = useState(lang || \"english\");\n  const [isOpen, setIsOpen] = useState(false); // Controls dropdown open/close\n\n  const dropdownRef = useRef(null); // Ref for dropdown to detect clicks outside\n\n  const handleSelect = (selectedLang) => {\n    setLang(selectedLang);\n    // dispatch(updateTheme(selectedTheme)); // Dispatch action with selected theme\n\n    localStorage.setItem(\"lang\", selectedLang); // Save theme to localStorage\n    // Timeout to delay `refreshUser` to give backend time to update\n    // setTimeout(() => {\n    //   dispatch(refreshUser());\n    // }, 500); // Adjust timeout duration as necessary\n\n    setIsOpen(false); // Close the dropdown\n  };\n\n  // Close dropdown when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        setIsOpen(false); // Close dropdown if click is outside\n      }\n    };\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, []);\n\n  return (\n    <div className={styles.selector} ref={dropdownRef}>\n      {/* Display \"Theme\" when dropdown is closed */}\n      <button\n        className={styles.button}\n        onClick={() => setIsOpen((prev) => !prev)}>\n        <span\n          className={clsx(\n            styles.span,\n            theme === \"dark\" || theme === \"violet\"\n              ? styles.spanDark\n              : styles.span\n          )}>\n          Lang\n        </span>\n        {!isOpen ? (\n          <HiChevronDown\n            className={clsx(\n              styles.svg,\n              theme === \"dark\" || theme === \"violet\"\n                ? styles.svgDark\n                : styles.svg\n            )}\n          />\n        ) : (\n          <HiChevronUp\n            className={clsx(\n              styles.svg,\n              theme === \"dark\" || theme === \"violet\"\n                ? styles.svgDark\n                : styles.svg\n            )}\n          />\n        )}\n      </button>\n\n      {/* Dropdown options */}\n      {isOpen && (\n        <ul\n          className={clsx(\n            styles.options,\n            theme === \"dark\" ? styles.optionsDark : styles.options,\n            theme === \"violet\" ? styles.optionsViolet : styles.options\n          )}>\n          {[\"romanian\", \"english\"].map((option) => (\n            <li\n              key={option}\n              className={clsx(\n                styles.option,\n                theme === \"dark\" ? styles.optionDark : styles.option,\n                option === langA &&\n                  (theme === \"violet\"\n                    ? styles.activeOptionViolet\n                    : styles.activeOption)\n              )}\n              onClick={() => handleSelect(option)}>\n              {option.charAt(0).toUpperCase() + option.slice(1)}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n\nLanguageSelector.propTypes = {\n  lang: PropTypes.string,\n  theme: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"inputContainer\":\"Input_inputContainer__f0hpF\",\"input\":\"Input_input__N2Tq2\",\"light\":\"Input_light__VVP1V\",\"violetBorder\":\"Input_violetBorder__c4lCj\",\"darkColor\":\"Input_darkColor__iQ0yb\",\"commentInput\":\"Input_commentInput__NneGa\",\"normalColor\":\"Input_normalColor__-YTzT\",\"inputCenter\":\"Input_inputCenter__eCwF6\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport styles from \"./Input.module.css\";\n\nexport default function Input({\n  type,\n  placeholder,\n  required,\n  variant = \"\",\n  className,\n  name,\n  handleChange,\n  value,\n  paddingLeft,\n  autoComplete,\n  handleBlur,\n  isComment,\n  theme,\n}) {\n  // Verifică dacă este un câmp de comentarii\n  if (isComment) {\n    return (\n      <textarea\n        onChange={handleChange}\n        name={name || \"\"}\n        className={clsx(\n          styles.input, // Clasa generală pentru input\n          styles.commentInput, // Clasa specifică pentru comentarii\n          variant === \"center\" ? styles.inputCenter : styles.input,\n          theme === \"violet\" ? styles.violetBorder : styles.input,\n          theme === \"dark\" ? styles.darkColor : styles.normalColor,\n          className\n        )}\n        placeholder={placeholder || \"\"}\n        required={required || false}\n        value={value || \"\"}\n        onBlur={handleBlur}\n      />\n    );\n  }\n\n  // Dacă nu este câmp de comentarii, renderizează un input normal\n  return (\n    <input\n      autoComplete={autoComplete || \"off\"}\n      style={{ paddingLeft: paddingLeft || \"18px\" }}\n      onChange={handleChange}\n      name={name || \"\"}\n      className={clsx(\n        styles.input,\n        styles.light, // Clasa generală pentru input\n        variant === \"center\" ? styles.inputCenter : styles.input,\n        theme === \"violet\" ? styles.violetBorder : styles.input,\n        theme === \"dark\" ? styles.darkColor : styles.normalColor,\n        className\n      )}\n      type={type || \"text\"}\n      placeholder={placeholder || \"\"}\n      required={required || false}\n      value={value || \"\"}\n      onBlur={handleBlur}\n    />\n  );\n}\n\nInput.propTypes = {\n  type: PropTypes.string,\n  theme: PropTypes.string,\n  placeholder: PropTypes.string,\n  required: PropTypes.bool,\n  variant: PropTypes.string,\n  className: PropTypes.string,\n  name: PropTypes.string,\n  handleChange: PropTypes.func,\n  width: PropTypes.string,\n  value: PropTypes.string,\n  paddingLeft: PropTypes.string,\n  autoComplete: PropTypes.string,\n  handleBlur: PropTypes.func,\n  isComment: PropTypes.bool,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"modal-overlay-need\":\"UpdateUser_modal-overlay-need__GMGCX\",\"close-btn\":\"UpdateUser_close-btn__6og8z\",\"modalContainerNeed\":\"UpdateUser_modalContainerNeed__VFEHj\",\"contLight\":\"UpdateUser_contLight__J++Ux\",\"contDark\":\"UpdateUser_contDark__Lm4m-\",\"text\":\"UpdateUser_text__-b1vF\",\"textDark\":\"UpdateUser_textDark__Tadec\",\"btn\":\"UpdateUser_btn__tj+gh\",\"imgCont\":\"UpdateUser_imgCont__Mtnrq\",\"imgContViolet\":\"UpdateUser_imgContViolet__DGkO4\",\"imgContLight\":\"UpdateUser_imgContLight__H7ln0\",\"userImg\":\"UpdateUser_userImg__S8gcl\",\"imgPlusCont\":\"UpdateUser_imgPlusCont__ri+IF\",\"imgPlusBtn\":\"UpdateUser_imgPlusBtn__lekiL\",\"iconPlusViolet\":\"UpdateUser_iconPlusViolet__YkC2y\",\"textarea\":\"UpdateUser_textarea__1dWq7\",\"inputWrapper\":\"UpdateUser_inputWrapper__BQawC\",\"eyeIcon\":\"UpdateUser_eyeIcon__Zedof\",\"eyeIconDark\":\"UpdateUser_eyeIconDark__tjr3W\",\"modal-container-need\":\"UpdateUser_modal-container-need__gMiSr\"};","import React, { useState, useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\n\n// import { useDispatch } from \"react-redux\";\n\n// import { useAuth } from \"../../../hooks/useAuth\";\n// import {\n//   refreshUser,\n//   updateUserInfo,\n//   updateUserAvatar,\n// } from \"../../../redux/auth/operationsAuth\";\nimport useToggle from \"../../../hooks/useToggle\";\n\nimport clsx from \"clsx\";\n\nimport Input from \"../../InputAdi/Input\";\nimport Button from \"../../commonComponents/Button\";\n\nimport { VscEye, VscEyeClosed } from \"react-icons/vsc\";\n\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport roby from \"../../../images/Roby.jpg\";\n\nimport styles from \"./UpdateUser.module.css\";\n\nexport default function UpdateUser({ onClose, user, theme }) {\n  // const { user } = useAuth();\n  // const dispatch = useDispatch();\n\n  const formRef = useRef();\n  const modalRef = useRef();\n  const fileInputRef = useRef(null); // File input reference\n\n  const [userNewName, setUserNewName] = useState(user?.username || \"User\");\n  const [userNewMail, setUserNewMail] = useState(user?.email || \"asd@asd.com\");\n  const [userNewPassword, setUserNewPassword] = useState(\"\");\n  const [selectedFile, setSelectedFile] = useState(null);\n\n  const [type, setType] = useState(\"password\");\n  const [eyeVisible, toggleEyeVisible] = useToggle(true);\n  const [closedEyeVisible, toggleClosedEyeVisible] = useToggle(false);\n\n  const handleUserNameChange = (e) => setUserNewName(e.target.value);\n  const handleUserMailAddressChange = (e) => setUserNewMail(e.target.value);\n  const handleUserPasswordChange = (e) => setUserNewPassword(e.target.value);\n\n  const handleFileChange = (event) => {\n    const file = event.target.files[0];\n\n    if (file) {\n      setSelectedFile(file);\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (selectedFile) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        const base64Image = reader.result; // imaginea în format Base64\n\n        const updatedUser = {\n          username: userNewName,\n          email: userNewMail,\n          password: userNewPassword,\n          avatarBase64: base64Image,\n        };\n\n        localStorage.setItem(\"user\", JSON.stringify(updatedUser));\n        toast.success(\"User info saved locally!\");\n        onClose();\n      };\n      reader.readAsDataURL(selectedFile); // conversie în Base64\n    } else {\n      const updatedUser = {\n        username: userNewName,\n        email: userNewMail,\n        password: userNewPassword,\n        avatarBase64: user?.avatarBase64 || \"https://i.imgur.com/E4nHB5A.png\",\n      };\n\n      localStorage.setItem(\"user\", JSON.stringify(updatedUser));\n      toast.success(\"User info saved locally!\");\n      onClose();\n    }\n  };\n\n  useEffect(() => {\n    const handleEscapeKey = (e) => {\n      if (e.key === \"Escape\") {\n        onClose();\n      }\n    };\n\n    document.addEventListener(\"keydown\", handleEscapeKey);\n\n    return () => {\n      document.removeEventListener(\"keydown\", handleEscapeKey);\n    };\n  }, [onClose]);\n\n  const handleModalClick = (e) => e.stopPropagation();\n\n  // Set correct avatar URL\n  const imageUrl = selectedFile\n    ? URL.createObjectURL(selectedFile)\n    : user?.avatarBase64\n    ? user.avatarBase64\n    : user?.avatarURL && user.avatarURL.startsWith(\"http\")\n    ? user.avatarURL\n    : roby;\n  // Default fallback image\n\n  return (\n    <div\n      ref={modalRef}\n      onClick={(e) => {\n        if (!formRef.current.contains(e.target)) {\n          onClose();\n        }\n      }}\n      className={styles[\"modal-overlay-need\"]}>\n      <div\n        onClick={handleModalClick}\n        ref={formRef}\n        className={clsx(\n          styles.modalContainerNeed,\n          theme === \"dark\" ? styles.contDark : styles.contLight\n        )}>\n        <button type=\"button\" className={styles[\"close-btn\"]} onClick={onClose}>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"18\"\n            height=\"18\"\n            fill=\"none\">\n            <path\n              d=\"M13.5 4.5L4.5 13.5\"\n              stroke={theme === \"dark\" ? \"white\" : \"black\"}\n              strokeWidth=\"1.5\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n            />\n            <path\n              d=\"M4.5 4.5L13.5 13.5\"\n              stroke={theme === \"dark\" ? \"white\" : \"black\"}\n              strokeWidth=\"1.5\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n            />\n          </svg>\n        </button>\n\n        <h2\n          className={clsx(styles.text, {\n            [styles.textDark]: theme === \"dark\",\n          })}>\n          Edit profile\n        </h2>\n\n        {/* Profile Image Section */}\n        <div\n          className={clsx(\n            styles.imgCont,\n            theme === \"violet\"\n              ? styles.imgContViolet\n              : theme === \"light\"\n              ? styles.imgContLight\n              : null\n          )}>\n          <img className={styles.userImg} src={imageUrl} alt=\"User Avatar\" />\n          <div className={styles.imgPlusCont}>\n            <input\n              type=\"file\"\n              accept=\"image/*\"\n              style={{ display: \"none\" }}\n              ref={fileInputRef}\n              onChange={handleFileChange}\n            />\n            <button\n              className={clsx(\n                styles.imgPlusBtn,\n                theme === \"violet\" ? styles.iconPlusViolet : styles.iconPlus\n              )}\n              onClick={() => fileInputRef.current.click()}>\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"20\"\n                height=\"20\"\n                viewBox=\"0 0 20 20\"\n                fill=\"none\">\n                <path\n                  d=\"M10 4.16663V15.8333\"\n                  stroke={theme === \"violet\" ? \"white\" : \"#121212\"}\n                  strokeWidth=\"1.8\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                />\n                <path\n                  d=\"M4.16699 10H15.8337\"\n                  stroke={theme === \"violet\" ? \"white\" : \"#121212\"}\n                  strokeWidth=\"1.8\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                />\n              </svg>\n            </button>\n          </div>\n        </div>\n\n        <form onSubmit={handleSubmit} className={styles[\"div-container\"]}>\n          <Input\n            className={styles.textarea}\n            theme={theme}\n            value={userNewName}\n            handleChange={handleUserNameChange}\n            placeholder=\"Name\"\n            name=\"title\"\n            type=\"text\"\n          />\n\n          <Input\n            className={styles.textarea}\n            theme={theme}\n            value={userNewMail}\n            handleChange={handleUserMailAddressChange}\n            placeholder=\"Email\"\n            name=\"Email\"\n            type=\"text\"\n          />\n\n          <div className={styles.inputWrapper}>\n            {eyeVisible && (\n              <VscEye\n                onClick={() => {\n                  toggleEyeVisible();\n                  toggleClosedEyeVisible();\n                  setType(\"text\");\n                }}\n                size=\"24px\"\n                className={clsx(\n                  styles.eyeIcon,\n                  theme === \"dark\" ? styles.eyeIconDark : null\n                )}\n              />\n            )}\n            {closedEyeVisible && (\n              <VscEyeClosed\n                onClick={() => {\n                  toggleEyeVisible();\n                  toggleClosedEyeVisible();\n                  setType(\"password\");\n                }}\n                size=\"24px\"\n                className={clsx(\n                  styles.eyeIcon,\n                  theme === \"dark\" ? styles.eyeIconDark : null\n                )}\n              />\n            )}\n            <Input\n              className={styles.textarea}\n              value={userNewPassword}\n              theme={theme}\n              handleChange={handleUserPasswordChange}\n              placeholder=\"New password\"\n              name=\"Password\"\n              type={type}\n            />\n          </div>\n\n          <Button\n            theme={theme}\n            className={styles.btn}\n            type=\"submit\"\n            variant=\"send\">\n            Send\n          </Button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nUpdateUser.propTypes = {\n  onClose: PropTypes.func,\n  user: PropTypes.object,\n  theme: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"Header_header__HXQOm\",\"hamButton\":\"Header_hamButton__uOTRA\",\"headerLight\":\"Header_headerLight__Dcw3W\",\"headerDark\":\"Header_headerDark__rCRms\",\"headerViolet\":\"Header_headerViolet__vN1j+\",\"logoSection\":\"Header_logoSection__t8h6x\",\"cBotAvatar\":\"Header_cBotAvatar__1XDrF\",\"rightContainer\":\"Header_rightContainer__ezyr7\",\"userContainer\":\"Header_userContainer__eJeLZ\",\"userContainerDark\":\"Header_userContainerDark__azgBC\",\"userName\":\"Header_userName__q0v6S\",\"userNameLight\":\"Header_userNameLight__A15fm\",\"cogIcon\":\"Header_cogIcon__ykrbe\",\"img\":\"Header_img__kmlKH\",\"imgViolet\":\"Header_imgViolet__huLO+\"};","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { useMediaQuery } from \"react-responsive\";\n\n// import { useAuth } from \"../../hooks/useAuth\";\n\nimport clsx from \"clsx\";\n\nimport { FaCog } from \"react-icons/fa\";\n\nimport ThemeSelector from \"../ThemeSelector/ThemeSelector\";\nimport LanguageSelector from \"../LanguageSelector/LanguageSelector\";\n\nimport UpdateUser from \"../modal/UpdateUser/UpdateUser\";\n\nimport roby from \"../../images/Roby.jpg\";\n\nimport styles from \"./Header.module.css\";\n\nconst breakpoints = {\n  mobile: \"(max-width: 767px)\",\n  tablet: \"(min-width:768px)\",\n  desktop: \"(min-width:1024px)\",\n};\n\nfunction Header({ handleClick, handleRightClick, theme, user, lang }) {\n  // const { user } = useAuth();\n\n  const [isUpdateUserModalVisible, setIsUpdateUserModalVisible] =\n    useState(false);\n\n  const handleOpenUpdateModal = () => {\n    setIsUpdateUserModalVisible(true);\n  };\n\n  const handleCloseUpdateModal = () => {\n    setIsUpdateUserModalVisible(false);\n  };\n\n  // const imageUrl = avatarURL?.startsWith(\"http\")\n  //   ? avatarURL\n  //   : `https://taskpro-nodejs.onrender.com/${avatarURL}`;\n\n  const isMobile = useMediaQuery({ query: breakpoints.mobile });\n  const isTablet = useMediaQuery({ query: breakpoints.tablet });\n  const isDesktop = useMediaQuery({ query: breakpoints.desktop });\n\n  const [hover, setHover] = useState(false);\n\n  return (\n    <>\n      {isUpdateUserModalVisible && (\n        <UpdateUser\n          theme={theme}\n          user={user}\n          onClose={handleCloseUpdateModal}\n        />\n      )}\n      <header\n        className={clsx(\n          styles.header,\n          theme === \"dark\"\n            ? styles.headerDark\n            : theme === \"violet\"\n            ? styles.headerViolet\n            : theme === \"light\"\n            ? styles.headerLight\n            : styles.headerLight\n        )}>\n        {isMobile && (\n          <button onClick={handleClick} className={styles.hamButton}>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"24\"\n              height=\"24\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              onMouseEnter={() => setHover(true)}\n              onMouseLeave={() => setHover(false)}>\n              <path\n                d=\"M3 12H21\"\n                stroke={\n                  hover\n                    ? \"#37e673\"\n                    : clsx(\n                        theme === \"dark\" || theme === \"violet\"\n                          ? \"rgba(255, 255, 255, 0.8)\"\n                          : \"#161616\"\n                      )\n                }\n                strokeWidth=\"2\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n              />\n              <path\n                d=\"M3 6H21\"\n                stroke={\n                  hover\n                    ? \"#37e673\"\n                    : clsx(\n                        theme === \"dark\" || theme === \"violet\"\n                          ? \"rgba(255, 255, 255, 0.8)\"\n                          : \"#161616\"\n                      )\n                }\n                strokeWidth=\"2\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n              />\n              <path\n                d=\"M3 18H21\"\n                stroke={\n                  hover\n                    ? \"#37e673\"\n                    : clsx(\n                        theme === \"dark\" || theme === \"violet\"\n                          ? \"rgba(255, 255, 255, 0.8)\"\n                          : \"#161616\"\n                      )\n                }\n                strokeWidth=\"2\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n              />\n            </svg>\n          </button>\n        )}\n\n        {isTablet && !isDesktop && (\n          <button onClick={handleClick} className={styles.hamButton}>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"32\"\n              height=\"32\"\n              viewBox=\"0 0 32 32\"\n              fill=\"none\"\n              onMouseEnter={() => setHover(true)}\n              onMouseLeave={() => setHover(false)}>\n              <path\n                d=\"M4 16H28\"\n                stroke={\n                  hover\n                    ? \"#37e673\"\n                    : clsx(\n                        theme === \"dark\" || theme === \"violet\"\n                          ? \"rgba(255, 255, 255, 0.8)\"\n                          : \"#161616\"\n                      )\n                }\n                strokeWidth=\"2.5\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n              />\n              <path\n                d=\"M4 8H28\"\n                stroke={\n                  hover\n                    ? \"#37e673\"\n                    : clsx(\n                        theme === \"dark\" || theme === \"violet\"\n                          ? \"rgba(255, 255, 255, 0.8)\"\n                          : \"#161616\"\n                      )\n                }\n                strokeWidth=\"2.5\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n              />\n              <path\n                d=\"M4 24H28\"\n                stroke={\n                  hover\n                    ? \"#37e673\"\n                    : clsx(\n                        theme === \"dark\" || theme === \"violet\"\n                          ? \"rgba(255, 255, 255, 0.8)\"\n                          : \"#161616\"\n                      )\n                }\n                strokeWidth=\"2.5\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n              />\n            </svg>\n          </button>\n        )}\n\n        <LanguageSelector theme={theme} lang={lang} />\n        <ThemeSelector theme={theme} />\n\n        {isTablet && (\n          <div className={styles.logoSection}>\n            <img className={styles.cBotAvatar} src={roby} alt=\"cBot avatar\" />\n            <p\n              style={{ fontSize: \"16px\", fontWeight: \"bold\" }}\n              className={\n                theme === \"dark\" || theme === \"violet\"\n                  ? styles.userName\n                  : styles.userNameLight\n              }>\n              RobiForexGabyTrade\n            </p>\n          </div>\n        )}\n\n        <div className={styles.rightContainer}>\n          <div\n            className={clsx(\n              styles.userContainer,\n              theme === \"dark\" ? styles.userContainerDark : styles.userContainer\n            )}>\n            <p\n              className={\n                theme === \"dark\" || theme === \"violet\"\n                  ? styles.userName\n                  : styles.userNameLight\n              }\n              onClick={handleOpenUpdateModal}>\n              <FaCog\n                size={14}\n                color={\n                  theme === \"dark\" || theme === \"violet\"\n                    ? \"rgba(255, 255, 255, 0.8)\"\n                    : \"#161616cc\"\n                }\n                className={styles.cogIcon}\n              />\n              {user?.username || \"User\"}\n            </p>\n\n            <img\n              className={theme === \"violet\" ? styles.imgViolet : styles.img}\n              src={user?.avatarBase64 || roby}\n              alt=\"User Avatar\"\n              style={{ width: \"42px\", height: \"42px\", borderRadius: \"50%\" }}\n            />\n          </div>\n        </div>\n\n        {isMobile && (\n          <button onClick={handleRightClick} className={styles.hamButton}>\n            <FaCog\n              size={24}\n              color={\n                theme === \"dark\" || theme === \"violet\"\n                  ? \"rgba(255, 255, 255, 0.8)\"\n                  : \"#161616cc\"\n              }\n              className={styles.cogIcon}\n            />\n          </button>\n        )}\n\n        {isTablet && !isDesktop && (\n          <button onClick={handleRightClick} className={styles.hamButton}>\n            <FaCog\n              size={32}\n              color={\n                theme === \"dark\" || theme === \"violet\"\n                  ? \"rgba(255, 255, 255, 0.8)\"\n                  : \"#161616cc\"\n              }\n              className={styles.cogIcon}\n            />\n          </button>\n        )}\n      </header>\n    </>\n  );\n}\n\nHeader.propTypes = {\n  handleClick: PropTypes.func,\n  handleRightClick: PropTypes.func,\n  theme: PropTypes.oneOf([\"light\", \"dark\", \"violet\"]), // Theme options\n  user: PropTypes.shape({\n    username: PropTypes.string,\n    imageUrl: PropTypes.string,\n  }),\n};\n\nexport default Header;\n","import Header from \"./Header\";\n\nexport default Header;\n","// extracted by mini-css-extract-plugin\nexport default {\"cont\":\"SharedLayout_cont__XzSIg\",\"main\":\"SharedLayout_main__ColIW\",\"mainLight\":\"SharedLayout_mainLight__hpivQ\",\"mainViolet\":\"SharedLayout_mainViolet__1FcFr\",\"mainDark\":\"SharedLayout_mainDark__tz60f\"};","// import React, { useEffect, useState } from \"react\";\nimport React from \"react\";\n\nimport PropTypes from \"prop-types\";\n\n// import { useMediaQuery } from \"react-responsive\";\n\nimport { Outlet } from \"react-router-dom\";\n\nimport Footer from \"../Footer/Footer\";\nimport Header from \"../Header\";\n\n// import { useAuth } from \"../../hooks/useAuth\";\n// import { usePrivate } from \"../../hooks/usePrivate\";\n\n// import { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\n// import clsx from \"clsx\";\n\nimport clsx from \"clsx\";\n\n// import ScreenPage from \"../../pages/ScreenPage\";\n\n// import { usePublic } from \"../../hooks/usePublic\";\n// import { useDispatch } from \"react-redux\";\n\n// import {\n//   clearIsRegistered,\n//   clearUpdateUser,\n//   reset,\n// } from \"../../redux/auth/authSlice\";\n// import { resetHelpForm } from \"../../redux/public/helpSlice\";\n// import { clearUser } from \"../../redux/private/privateSlice\";\n\nimport styles from \"./SharedLayout.module.css\";\n\n// function SharedLayout({ handleClick }) {\n//   const {\n//     isLoggedIn,\n//     isLoggedOut,\n//     errorAuth,\n//     isRegistered,\n//     user,\n//     emailResendStatus,\n//   } = useAuth();\n//   const { privateError, privateMessage } = usePrivate();\n//   const { helpError, helpSuccessMessage } = usePublic();\n\n//   const dispatch = useDispatch();\n\n//   const [logoutShown, setLogoutShown] = useState(false);\n\n//   useEffect(() => {\n//     if (isRegistered) {\n//       toast.success(\"Registration successful!\");\n\n//       dispatch(clearIsRegistered());\n//     }\n\n//     if (!logoutShown) {\n//       if (isLoggedOut) {\n//         toast.success(\"Logout successful!\");\n//         setLogoutShown(true);\n//         dispatch(reset());\n//       }\n//     }\n\n//     if (helpSuccessMessage) {\n//       toast.success(helpSuccessMessage);\n//     }\n\n//     if (emailResendStatus) {\n//       toast.success(emailResendStatus);\n\n//       dispatch(clearUpdateUser());\n//     }\n\n//     if (helpError) {\n//       toast.success(helpError);\n//       dispatch(resetHelpForm());\n//     }\n\n//     if (errorAuth) {\n//       toast.error(errorAuth);\n//     }\n\n//     if (privateError) {\n//       toast.error(privateError);\n//     }\n\n//     if (privateMessage) {\n//       toast.success(privateMessage);\n//     }\n\n//     setTimeout(() => {\n//       dispatch(resetHelpForm());\n//     }, 7000);\n\n//     setTimeout(() => {\n//       dispatch(clearUser());\n//     }, 5000);\n//   }, [\n//     isRegistered,\n//     isLoggedIn,\n//     isLoggedOut,\n//     emailResendStatus,\n//     logoutShown,\n//     helpSuccessMessage,\n//     helpError,\n//     errorAuth,\n//     privateError,\n//     privateMessage,\n//     dispatch,\n//   ]);\n\n//   return (\n//     <div className={styles.cont}>\n//       <Header handleClick={handleClick} />\n\n//       <main\n//         className={clsx(\n//           styles.main,\n//           user?.theme === \"dark\"\n//             ? styles.mainDark\n//             : user?.theme === \"violet\"\n//             ? styles.mainViolet\n//             : user?.theme === \"light\"\n//             ? styles.mainLight\n//             : styles.mainLight\n//         )}>\n//         <Outlet />\n//       </main>\n\n//       <Footer />\n//     </div>\n//   );\n// }\n\nfunction SharedLayout({ handleClick, handleRightClick, user, theme, lang }) {\n  return (\n    <div className={styles.cont}>\n      <Header\n        handleClick={handleClick}\n        handleRightClick={handleRightClick}\n        theme={theme}\n        user={user}\n        lang={lang}\n      />\n\n      <main\n        className={clsx(\n          styles.main,\n          theme === \"dark\"\n            ? styles.mainDark\n            : theme === \"violet\"\n            ? styles.mainViolet\n            : theme === \"light\"\n            ? styles.mainLight\n            : styles.mainLight\n        )}>\n        <Outlet />\n      </main>\n\n      <Footer sharedFooter={true} />\n    </div>\n  );\n}\n\nSharedLayout.propTypes = {\n  handleClick: PropTypes.func,\n  handleRightClick: PropTypes.func,\n  user: PropTypes.object,\n  theme: PropTypes.oneOf([\"light\", \"dark\", \"violet\"]), // Theme options\n  lang: PropTypes.string, // Language option\n};\n\nexport default SharedLayout;\n","// extracted by mini-css-extract-plugin\nexport default {\"modalClassName\":\"Modal_modalClassName__C5uxj\",\"imageLeft\":\"Modal_imageLeft__MWhgn\",\"imageRight\":\"Modal_imageRight__YoiM7\",\"content\":\"Modal_content__r44CP\",\"darkContent\":\"Modal_darkContent__Gg157\",\"closeModal\":\"Modal_closeModal__+uzyj\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { HiX } from \"react-icons/hi\";\n\nimport leftImage from \"../../../images/login-background-left-side.png\";\nimport rightImage from \"../../../images/login-background-right-side.png\";\n\nimport styles from \"./Modal.module.css\";\nimport clsx from \"clsx\";\n\nfunction Modal({\n  isModalVisible,\n  handleModalClose,\n  children,\n  dialogRef,\n  contRef,\n  modalContentClassName,\n  closeButton,\n  variant,\n}) {\n  if (!isModalVisible) {\n    return;\n  }\n\n  return (\n    isModalVisible && (\n      <section ref={dialogRef} className={styles.modalClassName}>\n        <div className={styles.imageLeft}>\n          <img src={leftImage} alt=\"Left\" />\n        </div>\n        <div className={styles.imageRight}>\n          <img src={rightImage} alt=\"Right\" />\n        </div>\n        <div\n          ref={contRef}\n          className={clsx(\n            styles.content,\n            variant === \"dark\" ? styles.darkContent : styles.content\n          )}>\n          <button\n            className={clsx(styles.closeModal, closeButton)}\n            id=\"closeModal\"\n            onClick={handleModalClose}>\n            <HiX size=\"16px\" />\n          </button>\n          {children}\n        </div>\n      </section>\n    )\n  );\n}\n\nModal.propTypes = {\n  isModalVisible: PropTypes.bool,\n  handleModalClose: PropTypes.func,\n  handleChange: PropTypes.func,\n  handleSave: PropTypes.func,\n  dialogRef: PropTypes.object,\n  contRef: PropTypes.object,\n  label: PropTypes.string,\n  name: PropTypes.string,\n  value: PropTypes.string,\n  children: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.string,\n    PropTypes.object,\n    PropTypes.array,\n  ]),\n  modalContentClassName: PropTypes.string,\n  closeButton: PropTypes.string,\n  variant: PropTypes.string,\n};\n\nexport default Modal;\n","// extracted by mini-css-extract-plugin\nexport default {\"logo\":\"LogoSection_logo__t6azh\",\"lightLogo\":\"LogoSection_lightLogo__HZAiR\",\"svg\":\"LogoSection_svg__Z6Ggf\",\"lightSvg\":\"LogoSection_lightSvg__iK385\",\"cBotAvatar\":\"LogoSection_cBotAvatar__O1gjU\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { useNavigate } from \"react-router-dom\";\nimport { useMediaQuery } from \"react-responsive\";\n\n// import { useAuth } from \"../../hooks/useAuth\";\nimport roby from \"../../images/Roby.jpg\";\n\nimport clsx from \"clsx\";\n\nimport styles from \"./LogoSection.module.css\";\n\nconst breakpoints = {\n  mobile: \"(max-width: 767px)\",\n  tablet: \"(min-width: 768px)\",\n  desktop: \"(min-width: 1024px)\",\n};\n\nconst LogoSection = ({ theme, menuType }) => {\n  const navigate = useNavigate();\n  // const { user } = useAuth();\n\n  const isDesktop = useMediaQuery({ query: breakpoints.desktop });\n  const isTablet = useMediaQuery({ query: breakpoints.tablet });\n\n  const handleClick = () => {\n    navigate(\"/home\");\n  };\n\n  return (\n    <div\n      onClick={handleClick}\n      className={clsx(\n        styles.logo,\n        theme === \"light\" ? styles.lightLogo : styles.logo\n      )}>\n      {isTablet &&\n        (theme === \"violet\" ? (\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"32\"\n            height=\"32\"\n            viewBox=\"0 0 32 32\"\n            fill=\"none\">\n            <path\n              d=\"M24 0H8C3.58172 0 0 3.58172 0 8V24C0 28.4183 3.58172 32 8 32H24C28.4183 32 32 28.4183 32 24V8C32 3.58172 28.4183 0 24 0Z\"\n              fill=\"#ECEDFD\"\n            />\n            <path\n              d=\"M13.3314 23.0269C13.5759 21.7553 13.7841 20.4168 14.0783 19.0782C14.2232 18.3777 14.0466 18.0788 13.2635 18.1324C12.4804 18.1859 11.6068 18.1591 10.7739 18.1324C9.94105 18.1056 9.79167 17.6862 10.2715 17.0883C12.6343 14.1703 15.0243 11.2881 17.4053 8.41472C17.6724 8.08902 17.9802 7.85701 18.4193 8.1024C18.8583 8.3478 18.7678 8.6512 18.6954 9.01706C18.4328 10.3556 18.2156 11.6941 17.9259 13.0058C17.7765 13.684 17.9711 13.9249 18.6773 13.8982C19.386 13.8625 20.096 13.8625 20.8047 13.8982C21.2076 13.8982 21.7372 13.6885 21.9454 14.2373C22.1536 14.7861 21.7146 15.0181 21.4928 15.3438C20.5875 16.4592 19.6701 17.5731 18.7406 18.6856C17.3797 20.3097 16.0292 21.9278 14.6894 23.54C14.4268 23.8567 14.1326 24.1111 13.6845 23.9504C13.2364 23.7898 13.3314 23.4106 13.3314 23.0269Z\"\n              fill=\"#5255BC\"\n            />\n          </svg>\n        ) : (\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"32\"\n            height=\"32\"\n            viewBox=\"0 0 32 32\"\n            fill=\"none\">\n            <path\n              d=\"M24 0H8C3.58172 0 0 3.58172 0 8V24C0 28.4183 3.58172 32 8 32H24C28.4183 32 32 28.4183 32 24V8C32 3.58172 28.4183 0 24 0Z\"\n              fill=\"#1F1F1F\"\n            />\n            <path\n              d=\"M13.3314 23.0269C13.5759 21.7553 13.7841 20.4168 14.0783 19.0782C14.2232 18.3777 14.0466 18.0788 13.2635 18.1324C12.4804 18.1859 11.6068 18.1591 10.7739 18.1324C9.94105 18.1056 9.79167 17.6862 10.2715 17.0883C12.6343 14.1703 15.0243 11.2881 17.4053 8.41472C17.6724 8.08902 17.9802 7.85701 18.4193 8.1024C18.8583 8.3478 18.7678 8.6512 18.6954 9.01706C18.4328 10.3556 18.2156 11.6941 17.9259 13.0058C17.7765 13.684 17.9711 13.9249 18.6773 13.8982C19.386 13.8625 20.096 13.8625 20.8047 13.8982C21.2076 13.8982 21.7372 13.6885 21.9454 14.2373C22.1536 14.7861 21.7146 15.0181 21.4928 15.3438C20.5875 16.4592 19.6701 17.5731 18.7406 18.6856C17.3797 20.3097 16.0292 21.9278 14.6894 23.54C14.4268 23.8567 14.1326 24.1111 13.6845 23.9504C13.2364 23.7898 13.3314 23.4106 13.3314 23.0269Z\"\n              fill=\"white\"\n            />\n          </svg>\n        ))}\n\n      {!isDesktop && !isTablet && (\n        <img className={styles.cBotAvatar} src={roby} alt=\"cBot avatar\" />\n      )}\n\n      <span\n        className={clsx(\n          styles.svg,\n          theme === \"light\" ? styles.lightSvg : styles.svg\n        )}>\n        {isTablet ? menuType : \"RobiForexGabyTrade\"}\n      </span>\n    </div>\n  );\n};\n\nexport default LogoSection;\n\nLogoSection.propTypes = {\n  theme: PropTypes.oneOf([\"light\", \"dark\", \"violet\"]),\n  menuType: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"cont\":\"BotStatusCard_cont__vhSoY\",\"strategyCard\":\"BotStatusCard_strategyCard__tYtwv\",\"firstLine\":\"BotStatusCard_firstLine__X923U\",\"violet\":\"BotStatusCard_violet__bgXkH\",\"live\":\"BotStatusCard_live__3BpSb\",\"symbolStrategy\":\"BotStatusCard_symbolStrategy__YPU1U\",\"startBtn\":\"BotStatusCard_startBtn__XRGMQ\",\"stop\":\"BotStatusCard_stop__Xh2Jg\"};","// extracted by mini-css-extract-plugin\nexport default {\"selector\":\"LiveSelector_selector__i2D5B\",\"button\":\"LiveSelector_button__SbYPX\",\"btnViolet\":\"LiveSelector_btnViolet__QC9sA\",\"span\":\"LiveSelector_span__HFctV\",\"spanDark\":\"LiveSelector_spanDark__5xTiZ\",\"svg\":\"LiveSelector_svg__tKc18\",\"svgDark\":\"LiveSelector_svgDark__QB3bY\",\"options\":\"LiveSelector_options__7EwI+\",\"optionsDark\":\"LiveSelector_optionsDark__xh8HN\",\"optionsViolet\":\"LiveSelector_optionsViolet__V0MVW\",\"option\":\"LiveSelector_option__mjI+C\",\"optionDark\":\"LiveSelector_optionDark__I3By-\",\"activeOption\":\"LiveSelector_activeOption__-hBoQ\",\"activeOptionViolet\":\"LiveSelector_activeOptionViolet__WL0ht\"};","import LiveSelector from \"./LiveSelector\";\n\nexport default LiveSelector;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\n\n// import { useDispatch } from \"react-redux\";\n// import { updateTheme } from \"../../redux/private/operationsPrivate\"; // Adjust the import path for your Redux slice\n// import { useAuth } from \"../../hooks/useAuth\"; // Adjust the import path for your custom hook\n// import { refreshUser } from \"../../redux/auth/operationsAuth\";\n\nimport clsx from \"clsx\";\n\nimport { HiChevronDown, HiChevronUp } from \"react-icons/hi\";\n\nimport styles from \"./LiveSelector.module.css\";\n\nexport default function LiveSelector({ theme, live }) {\n  // const dispatch = useDispatch();\n  // const { user } = useAuth(); // Get user info\n  const cBotSelected = JSON.parse(localStorage.getItem(\"cBotSelected\"));\n\n  const [liveA, setLive] = useState(live || \"live\");\n  const [isOpen, setIsOpen] = useState(false); // Controls dropdown open/close\n\n  const dropdownRef = useRef(null); // Ref for dropdown to detect clicks outside\n\n  const handleSelect = (selectedlive) => {\n    setLive(selectedlive);\n    // dispatch(updateTheme(selectedTheme)); // Dispatch action with selected theme\n\n    const modifiedCBotSelected = { ...cBotSelected, live: selectedlive };\n    localStorage.setItem(\"cBotSelected\", JSON.stringify(modifiedCBotSelected));\n\n    setIsOpen(false); // Close the dropdown\n  };\n\n  // Close dropdown when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        setIsOpen(false); // Close dropdown if click is outside\n      }\n    };\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, []);\n\n  return (\n    <div className={styles.selector} ref={dropdownRef}>\n      {/* Display \"Theme\" when dropdown is closed */}\n      <button\n        className={clsx(styles.button, theme === \"violet\" && styles.btnViolet)}\n        onClick={() => setIsOpen((prev) => !prev)}>\n        <span\n          className={clsx(\n            styles.span,\n            theme === \"violet\" ? styles.spanDark : styles.span\n          )}>\n          {liveA}\n        </span>\n        {!isOpen ? (\n          <HiChevronDown\n            className={clsx(\n              styles.svg,\n              theme === \"violet\" ? styles.svgDark : styles.svg\n            )}\n          />\n        ) : (\n          <HiChevronUp\n            className={clsx(\n              styles.svg,\n              theme === \"dark\" || theme === \"violet\"\n                ? styles.svgDark\n                : styles.svg\n            )}\n          />\n        )}\n      </button>\n\n      {/* Dropdown options */}\n      {isOpen && (\n        <ul\n          className={clsx(\n            styles.options,\n            theme === \"dark\" ? styles.optionsDark : styles.options,\n            theme === \"violet\" ? styles.optionsViolet : styles.options\n          )}>\n          {[\"live\", \"demo\"].map((option) => (\n            <li\n              key={option}\n              className={clsx(\n                styles.option,\n                theme === \"dark\" ? styles.optionDark : styles.option,\n                option === liveA &&\n                  (theme === \"violet\"\n                    ? styles.activeOptionViolet\n                    : styles.activeOption)\n              )}\n              onClick={() => handleSelect(option)}>\n              {option.charAt(0).toUpperCase() + option.slice(1)}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n\nLiveSelector.propTypes = {\n  live: PropTypes.string,\n  theme: PropTypes.string,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport clsx from \"clsx\";\n\nimport styles from \"./BotStatusCard.module.css\";\nimport LiveSelector from \"../commonComponents/Loader/LiveSelector\";\n\nexport default function BotStatusCard({\n  theme,\n  symbol,\n  live,\n  handleClick,\n  started,\n  name,\n}) {\n  return (\n    <div className={clsx(styles.cont)}>\n      <div className={styles.strategyCard}>\n        <div\n          className={clsx(\n            styles.firstLine,\n            theme === \"violet\" && styles.violet\n          )}>\n          RobiStrategy ForexGaby\n        </div>\n        <div className={styles.live}>\n          <LiveSelector theme={theme} live={live} /> - 2054898 - FP Markets\n        </div>\n        <div\n          className={clsx(\n            styles.symbolStrategy,\n            theme === \"violet\" && styles.violet\n          )}\n          id=\"symbolStrategy\">\n          <span>{symbol} - m15 </span>\n          <span>{name}</span>\n        </div>\n      </div>\n      <button\n        className={clsx(styles.startBtn, started && styles.stop)}\n        id=\"btnBot\"\n        onClick={handleClick}>\n        {started ? \"Stop cBot\" : \"Start cBot\"}\n      </button>\n    </div>\n  );\n}\n\nBotStatusCard.propTypes = {\n  theme: PropTypes.string,\n  symbol: PropTypes.string,\n  live: PropTypes.bool,\n  started: PropTypes.bool,\n  name: PropTypes.string,\n  handleClick: PropTypes.func,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"cont\":\"BotsStatus_cont__YEvyn\",\"noSelected\":\"BotsStatus_noSelected__ZanHO\",\"lightNoSelected\":\"BotsStatus_lightNoSelected__6J8Vp\",\"violetNoSelected\":\"BotsStatus_violetNoSelected__nTgQY\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport clsx from \"clsx\";\nimport BotStatusCard from \"../BotStatusCard/BotStatusCard\";\n\nimport styles from \"./BotsStatus.module.css\";\n\nexport default function BotsStatus({\n  theme,\n  symbol,\n  live,\n  handleClick,\n  started,\n  name,\n}) {\n  const botSelected = localStorage.getItem(\"cBotSelected\")\n    ? localStorage.getItem(\"cBotSelected\")\n    : false;\n\n  return botSelected ? (\n    <BotStatusCard\n      theme={theme}\n      symbol={symbol}\n      live={live}\n      handleClick={handleClick}\n      started={started}\n      name={name}\n    />\n  ) : (\n    <p\n      className={clsx(\n        styles.noSelected,\n        theme === \"light\" && styles.lightNoSelected,\n        theme === \"violet\" && styles.violetNoSelected\n      )}>\n      Please selet a C-bot from Robots section or from settings sidebar to\n      engage\n    </p>\n  );\n}\n\nBotsStatus.propTypes = {\n  theme: PropTypes.string,\n  symbol: PropTypes.string,\n  live: PropTypes.bool,\n  started: PropTypes.bool,\n  handleClick: PropTypes.func,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"cont\":\"Sidebar_cont__IBxDQ\",\"projectsCont\":\"Sidebar_projectsCont__lIBpP\",\"projectsNav\":\"Sidebar_projectsNav__K9O+t\",\"link\":\"Sidebar_link__V-n32\",\"activeLink\":\"Sidebar_activeLink__e9QIZ\",\"asideLight\":\"Sidebar_asideLight__AJYgQ\",\"asideViolet\":\"Sidebar_asideViolet__3PKhe\",\"asideDark\":\"Sidebar_asideDark__2YaqZ\",\"sideLinks\":\"Sidebar_sideLinks__qm8SC\",\"menuBtn\":\"Sidebar_menuBtn__ZjT8S\",\"activeBtn\":\"Sidebar_activeBtn__x8vd4\",\"lightMenuBtn\":\"Sidebar_lightMenuBtn__luv7k\",\"lightActiveMenuBtn\":\"Sidebar_lightActiveMenuBtn__kn4pu\",\"logoutButton\":\"Sidebar_logoutButton__hf1X4\",\"logoutButtonSpan\":\"Sidebar_logoutButtonSpan__QAy1i\",\"logoutButtonSpanLight\":\"Sidebar_logoutButtonSpanLight__KKB4H\",\"modalLogoutActionCenter\":\"Sidebar_modalLogoutActionCenter__HICUJ\",\"logo\":\"Sidebar_logo__nz6-R\",\"closeButton\":\"Sidebar_closeButton__HZK2u\",\"modalHeader\":\"Sidebar_modalHeader__DQZgx\",\"modalHeaderLight\":\"Sidebar_modalHeaderLight__UH7St\",\"modalHeaderDark\":\"Sidebar_modalHeaderDark__3XG-y\",\"modalHeaderViolet\":\"Sidebar_modalHeaderViolet__eTAVP\",\"userContainer\":\"Sidebar_userContainer__LH-32\",\"userContainerDark\":\"Sidebar_userContainerDark__RVzNc\",\"question\":\"Sidebar_question__y7tIx\",\"questionDark\":\"Sidebar_questionDark__3v+Dg\",\"modalButtonsContainer\":\"Sidebar_modalButtonsContainer__l8Cye\",\"noScroll\":\"Sidebar_noScroll__Ydg--\"};","import Sidebar from \"./Sidebar\";\n\nexport default Sidebar;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { NavLink, useLocation, useNavigate } from \"react-router-dom\";\n\n// import { useDispatch } from \"react-redux\";\n// import { useMediaQuery } from \"react-responsive\";\n\n// import { useAuth } from \"../../hooks/useAuth\";\nimport useToggle from \"../../hooks/useToggle\";\n// import { logOut } from \"../../redux/auth/operationsAuth\";\n// import { reset } from \"../../redux/auth/authSlice\";\n\nimport clsx from \"clsx\";\n\nimport Button from \"../commonComponents/Button\";\nimport Modal from \"../commonComponents/Modal/Modal\";\n\n// import logoSmall from \"../../images/cactus.png\";\n// import logoBig from \"../../images/cactus@2x.png\";\n\nimport roby from \"../../images/Roby.jpg\";\n\nimport LogoSection from \"../LogoSection/LogoSection\";\n\nimport BotsStatus from \"../BotsStatus/BotsStatus\";\n\nimport getCurrentDateTime from \"../../utils/getCurrentDateTime\";\n\nimport styles from \"./Sidebar.module.css\";\n\n// const breakpoints = {\n//   mobile: \"(max-width: 767px)\",\n//   tablet: \"(min-width:768px)\",\n// };\n\nexport default function Sidebar({ sideBarRef, theme }) {\n  const [isLogoutModalVisible, toggleIsLogoutModalVisible] = useToggle(false);\n  const modalRef = useRef();\n\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const botSelected = JSON.parse(localStorage.getItem(\"cBotSelected\")) || null;\n  const [botStarted, setBotStarted] = useState(\n    botSelected ? botSelected.message : false\n  );\n\n  const robots = JSON.parse(localStorage.getItem(\"cBots\")) || [];\n\n  const handleLogout = () => {\n    localStorage.removeItem(\"isRegistered\");\n    localStorage.removeItem(\"isLoggedin\");\n  };\n\n  useEffect(() => {\n    if (isLogoutModalVisible) {\n      document.body.classList.add(styles.noScroll);\n    } else {\n      document.body.classList.remove(styles.noScroll);\n    }\n\n    const handleEscapeKey = (event) => {\n      if (event.key === \"Escape\") toggleIsLogoutModalVisible();\n    };\n\n    document.addEventListener(\"keydown\", handleEscapeKey);\n\n    return () => {\n      document.body.classList.remove(styles.noScroll);\n      document.removeEventListener(\"keydown\", handleEscapeKey);\n    };\n  }, [isLogoutModalVisible, toggleIsLogoutModalVisible]);\n\n  const closeOnClickOutside = (event) => {\n    // console.log(\"close\");\n\n    if (event.target !== event.currentTarget) {\n      toggleIsLogoutModalVisible();\n    }\n  };\n\n  function handleStartBot() {\n    // Toggle local state\n    const newBotStarted = {\n      ...botSelected,\n      message: !botStarted,\n      time: getCurrentDateTime(),\n    };\n    setBotStarted(!botStarted);\n\n    // Oprim orice alt bot pornit\n    const updatedRobots = robots.map((bot) => {\n      if (bot.id === newBotStarted.id) {\n        return newBotStarted; // actualizăm botul selectat\n      }\n      return { ...bot, message: false }; // oprim restul\n    });\n\n    // Salvăm în localStorage\n    localStorage.setItem(\"cBotSelected\", JSON.stringify(newBotStarted));\n    localStorage.setItem(\"cBots\", JSON.stringify(updatedRobots));\n  }\n\n  return (\n    <aside\n      ref={sideBarRef}\n      className={clsx(\n        styles.cont,\n        theme === \"dark\"\n          ? styles.asideDark\n          : theme === \"violet\"\n          ? styles.asideViolet\n          : styles.asideLight\n      )}>\n      {isLogoutModalVisible && (\n        <div className={styles.modalOverlay}>\n          <div\n            ref={modalRef}\n            className={styles.modalContent}\n            onClick={closeOnClickOutside}>\n            <Modal\n              variant={theme}\n              closeButton={styles.closeButton}\n              handleModalClose={toggleIsLogoutModalVisible}\n              isModalVisible={isLogoutModalVisible}>\n              <div className={styles.modalLogoutActionCenter}>\n                <img className={styles.logo} src={roby} alt=\"roby logo\" />\n                <p\n                  className={clsx(\n                    styles.question,\n                    theme === \"dark\" ? styles.questionDark : styles.question\n                  )}>\n                  Are you sure you want to log out?\n                </p>\n                <div className={styles.modalButtonsContainer}>\n                  <Button\n                    handleClick={() => {\n                      toggleIsLogoutModalVisible();\n                      handleLogout();\n                      navigate(\"/home\");\n                    }}\n                    type=\"button\"\n                    variant=\"auth\">\n                    Logout\n                  </Button>\n                  <Button\n                    variant=\"auth\"\n                    handleClick={toggleIsLogoutModalVisible}\n                    type=\"button\">\n                    Cancel\n                  </Button>\n                </div>\n              </div>\n            </Modal>\n          </div>\n        </div>\n      )}\n      <div className={styles.projectsCont}>\n        <LogoSection menuType={\"Menu\"} theme={theme} />\n        <nav className={styles.projectsNav}>\n          <ul className={styles.sideLinks}>\n            <li>\n              <NavLink\n                to=\"/home/robots\"\n                className={({ isActive }) =>\n                  clsx(\n                    styles.menuBtn,\n                    theme === \"light\" && styles.lightMenuBtn,\n                    isActive &&\n                      (theme === \"light\"\n                        ? styles.lightActiveMenuBtn\n                        : styles.activeBtn)\n                  )\n                }>\n                Robots\n              </NavLink>\n            </li>\n            <li>\n              <NavLink\n                to=\"/home/positions\"\n                className={({ isActive }) =>\n                  clsx(\n                    styles.menuBtn,\n                    theme === \"light\" && styles.lightMenuBtn,\n                    (isActive || location.pathname === \"/home\") &&\n                      (theme === \"light\"\n                        ? styles.lightActiveMenuBtn\n                        : styles.activeBtn)\n                  )\n                }>\n                Positions\n              </NavLink>\n            </li>\n\n            <li>\n              <NavLink\n                to=\"/home/order\"\n                className={({ isActive }) =>\n                  clsx(\n                    styles.menuBtn,\n                    theme === \"light\" && styles.lightMenuBtn,\n                    isActive &&\n                      (theme === \"light\"\n                        ? styles.lightActiveMenuBtn\n                        : styles.activeBtn)\n                  )\n                }>\n                Order\n              </NavLink>\n            </li>\n            <li>\n              <NavLink\n                to=\"/home/history\"\n                className={({ isActive }) =>\n                  clsx(\n                    styles.menuBtn,\n                    theme === \"light\" && styles.lightMenuBtn,\n                    isActive &&\n                      (theme === \"light\"\n                        ? styles.lightActiveMenuBtn\n                        : styles.activeBtn)\n                  )\n                }>\n                History\n              </NavLink>\n            </li>\n            <li>\n              <NavLink\n                to=\"/home/log\"\n                className={({ isActive }) =>\n                  clsx(\n                    styles.menuBtn,\n                    theme === \"light\" && styles.lightMenuBtn,\n                    isActive &&\n                      (theme === \"light\"\n                        ? styles.lightActiveMenuBtn\n                        : styles.activeBtn)\n                  )\n                }>\n                Log\n              </NavLink>\n            </li>\n            <li>\n              <NavLink\n                to=\"/home/admin\"\n                className={({ isActive }) =>\n                  clsx(\n                    styles.menuBtn,\n                    theme === \"light\" && styles.lightMenuBtn,\n                    isActive &&\n                      (theme === \"light\"\n                        ? styles.lightActiveMenuBtn\n                        : styles.activeBtn)\n                  )\n                }>\n                Admin\n              </NavLink>\n            </li>\n          </ul>\n        </nav>\n        <BotsStatus\n          theme={theme}\n          symbol={botSelected?.instrument}\n          live={botSelected?.live}\n          name={botSelected?.cBotName}\n          started={botSelected?.message}\n          handleClick={handleStartBot}\n        />\n      </div>\n      <button\n        onClick={toggleIsLogoutModalVisible}\n        className={styles.logoutButton}>\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"32\"\n          height=\"32\"\n          viewBox=\"0 0 32 32\"\n          fill=\"none\">\n          <path\n            d=\"M11.8667 10.0798C12.28 5.27982 14.7467 3.31982 20.1467 3.31982H20.32C26.28 3.31982 28.6667 5.70649 28.6667 11.6665V20.3598C28.6667 26.3198 26.28 28.7065 20.32 28.7065H20.1467C14.7867 28.7065 12.32 26.7732 11.88 22.0532\"\n            stroke={\n              theme === \"violet\"\n                ? \"white\"\n                : theme === \"dark\"\n                ? \"#bedbb0\"\n                : \"#2e1746\"\n            }\n            strokeWidth=\"1.5\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n          />\n          <path\n            d=\"M2.6665 16H19.8398\"\n            stroke={\n              theme === \"violet\"\n                ? \"white\"\n                : theme === \"dark\"\n                ? \"#bedbb0\"\n                : \"#2e1746\"\n            }\n            strokeWidth=\"1.5\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n          />\n          <path\n            d=\"M16.8667 11.5332L21.3334 15.9999L16.8667 20.4665\"\n            stroke={\n              theme === \"violet\"\n                ? \"white\"\n                : theme === \"dark\"\n                ? \"#bedbb0\"\n                : \"#2e1746\"\n            }\n            strokeWidth=\"1.5\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n          />\n        </svg>\n        <span\n          className={clsx(\n            styles.logoutButtonSpan,\n            theme === \"light\"\n              ? styles.logoutButtonSpanLight\n              : styles.logoutButtonSpan\n          )}>\n          Log out\n        </span>\n      </button>\n    </aside>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"cont\":\"ParametersForm_cont__5LVS-\",\"panelParameters\":\"ParametersForm_panelParameters__1KVP7\",\"parametersTitle\":\"ParametersForm_parametersTitle__d6HUH\",\"parametersLabel\":\"ParametersForm_parametersLabel__QpyQR\",\"labelLight\":\"ParametersForm_labelLight__NB4YE\",\"parametersInput\":\"ParametersForm_parametersInput__URTIp\",\"parametersSelect\":\"ParametersForm_parametersSelect__JbFNI\",\"cBotSelect\":\"ParametersForm_cBotSelect__qyOdx\",\"inputViolet\":\"ParametersForm_inputViolet__0dVbj\",\"selectViolet\":\"ParametersForm_selectViolet__BXhk4\",\"startBtn\":\"ParametersForm_startBtn__qOf3j\"};","import React, { useCallback, useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { toast } from \"react-toastify\";\nimport clsx from \"clsx\";\nimport styles from \"./ParametersForm.module.css\";\n\nexport default function ParametersForm({ theme }) {\n  const [robots, setRobots] = useState([]);\n  const [isSelectedId, setIsSelectedId] = useState(null);\n\n  const [instrument, setInstrument] = useState(\"XAUUSD\");\n  const [volume, setVolume] = useState(0.01);\n  const [factor, setFactor] = useState(9);\n  const [cBot, setCBot] = useState(\"Choose cBot\");\n\n  // Citește și parsează JSON din localStorage\n  function getLocalJSON(key) {\n    try {\n      const raw = localStorage.getItem(key);\n      return raw ? JSON.parse(raw) : null;\n    } catch {\n      return null;\n    }\n  }\n\n  // Sincronizare din localStorage\n  const syncFromLocalStorage = useCallback(() => {\n    const storedBots = getLocalJSON(\"cBots\") || [];\n    setRobots(storedBots);\n\n    const storedSelected = getLocalJSON(\"cBotSelected\");\n    if (storedSelected) {\n      setIsSelectedId(storedSelected.id || null);\n      setInstrument(storedSelected.instrument || \"XAUUSD\");\n      setVolume(storedSelected.volume ?? 0.01);\n      setFactor(storedSelected.factor ?? 9);\n      setCBot(storedSelected.cBotName || \"Choose cBot\");\n    } else {\n      setIsSelectedId(null);\n      setInstrument(\"XAUUSD\");\n      setVolume(0.01);\n      setFactor(9);\n      setCBot(\"Choose cBot\");\n    }\n  }, []);\n\n  // La montare\n  useEffect(() => {\n    syncFromLocalStorage();\n  }, [syncFromLocalStorage]);\n\n  // Ascultă modificările locale din alt tab / component\n  useEffect(() => {\n    const handleStorageChange = (e) => {\n      if (e.key === \"cBots\" || e.key === \"cBotSelected\") {\n        syncFromLocalStorage();\n      }\n    };\n    window.addEventListener(\"storage\", handleStorageChange);\n    return () => window.removeEventListener(\"storage\", handleStorageChange);\n  }, [syncFromLocalStorage]);\n\n  // Salvare modificări\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const selectedCBot = robots.find((r) => r.id === isSelectedId);\n    if (!selectedCBot) return;\n\n    const modifiedCBot = {\n      ...selectedCBot,\n      volume,\n      instrument,\n      factor,\n    };\n\n    localStorage.setItem(\"cBotSelected\", JSON.stringify(modifiedCBot));\n\n    const index = robots.findIndex((r) => r.id === modifiedCBot.id);\n    if (index !== -1) {\n      const updatedRobots = [...robots];\n      updatedRobots.splice(index, 1, modifiedCBot);\n      localStorage.setItem(\"cBots\", JSON.stringify(updatedRobots));\n      setRobots(updatedRobots);\n      toast.success(\"Parameters saved successfully!\");\n    }\n  };\n\n  // Când selectezi alt cBot din dropdown\n  const handleCBotChange = (e) => {\n    const selectedName = e.target.value;\n    const selectedRobot = robots.find((r) => r.cBotName === selectedName);\n    if (!selectedRobot) return;\n\n    setIsSelectedId(selectedRobot.id);\n    setCBot(selectedRobot.cBotName);\n    setInstrument(selectedRobot.instrument || \"XAUUSD\");\n    setVolume(selectedRobot.volume ?? 0.01);\n    setFactor(selectedRobot.factor ?? 9);\n\n    localStorage.setItem(\"cBotSelected\", JSON.stringify(selectedRobot));\n  };\n\n  return (\n    <div className={styles.cont}>\n      <form className={styles.panelParameters} onSubmit={handleSubmit}>\n        <h2 className={styles.parametersTitle}>Parameters</h2>\n\n        <label\n          className={clsx(\n            styles.parametersLabel,\n            theme === \"light\" && styles.labelLight\n          )}\n          htmlFor=\"instrument\">\n          Instrument\n        </label>\n        <select\n          className={clsx(\n            styles.parametersSelect,\n            styles.cBotSelect,\n            theme === \"violet\" && styles.selectViolet\n          )}\n          id=\"instrument\"\n          value={instrument}\n          onChange={(e) => setInstrument(e.target.value)}>\n          <option>XAUUSD</option>\n          <option>US30</option>\n          <option>BTCUSD</option>\n          <option>EURUSD</option>\n        </select>\n\n        <label\n          className={clsx(\n            styles.parametersLabel,\n            theme === \"light\" && styles.labelLight\n          )}\n          htmlFor=\"volume\">\n          Minimum Volume\n        </label>\n        <input\n          className={clsx(\n            styles.parametersInput,\n            theme === \"violet\" && styles.inputViolet\n          )}\n          type=\"number\"\n          id=\"volume\"\n          value={volume}\n          step=\"0.01\"\n          min=\"0.01\"\n          onChange={(e) => setVolume(parseFloat(e.target.value))}\n        />\n\n        <label\n          className={clsx(\n            styles.parametersLabel,\n            theme === \"light\" && styles.labelLight\n          )}\n          htmlFor=\"factor\">\n          Boost Factor\n        </label>\n        <input\n          className={clsx(\n            styles.parametersInput,\n            theme === \"violet\" && styles.inputViolet\n          )}\n          type=\"number\"\n          id=\"factor\"\n          value={factor}\n          min=\"1\"\n          max=\"50\"\n          onChange={(e) => setFactor(parseInt(e.target.value))}\n        />\n\n        <label\n          className={clsx(\n            styles.parametersLabel,\n            theme === \"light\" && styles.labelLight\n          )}\n          htmlFor=\"cBot\">\n          cBot\n        </label>\n        <select\n          className={clsx(\n            styles.parametersSelect,\n            styles.cBotSelect,\n            theme === \"violet\" && styles.selectViolet\n          )}\n          id=\"cBot\"\n          value={cBot}\n          onChange={handleCBotChange}>\n          {robots.map((r) => (\n            <option key={r.id}>{r.cBotName}</option>\n          ))}\n        </select>\n\n        <button type=\"submit\" className={styles.startBtn}>\n          Apply\n        </button>\n      </form>\n    </div>\n  );\n}\n\nParametersForm.propTypes = {\n  theme: PropTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"cont\":\"SidebarRight_cont__MMeG0\",\"paramsCont\":\"SidebarRight_paramsCont__qLUYu\",\"asideLight\":\"SidebarRight_asideLight__w-Q9m\",\"asideViolet\":\"SidebarRight_asideViolet__z7BMq\",\"asideDark\":\"SidebarRight_asideDark__9K8J7\",\"chatCont\":\"SidebarRight_chatCont__7bIbC\",\"parametersTitle\":\"SidebarRight_parametersTitle__UwpfZ\",\"chatFab\":\"SidebarRight_chatFab__FmXhK\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { NavLink } from \"react-router-dom\";\n\nimport clsx from \"clsx\";\n\nimport LogoSection from \"../LogoSection/LogoSection\";\nimport ParametersForm from \"../ParametersForm/ParametersForm\";\n\nimport styles from \"./SidebarRight.module.css\";\n\nexport default function SidebarRight({ sideBarRightRef, theme, params }) {\n  return (\n    <aside\n      ref={sideBarRightRef}\n      className={clsx(\n        styles.cont,\n        theme === \"dark\"\n          ? styles.asideDark\n          : theme === \"violet\"\n          ? styles.asideViolet\n          : styles.asideLight\n      )}>\n      <div className={styles.paramsCont}>\n        <LogoSection menuType={\"Settings\"} theme={theme} />\n        <ParametersForm params={params} theme={theme} />\n        <div className={styles.chatCont}>\n          <h2 className={styles.parametersTitle}>Chat</h2>\n          <NavLink to=\"/home/chat\" className={styles.chatFab}>\n            <svg width=\"26\" height=\"26\" viewBox=\"0 0 24 24\">\n              <path\n                fill=\"#151b22\"\n                d=\"M12 2C6.48 2 2 5.58 2 10c0 1.78.73 3.43 1.98 4.82L2 22l6.63-2.54C9.76 19.82 10.87 20 12 20c5.52 0 10-3.58 10-8s-4.48-8-10-8z\"></path>\n            </svg>\n          </NavLink>\n        </div>\n      </div>\n    </aside>\n  );\n}\n\nSidebarRight.propTypes = {\n  sideBarRightRef: PropTypes.object,\n  theme: PropTypes.string,\n  params: PropTypes.object,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"HomePage_section__bINJC\",\"sidebarWrapper\":\"HomePage_sidebarWrapper__BcDTC\",\"sidebarWrapperRight\":\"HomePage_sidebarWrapperRight__wTMs-\",\"bgDark\":\"HomePage_bgDark__5X-Bg\",\"sidebarOpen\":\"HomePage_sidebarOpen__6c+US\",\"sidebarClose\":\"HomePage_sidebarClose__VisbQ\",\"sidebarRightClose\":\"HomePage_sidebarRightClose__iLjbW\"};","import React, { useEffect, useRef, useState } from \"react\";\nimport { useMediaQuery } from \"react-responsive\";\nimport SharedLayout from \"../../components/SharedLayout/SharedLayout\";\nimport Sidebar from \"../../components/Sidebar\";\nimport SidebarRight from \"../../components/SidebarRight/SidebarRight\";\nimport useToggle from \"../../hooks/useToggle\";\nimport styles from \"./HomePage.module.css\";\n// import { useAuth } from \"../../hooks/useAuth\";\nimport clsx from \"clsx\";\n\nconst breakpoints = {\n  mobile: \"(max-width: 767px)\",\n  tablet: \"(min-width:768px)\",\n  desktop: \"(min-width:1024px)\",\n};\n\n// export default function HomePage() {\n//   const [isSidebarVisible, toggleIsSidebarVisible] = useToggle(false); // Default to false for mobile\n//   const sideBarRef = useRef();\n//   const isDesktop = useMediaQuery({ query: breakpoints.desktop });\n//   const { user } = useAuth()\n\n//   useEffect(() => {\n//     const handleEscapeKey = (event) => {\n//       if (event.key === \"Escape\" && isSidebarVisible) toggleIsSidebarVisible();\n//     };\n\n//     const handleClickOutside = (event) => {\n//       if (sideBarRef.current && !sideBarRef.current.contains(event.target) && isSidebarVisible) {\n//         toggleIsSidebarVisible();\n//       }\n//     };\n\n//     document.addEventListener(\"keydown\", handleEscapeKey);\n//     document.addEventListener(\"mousedown\", handleClickOutside);\n\n//     return () => {\n//       document.removeEventListener(\"keydown\", handleEscapeKey);\n//       document.removeEventListener(\"mousedown\", handleClickOutside);\n//     };\n//   }, [isSidebarVisible, toggleIsSidebarVisible]);\n\n//   return (\n//     <section className={styles.section}>\n//       {!isDesktop && (\n//         <div\n//           className={clsx(\n//             styles.sidebarWrapper,\n//             isSidebarVisible ? styles.sidebarOpen : styles.sidebarClose,\n//             user?.theme === \"dark\" && styles.bgDark\n//           )}\n//         >\n//           <Sidebar sideBarRef={sideBarRef} />\n//         </div>\n//       )}\n//       {isDesktop && <Sidebar />}\n//       <SharedLayout handleClick={toggleIsSidebarVisible} />\n//     </section>\n//   );\n\n// }\n\nexport default function HomePage() {\n  const [isSidebarVisible, toggleIsSidebarVisible] = useToggle(false); // Default to false for mobile\n  const [isSidebarRightVisible, toggleIsSidebarRightVisible] = useToggle(false); // Default to false for mobile\n\n  const sideBarRef = useRef();\n  const sideBarRightRef = useRef();\n\n  const isDesktop = useMediaQuery({ query: breakpoints.desktop });\n  // const { user } = useAuth();\n  const [theme, setTheme] = useState(localStorage.getItem(\"theme\") || \"dark\");\n  const user = JSON.parse(localStorage.getItem(\"user\")) || {};\n  const [params, setParams] = useState(null);\n\n  useEffect(() => {\n    const savedParams = localStorage.getItem(\"parameters\");\n    if (savedParams) {\n      setParams(JSON.parse(savedParams));\n    }\n  }, []);\n\n  const language = localStorage.getItem(\"lang\") || \"english\";\n\n  useEffect(() => {\n    const storedTheme = localStorage.getItem(\"theme\") || \"dark\";\n    setTheme(storedTheme);\n  }, []);\n\n  useEffect(() => {\n    const handleEscapeKey = (event) => {\n      if (event.key === \"Escape\" && isSidebarVisible) toggleIsSidebarVisible();\n    };\n\n    const handleClickOutside = (event) => {\n      if (\n        sideBarRef.current &&\n        !sideBarRef.current.contains(event.target) &&\n        isSidebarVisible\n      ) {\n        toggleIsSidebarVisible();\n      }\n    };\n\n    document.addEventListener(\"keydown\", handleEscapeKey);\n    document.addEventListener(\"mousedown\", handleClickOutside);\n\n    return () => {\n      document.removeEventListener(\"keydown\", handleEscapeKey);\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [isSidebarVisible, toggleIsSidebarVisible]);\n\n  useEffect(() => {\n    const handleEscapeKey = (event) => {\n      if (event.key === \"Escape\" && isSidebarRightVisible)\n        toggleIsSidebarRightVisible();\n    };\n\n    const handleClickOutside = (event) => {\n      if (\n        sideBarRightRef.current &&\n        !sideBarRightRef.current.contains(event.target) &&\n        isSidebarRightVisible\n      ) {\n        toggleIsSidebarRightVisible();\n      }\n    };\n\n    document.addEventListener(\"keydown\", handleEscapeKey);\n    document.addEventListener(\"mousedown\", handleClickOutside);\n\n    return () => {\n      document.removeEventListener(\"keydown\", handleEscapeKey);\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [isSidebarRightVisible, toggleIsSidebarRightVisible]);\n\n  return (\n    <section className={styles.section}>\n      {!isDesktop && (\n        <div\n          className={clsx(\n            styles.sidebarWrapper,\n            isSidebarVisible ? styles.sidebarOpen : styles.sidebarClose,\n            theme === \"dark\" && styles.bgDark\n          )}>\n          <Sidebar sideBarRef={sideBarRef} theme={theme} />\n        </div>\n      )}\n      {isDesktop && <Sidebar theme={theme} />}\n\n      <SharedLayout\n        handleClick={toggleIsSidebarVisible}\n        handleRightClick={toggleIsSidebarRightVisible}\n        user={user}\n        theme={theme}\n        lang={language}\n      />\n\n      {!isDesktop && (\n        <div\n          className={clsx(\n            styles.sidebarWrapperRight,\n            isSidebarRightVisible\n              ? styles.sidebarOpen\n              : styles.sidebarRightClose,\n            theme === \"dark\" && styles.bgDark\n          )}>\n          <SidebarRight\n            sideBarRightRef={sideBarRightRef}\n            theme={theme}\n            params={params}\n          />\n        </div>\n      )}\n      {isDesktop && <SidebarRight theme={theme} params={params} />}\n    </section>\n  );\n}\n","import HomePage from './HomePage.jsx'\n\nexport default HomePage","// extracted by mini-css-extract-plugin\nexport default {\"modalFooter\":\"ModalFooter_modalFooter__3gOme\",\"isOpen\":\"ModalFooter_isOpen__gmLW4\",\"modalBg\":\"ModalFooter_modalBg__z1WEm\",\"modalContent\":\"ModalFooter_modalContent__CEgNx\",\"footerCards\":\"ModalFooter_footerCards__nxYMk\",\"footerTeamCard\":\"ModalFooter_footerTeamCard__lOGqM\",\"Radu\":\"ModalFooter_Radu__M-LEv\",\"Adrian\":\"ModalFooter_Adrian__DAPQe\",\"Sara\":\"ModalFooter_Sara__cDmxI\",\"catalin\":\"ModalFooter_catalin__3PU8V\",\"teamMemberImage\":\"ModalFooter_teamMemberImage__ADykH\",\"footerMemberInfo\":\"ModalFooter_footerMemberInfo__hXj4Z\",\"footerTeamNameLink\":\"ModalFooter_footerTeamNameLink__Rlgem\",\"footerTeamName\":\"ModalFooter_footerTeamName__WAy5M\",\"socialLinks\":\"ModalFooter_socialLinks__dAxK9\",\"footerGithubIcon\":\"ModalFooter_footerGithubIcon__27FGk\",\"footerLinkedinIcon\":\"ModalFooter_footerLinkedinIcon__OEbyU\",\"footerPhoneIcon\":\"ModalFooter_footerPhoneIcon__s4q-x\"};","// extracted by mini-css-extract-plugin\nexport default {\"logo\":\"FooterLogo_logo__aNepg\",\"formLogo\":\"FooterLogo_formLogo__JyfIA\"};","import { Link } from \"react-router-dom\";\nimport styles from \"./FooterLogo.module.css\";\nimport logoImage from \"../../../images/Roby.jpg\";\nimport PropTypes from \"prop-types\";\n\nconst Logo = ({ variant = \"default\" }) => {\n    return (\n        <Link\n            className={`${styles.logo} ${styles[variant] || styles.default}`}\n            to=\"/\">\n            <img src={logoImage} alt=\"Logo\" />\n            <span>RobiForexGabyTrade</span>\n        </Link>\n    );\n};\n\nLogo.propTypes = {\n    variant: PropTypes.string,\n};\n\nexport default Logo;\n","// extracted by mini-css-extract-plugin\nexport default {\"formButton\":\"FormButton_formButton__xPGwm\",\"multiColorButtton\":\"FormButton_multiColorButtton__4LuwL\",\"whiteButtton\":\"FormButton_whiteButtton__KePqG\"};","import styles from \"./FormButton.module.css\";\n\nconst FormButton = ({\n  type,\n  text,\n  handlerFunction,\n  variant,\n  isDisabled = false,\n}) => {\n  return (\n    <button\n      type={type}\n      onClick={handlerFunction}\n      className={`${styles.formButton} ${styles[variant]}`}\n      disabled={isDisabled}\n    >\n      {text}\n    </button>\n  );\n};\n\nexport default FormButton;\n","import React, { useEffect, useRef } from \"react\";\nimport styles from \"./ModalFooter.module.css\";\n// import { useMediaQuery } from \"react-responsive\";\nimport ModalLogo from \"../commonComponents/FooterLogo/FooterLogo\";\nimport { FaGithub, FaLinkedin, FaPhoneAlt, FaFacebook } from \"react-icons/fa\";\nimport FormButton from \"../commonComponents/FormButton/FormButton\";\nimport \"animate.css\";\n\n// Corectarea importului imaginii\nimport Radu from \"../../images/teamMembersPhoto/Radu.webp\";\nimport Roby from \"../../images/teamMembersPhoto/Roby.jpg\";\n\nconst ModalFooter = ({ closeModal }) => {\n  const modalRef = useRef();\n\n  useEffect(() => {\n    document.body.style.overflow = \"hidden\";\n\n    const addCloseEvent = (event) => {\n      if (event.key === \"Escape\") closeModal();\n    };\n    document.addEventListener(\"keydown\", addCloseEvent);\n\n    return () => {\n      document.body.style.overflow = \"auto\";\n      document.removeEventListener(\"keydown\", addCloseEvent);\n    };\n  });\n\n  const closeOnClickOutside = (event) => {\n    if (event.currentTarget === event.target) {\n      closeModal();\n    }\n  };\n\n  // const screenCondition = useMediaQuery({ query: \"(min-width: 768px)\" });\n\n  const animation = \"animate__animated animate__fadeInDown animate__slow\";\n\n  return (\n    <div\n      className={styles.modalFooter}\n      onClick={closeOnClickOutside}\n      ref={modalRef}>\n      <div className={styles.modalBg}>\n        <div className={styles.modalContent}>\n          {/* {screenCondition && <ModalLogo variant={\"formLogo\"} />} */}\n          <ModalLogo variant={\"formLogo\"} />\n          <h2>RobiTrader Team:</h2>\n\n          <div className={styles.footerCards}>\n            {/* Card pentru Gaby */}\n            <div\n              className={`${styles.footerTeamCard} ${animation} ${styles.Adrian}`}>\n              <img\n                src={Roby} // Folosește variabila corectă pentru imagine\n                alt=\"Anton Ovidiu-Gabriel\"\n                className={styles.teamMemberImage}\n              />\n              <span className={styles.footerTeamName}>\n                Anton Ovidiu-Gabriel\n              </span>\n              <em className={styles.footerTeamFunction}>Project Manager</em>\n              <div className={styles.socialLinks}>\n                <a\n                  href=\"https://github.com/ovidiu12345678\"\n                  className={styles.footerGithubIcon}\n                  aria-label=\"GitHub profile\"\n                  target=\"_blank\"\n                  rel=\"noreferrer noopener\">\n                  <FaGithub />\n                </a>\n                <a\n                  href=\"https://www.facebook.com/anton.gabriel.7739\"\n                  className={styles.footerLinkedinIcon}\n                  aria-label=\"LinkedIn profile\"\n                  target=\"_blank\"\n                  rel=\"noreferrer noopener\">\n                  <FaFacebook />\n                </a>\n                <a\n                  href=\"tel:+40759337248\"\n                  className={styles.footerPhoneIcon}\n                  aria-label=\"Phone\">\n                  <FaPhoneAlt />\n                </a>\n              </div>\n            </div>\n\n            {/* Card pentru Radu */}\n            <div\n              className={`${styles.footerTeamCard} ${animation} ${styles.Radu}`}>\n              <a\n                href=\"https://radubogdannaramzoiu.link\"\n                aria-label=\"My e visit-card\"\n                target=\"_blank\"\n                rel=\"noreferrer noopener\">\n                <img\n                  src={Radu} // Folosește variabila corectă pentru imagine\n                  alt=\"Radu\"\n                  className={styles.teamMemberImage}\n                />\n              </a>\n\n              <span className={styles.footerTeamName}>\n                Naramzoiu Radu Bogdan\n              </span>\n              <em className={styles.footerTeamFunction}>Team Leader</em>\n              <div className={styles.socialLinks}>\n                <a\n                  href=\"https://github.com/turbomatrixxxl\"\n                  className={styles.footerGithubIcon}\n                  aria-label=\"GitHub profile\"\n                  target=\"_blank\"\n                  rel=\"noreferrer noopener\">\n                  <FaGithub />\n                </a>\n                <a\n                  href=\"https://www.linkedin.com/in/radu-bogdan-naramzoiu-fullstack-developer/\"\n                  className={styles.footerLinkedinIcon}\n                  aria-label=\"LinkedIn profile\"\n                  target=\"_blank\"\n                  rel=\"noreferrer noopener\">\n                  <FaLinkedin />\n                </a>\n                <a\n                  href=\"tel:+40771392871\"\n                  className={styles.footerPhoneIcon}\n                  aria-label=\"Phone\">\n                  <FaPhoneAlt />\n                </a>\n              </div>\n            </div>\n\n            {/* Adaugă alte carduri pentru membrii echipei dacă este necesar */}\n          </div>\n\n          <FormButton\n            type={\"button\"}\n            text={\"Thank You\"}\n            variant={\"whiteButtton\"}\n            handlerFunction={() => closeModal()}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ModalFooter;\n","// extracted by mini-css-extract-plugin\nexport default {\"footer\":\"Footer_footer__kXlYa\",\"sharedFooter\":\"Footer_sharedFooter__Q-ckZ\",\"dark\":\"Footer_dark__gZc5I\",\"light\":\"Footer_light__UEkLp\",\"lightText\":\"Footer_lightText__FwGau\",\"footerText\":\"Footer_footerText__rlW5Y\"};","import { useState } from \"react\";\nimport Modal from \"../ModalFooter/ModalFooter\";\n// import { useAuth } from \"../../hooks/useAuth\";\n\nimport styles from \"./Footer.module.css\";\nimport clsx from \"clsx\";\n\nconst Footer = ({ style, sharedFooter }) => {\n  const [modalOpen, setModalOpen] = useState(false); // Starea pentru a ține evidența dacă modalul este deschis sau nu\n  // const { user } = useAuth();\n\n  const theme = localStorage.getItem(\"theme\") || \"dark\"; // Get theme from user or localStorage\n\n  const handleTextClick = () => {\n    setModalOpen(true); // Deschide modalul la click\n  };\n\n  return (\n    <footer\n      style={style}\n      className={clsx(\n        styles.footer,\n        sharedFooter === true ? styles.sharedFooter : null,\n        theme === \"light\" || theme === \"violet\" ? styles.light : null\n      )}>\n      <div\n        onClick={handleTextClick}\n        className={clsx(\n          styles.footerText,\n          theme === \"light\" || theme === \"violet\" ? styles.lightText : null\n        )}>\n        <p>℗ & © RobiForexGabyTrade</p>\n        <p>Powered by RobiTrader Team</p>\n      </div>\n      {/* Randează Modal-ul dacă este deschis */}\n      {modalOpen && <Modal closeModal={() => setModalOpen(false)} />}\n    </footer>\n  );\n};\n\nexport default Footer;\n","import { useState } from \"react\";\n\nexport default function useToggle(initialValue) {\n    const [isOpen, setIsOpen] = useState(initialValue);\n\n    function toggle() {\n        setIsOpen(!isOpen);\n    }\n\n    return [isOpen, toggle];\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Button_button__d84On\",\"violet\":\"Button_violet__xVALj\"};","import Button from \"./Button\";\n\nexport default Button;\n","import clsx from \"clsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport styles from \"./Button.module.css\";\n\nexport default function Button({\n  type,\n  children,\n  variant = \"\",\n  theme = \"light\",\n  handleClick,\n  disabled,\n  className,\n}) {\n  return (\n    <button\n      disabled={disabled}\n      onClick={handleClick}\n      type={type}\n      className={clsx(\n        styles.button,\n        variant === \"auth\"\n          ? styles.button\n          : variant === \"send\"\n          ? theme === \"violet\"\n            ? styles.violet\n            : styles.button\n          : null, // If no match, fallback to no additional styles\n        className // Allow additional custom classes\n      )}>\n      {children}\n    </button>\n  );\n}\n\nButton.propTypes = {\n  variant: PropTypes.string,\n  disabled: PropTypes.bool,\n  type: PropTypes.string,\n  handleClick: PropTypes.func,\n  children: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.object,\n    PropTypes.array,\n  ]),\n  className: PropTypes.string,\n};\n"],"names":["ThemeSelector","_ref","theme","themeA","setTheme","useState","isOpen","setIsOpen","dropdownRef","useRef","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","_jsxs","className","styles","ref","children","onClick","prev","_jsx","clsx","HiChevronUp","HiChevronDown","map","option","handleSelect","selectedTheme","localStorage","setItem","charAt","toUpperCase","slice","LanguageSelector","lang","langA","setLang","selectedLang","Input","type","placeholder","required","variant","name","handleChange","value","paddingLeft","autoComplete","handleBlur","isComment","onChange","onBlur","style","UpdateUser","onClose","user","formRef","modalRef","fileInputRef","userNewName","setUserNewName","username","userNewMail","setUserNewMail","email","userNewPassword","setUserNewPassword","selectedFile","setSelectedFile","setType","eyeVisible","toggleEyeVisible","useToggle","closedEyeVisible","toggleClosedEyeVisible","handleEscapeKey","e","key","imageUrl","URL","createObjectURL","avatarBase64","avatarURL","startsWith","roby","stopPropagation","modalContainerNeed","contDark","contLight","xmlns","width","height","fill","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","text","textDark","imgCont","imgContViolet","imgContLight","userImg","src","alt","imgPlusCont","accept","display","file","files","imgPlusBtn","iconPlusViolet","iconPlus","click","viewBox","onSubmit","preventDefault","reader","FileReader","onloadend","base64Image","result","updatedUser","password","JSON","stringify","toast","success","readAsDataURL","textarea","inputWrapper","VscEye","size","eyeIcon","eyeIconDark","VscEyeClosed","Button","btn","breakpoints","handleClick","handleRightClick","isUpdateUserModalVisible","setIsUpdateUserModalVisible","isMobile","useMediaQuery","query","isTablet","isDesktop","hover","setHover","_Fragment","handleCloseUpdateModal","onMouseEnter","onMouseLeave","fontSize","fontWeight","handleOpenUpdateModal","FaCog","color","borderRadius","Header","Outlet","Footer","sharedFooter","isModalVisible","handleModalClose","dialogRef","contRef","modalContentClassName","closeButton","leftImage","rightImage","id","HiX","menuType","navigate","useNavigate","live","cBotSelected","parse","getItem","liveA","setLive","selectedlive","modifiedCBotSelected","_objectSpread","BotStatusCard","symbol","started","LiveSelector","BotsStatus","sideBarRef","isLogoutModalVisible","toggleIsLogoutModalVisible","location","useLocation","botSelected","botStarted","setBotStarted","message","robots","body","classList","add","noScroll","remove","cont","asideDark","asideViolet","asideLight","modalOverlay","modalContent","currentTarget","Modal","modalLogoutActionCenter","logo","question","questionDark","modalButtonsContainer","removeItem","projectsCont","LogoSection","projectsNav","sideLinks","NavLink","to","_ref2","isActive","menuBtn","lightMenuBtn","lightActiveMenuBtn","activeBtn","_ref3","pathname","_ref4","_ref5","_ref6","_ref7","instrument","cBotName","newBotStarted","time","getCurrentDateTime","updatedRobots","bot","logoutButton","logoutButtonSpan","logoutButtonSpanLight","ParametersForm","setRobots","isSelectedId","setIsSelectedId","setInstrument","volume","setVolume","factor","setFactor","cBot","setCBot","getLocalJSON","raw","_unused","syncFromLocalStorage","useCallback","storedBots","storedSelected","_storedSelected$volum","_storedSelected$facto","handleStorageChange","window","selectedCBot","find","r","modifiedCBot","index","findIndex","splice","htmlFor","step","min","parseFloat","max","parseInt","_selectedRobot$volume","_selectedRobot$factor","selectedName","selectedRobot","SidebarRight","sideBarRightRef","params","isSidebarVisible","toggleIsSidebarVisible","isSidebarRightVisible","toggleIsSidebarRightVisible","setParams","savedParams","language","storedTheme","Sidebar","SharedLayout","Link","concat","logoImage","handlerFunction","isDisabled","formButton","disabled","closeModal","overflow","addCloseEvent","animation","modalFooter","modalBg","ModalLogo","footerCards","footerTeamCard","Adrian","Roby","teamMemberImage","footerTeamName","footerTeamFunction","socialLinks","href","footerGithubIcon","rel","FaGithub","footerLinkedinIcon","FaFacebook","footerPhoneIcon","FaPhoneAlt","Radu","FaLinkedin","FormButton","modalOpen","setModalOpen","handleTextClick","initialValue"],"sourceRoot":""}