{"version":3,"file":"static/js/548.b76cc12f.chunk.js","mappings":"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","sources":["redux/auth/selectorsAuth.js","hooks/useAuth.js","webpack://my-react-app/./src/pages/VerifyEmailPageComponent/VerifyEmailPageComponent.module.css?1cb8","pages/VerifyEmailPageComponent/VerifyEmailPageComponent.jsx","webpack://my-react-app/./src/components/commonComponents/Button/Button.module.css?4e57","components/commonComponents/Button/index.js","components/commonComponents/Button/Button.jsx"],"sourcesContent":["export const selectUser = (state) => state.authSlice.user;\nexport const selectAuthToken = (state) => state.authSlice.token;\nexport const selectAvatarURL = (state) => state.authSlice.avatarURL;\nexport const selectIsLoading = (state) => state.authSlice.isLoading;\nexport const selectIsLoggedIn = (state) => state.authSlice.isLoggedIn;\nexport const selectIsisRegistered = (state) => state.authSlice.isRegistered;\nexport const selectIsRefreshing = (state) => state.authSlice.isRefreshing;\nexport const selectError = (state) => state.authSlice.error;\nexport const selectIsemailResendStatus = (state) =>\n  state.authSlice.emailResendStatus;\nexport const selectIsLoggedOut = (state) => state.authSlice.isLoggedOut;\nexport const selectProjects = (state) => state.authSlice.projects;\n","import { useSelector } from \"react-redux\";\nimport {\n  selectUser,\n  selectAuthToken,\n  selectAvatarURL,\n  selectIsLoading,\n  selectIsLoggedIn,\n  selectIsisRegistered,\n  selectIsRefreshing,\n  selectError,\n  selectIsemailResendStatus,\n  selectIsLoggedOut,\n  selectProjects,\n} from \"../redux/auth/selectorsAuth\";\n\nexport const useAuth = () => {\n  const user = useSelector(selectUser);\n  const tokenAuth = useSelector(selectAuthToken);\n  const avatarUrl = useSelector(selectAvatarURL);\n  const isLoadingAuth = useSelector(selectIsLoading);\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const isRegistered = useSelector(selectIsisRegistered);\n  const isRefreshing = useSelector(selectIsRefreshing);\n  const errorAuth = useSelector(selectError);\n  const emailResendStatus = useSelector(selectIsemailResendStatus);\n  const isLoggedOut = useSelector(selectIsLoggedOut);\n  const projects = useSelector(selectProjects);\n\n  return {\n    tokenAuth,\n    isLoggedIn,\n    user,\n    errorAuth,\n    isRefreshing,\n    isLoadingAuth,\n    isRegistered,\n    emailResendStatus,\n    isLoggedOut,\n    avatarUrl,\n    projects,\n  };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"VerifyEmailPageComponent_container__8IaQN\",\"title\":\"VerifyEmailPageComponent_title__NpOlo\",\"message\":\"VerifyEmailPageComponent_message__ndlL5\",\"strong\":\"VerifyEmailPageComponent_strong__t6Cd0\",\"infoCont\":\"VerifyEmailPageComponent_infoCont__5cAiE\",\"infoText\":\"VerifyEmailPageComponent_infoText__5kjyE\",\"emailLink\":\"VerifyEmailPageComponent_emailLink__Fmb8e\",\"link\":\"VerifyEmailPageComponent_link__Dnh7c\"};","import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { resendVerificationEmail } from \"../../redux/auth/operationsAuth\";\nimport { useAuth } from \"../../hooks/useAuth\";\nimport { useNavigate } from \"react-router-dom\";\nimport Button from \"../../components/commonComponents/Button\";\nimport styles from \"./VerifyEmailPageComponent.module.css\";\n\nconst VerifyEmailPage = () => {\n  const { user, isLoggedIn, errorAuth } = useAuth();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    // Navigate to home if user is logged in or already verified\n    if (isLoggedIn || user?.verify) {\n      navigate(\"/\");\n    }\n  }, [isLoggedIn, user, navigate]);\n\n  const handleResendVerificationEmail = () => {\n    if (!user) {\n      navigate(\"/auth/login\");\n      return;\n    }\n\n    // console.log(user);\n\n    dispatch(resendVerificationEmail(user?.email));\n  };\n\n  useEffect(() => {\n    if (errorAuth) {\n      console.error(\"Error:\", errorAuth);\n    }\n  }, [errorAuth]);\n\n  const getEmailProviderUrl = (email) => {\n    if (!email || !email.includes(\"@\")) {\n      console.warn(\"Invalid email format:\", email);\n      return \"https://mail.google.com\";\n    }\n\n    const domain = email?.split(\"@\")[1];\n    switch (domain) {\n      case \"gmail.com\":\n        return `https://mail.google.com/mail/u/0/#inbox`;\n      case \"yahoo.com\":\n        return `https://mail.yahoo.com`;\n      case \"outlook.com\":\n      case \"hotmail.com\":\n        return `https://outlook.live.com/mail/0/inbox`;\n      case \"icloud.com\":\n        return `https://www.icloud.com/mail`;\n      default:\n        return `https://mail.${domain}`;\n    }\n  };\n\n  const email = user?.email ?? \"your email address\";\n\n  return (\n    <section className={styles.container}>\n      <h2 className={styles.title}>Please verify your email address</h2>\n      <p className={styles.message}>\n        We sent a verification link to your email:{\" \"}\n        <strong className={styles.strong}>{email}</strong>\n      </p>\n      <a\n        className={styles.emailLink}\n        href={getEmailProviderUrl(user?.email)}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\">\n        <Button variant=\"auth\">Go to your email provider</Button>\n      </a>\n      <Button\n        handleClick={() => {\n          handleResendVerificationEmail();\n        }}\n        type=\"button\"\n        variant=\"auth\">\n        Resend Verification Email\n      </Button>\n\n      {errorAuth && typeof errorAuth === \"string\" && (\n        <p className={styles.error}>{errorAuth}</p>\n      )}\n\n      <div className={styles.infoCont}>\n        <p className={styles.infoText}>\n          If you've already verified your email, you can go to the\n        </p>\n\n        <Button\n          variant=\"auth\"\n          handleClick={() => {\n            navigate(\"/auth/login\");\n          }}>\n          Login page\n        </Button>\n\n        <p className={styles.infoText}>to sign in.</p>\n      </div>\n    </section>\n  );\n};\n\nexport default VerifyEmailPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Button_button__d84On\",\"violet\":\"Button_violet__xVALj\"};","import Button from \"./Button\";\n\nexport default Button;\n","import clsx from \"clsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport styles from \"./Button.module.css\";\n\nexport default function Button({\n  type,\n  children,\n  variant = \"\",\n  theme = \"light\",\n  handleClick,\n  disabled,\n  className,\n}) {\n  return (\n    <button\n      disabled={disabled}\n      onClick={handleClick}\n      type={type}\n      className={clsx(\n        styles.button,\n        variant === \"auth\"\n          ? styles.button\n          : variant === \"send\"\n          ? theme === \"violet\"\n            ? styles.violet\n            : styles.button\n          : null, // If no match, fallback to no additional styles\n        className // Allow additional custom classes\n      )}>\n      {children}\n    </button>\n  );\n}\n\nButton.propTypes = {\n  variant: PropTypes.string,\n  disabled: PropTypes.bool,\n  type: PropTypes.string,\n  handleClick: PropTypes.func,\n  children: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.object,\n    PropTypes.array,\n  ]),\n  className: PropTypes.string,\n};\n"],"names":["selectUser","state","authSlice","user","selectAuthToken","token","selectAvatarURL","avatarURL","selectIsLoading","isLoading","selectIsLoggedIn","isLoggedIn","selectIsisRegistered","isRegistered","selectIsRefreshing","isRefreshing","selectError","error","selectIsemailResendStatus","emailResendStatus","selectIsLoggedOut","isLoggedOut","selectProjects","projects","useAuth","useSelector","tokenAuth","avatarUrl","isLoadingAuth","errorAuth","VerifyEmailPage","_user$email","dispatch","useDispatch","navigate","useNavigate","useEffect","verify","console","email","_jsxs","className","styles","container","children","_jsx","title","message","strong","emailLink","href","includes","warn","domain","split","concat","getEmailProviderUrl","target","rel","Button","variant","handleClick","resendVerificationEmail","type","infoCont","infoText","_ref","theme","disabled","onClick","clsx"],"sourceRoot":""}