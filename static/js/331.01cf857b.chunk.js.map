{"version":3,"file":"static/js/331.01cf857b.chunk.js","mappings":"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","sources":["redux/public/selectorsChats.js","hooks/useChats.js","webpack://my-react-app/./src/pages/ConversationsPage/ConversationsPage.module.css?9d95","pages/ConversationsPage/index.js","pages/ConversationsPage/ConversationsPage.jsx"],"sourcesContent":["import { createSelector } from \"reselect\";\n\nconst selectChatsState = (state) => state.chats;\n\nexport const selectActiveChats = createSelector(\n  [selectChatsState],\n  (chatsState) => chatsState.activeChats\n);\n\nexport const selectChats = createSelector(\n  [selectChatsState],\n  (chatsState) => chatsState.chats\n);\n\nexport const selectLoading = createSelector(\n  [selectChatsState],\n  (chatsState) => chatsState.loading\n);\n\nexport const selectError = createSelector(\n  [selectChatsState],\n  (chatsState) => chatsState.error\n);\n\nexport const selectVisitedChatIds = createSelector(\n  [selectChatsState],\n  (chatsState) => chatsState.visitedChatIds\n);\n\nconst chatByIdSelectorCache = {};\n\nexport const selectChatById = (chatId) => {\n  if (!chatByIdSelectorCache[chatId]) {\n    chatByIdSelectorCache[chatId] = createSelector(\n      [selectChats],\n      (chats) => chats.find((chat) => chat.id === chatId) || null\n    );\n  }\n  return chatByIdSelectorCache[chatId];\n};\n","import { useDispatch, useSelector } from \"react-redux\";\nimport {\n  selectError,\n  selectActiveChats,\n  selectLoading,\n  selectChats,\n  selectChatById,\n  selectVisitedChatIds,\n} from \"../redux/public/selectorsChats\";\n\nexport const useChats = () => {\n  const dispatch = useDispatch();\n  const activeChats = useSelector(selectActiveChats);\n  const isLoading = useSelector(selectLoading);\n  const errorChats = useSelector(selectError);\n  const chats = useSelector(selectChats);\n  const chatById = useSelector(selectChatById);\n  const visitedChatIds = useSelector(selectVisitedChatIds);\n\n  return {\n    activeChats,\n    isLoading,\n    errorChats,\n    chats,\n    chatById,\n    dispatch,\n    visitedChatIds,\n  };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"chatPage\":\"ConversationsPage_chatPage__iHtDC\",\"messageList\":\"ConversationsPage_messageList__UOKyd\",\"outbox\":\"ConversationsPage_outbox__vbClZ\",\"inbox\":\"ConversationsPage_inbox__FdOzf\",\"inboxUserCont\":\"ConversationsPage_inboxUserCont__0Jibm\",\"inboxUserImg\":\"ConversationsPage_inboxUserImg__0xkUk\",\"ownerName\":\"ConversationsPage_ownerName__A0CU9\",\"left\":\"ConversationsPage_left__YpJWE\",\"right\":\"ConversationsPage_right__suqrc\",\"msgOutboxContent\":\"ConversationsPage_msgOutboxContent__4-udD\",\"timestampOutboxCont\":\"ConversationsPage_timestampOutboxCont__Suu5N\",\"timestampOutbox\":\"ConversationsPage_timestampOutbox__WioDZ\",\"sent\":\"ConversationsPage_sent__ECa--\",\"read\":\"ConversationsPage_read__6iq9C\",\"timestampOutboxLight\":\"ConversationsPage_timestampOutboxLight__OgBqY\",\"msgInboxContent\":\"ConversationsPage_msgInboxContent__013QE\",\"timestampInbox\":\"ConversationsPage_timestampInbox__Ch2ye\",\"filePreview\":\"ConversationsPage_filePreview__bdJ60\",\"imagePreview\":\"ConversationsPage_imagePreview__kPE-I\"};","import ConversationsPage from \"./ConversationsPage\";\n\nexport default ConversationsPage;\n","import React, { useRef, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport { useNavigate, useOutletContext } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\nimport { useChats } from \"../../hooks/useChats\";\n\nimport clsx from \"clsx\";\n\nimport roby from \"../../images/Roby.jpg\";\n\nimport styles from \"./ConversationsPage.module.css\";\nimport { addUser } from \"../../redux/public/chatsSlice\";\n\nexport default function ConversationsPage() {\n  const { chatId } = useParams();\n  const { chats } = useChats();\n  const { file } = useOutletContext();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const messagesEndRef = useRef(null);\n\n  const selectedChat = chats.find((chat) => chat.id === chatId);\n\n  const messages = selectedChat?.messages || [];\n\n  const globalChat = chats.find((chat) => chat.id === \"global\");\n\n  const globalMessages = [];\n\n  if (globalChat) {\n    globalChat.users?.forEach((us) => {\n      const userInfo = { chatId: us.id, user: us.user };\n      us.messages.forEach((msg) => {\n        globalMessages.push({ ...userInfo, ...msg });\n      });\n    });\n  }\n\n  // console.log(\"globalMessages :\", globalMessages);\n\n  const formatTimestamp = (timestamp) => {\n    let date = new Date(timestamp);\n    if (isNaN(date.getTime())) {\n      const fixedTimestamp = timestamp.replace(\n        /(\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}):(\\d{2})\\.(\\d{3})Z$/,\n        \"$1:59.$3Z\"\n      );\n      date = new Date(fixedTimestamp);\n    }\n    if (isNaN(date.getTime())) return \"\";\n\n    if (date.getSeconds() > 59) date.setSeconds(59);\n\n    const formattedTime = date.toLocaleTimeString([], {\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n    });\n\n    const day = date.getDate();\n    const month = date.toLocaleString(\"default\", { month: \"long\" });\n    const year = date.getFullYear();\n\n    return `${day} ${month} ${year}-${formattedTime}`;\n  };\n\n  const sortedGlolbalMessages = [...globalMessages].sort((old, neww) => {\n    const oldestMsg = new Date(formatTimestamp(old.sentAt));\n    const newestMsg = new Date(formatTimestamp(neww.sentAt));\n\n    return oldestMsg - newestMsg;\n  });\n\n  // console.log(\"sortedGlolbalMessages :\", sortedGlolbalMessages);\n\n  const sortedMessages = [...messages].sort((a, b) => {\n    const dateA = new Date(formatTimestamp(a.sentAt)).getTime();\n    const dateB = new Date(formatTimestamp(b.sentAt)).getTime();\n    return dateA - dateB; // de la cel mai vechi la cel mai nou\n  });\n\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  }, [sortedMessages]);\n\n  useEffect(() => {\n    if (!selectedChat) {\n      navigate(\"/home/chat/global\", { replace: true });\n    }\n  }, [selectedChat, navigate]);\n\n  if (!selectedChat) {\n    return <div className={styles.notFound}>Chat not found</div>;\n  }\n\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  const theme = localStorage.getItem(\"theme\") || \"dark\";\n\n  // const slowNav = setTimeout(() => {\n  //   return `home/chats/${msg.chatId}`;\n  // },1000)\n\n  return chatId !== \"global\" ? (\n    <div className={styles.chatPage}>\n      <ul className={styles.messageList}>\n        {sortedMessages.map((msg) =>\n          msg.isInbox ? (\n            <li key={msg.id} className={styles.inbox}>\n              <span className={clsx(styles.ownerName, styles.left)}>\n                {selectedChat?.user.name ?? \"\"}\n              </span>\n              <span className={styles.msgInboxContent}>{msg.content}</span>\n              <span className={styles.timestampInbox}>\n                {msg.sentAt\n                  ? formatTimestamp(msg.sentAt)\n                  : \"Time not available\"}\n              </span>\n            </li>\n          ) : (\n            <li key={msg.id} className={styles.outbox}>\n              <span className={clsx(styles.ownerName, styles.right)}>\n                {user ? user?.username : \"User\"}\n              </span>\n              <span className={styles.msgOutboxContent}>{msg?.content}</span>\n              <div className={styles.timestampOutboxCont}>\n                {msg?.isRead ? (\n                  <span\n                    className={clsx(\n                      styles.timestampOutbox,\n                      theme === \"light\"\n                        ? styles.timestampOutboxLight\n                        : styles.read\n                    )}>\n                    ✔✔\n                  </span>\n                ) : (\n                  <span\n                    className={clsx(\n                      styles.timestampOutbox,\n                      msg?.sentAt && theme === \"light\"\n                        ? styles.timestampOutboxLight\n                        : styles.sent\n                    )}>\n                    ✔\n                  </span>\n                )}\n                <span className={styles.timestampOutbox}>\n                  {msg?.sentAt\n                    ? formatTimestamp(msg?.sentAt)\n                    : \"Time not available\"}\n                </span>\n              </div>\n            </li>\n          )\n        )}\n\n        {file && (\n          <li className={styles.filePreview}>\n            {file.type.startsWith(\"image/\") ? (\n              <img\n                src={URL.createObjectURL(file)}\n                alt=\"File Preview\"\n                className={styles.imagePreview}\n              />\n            ) : (\n              <span>{file.name}</span>\n            )}\n          </li>\n        )}\n\n        {/* Referință pentru scroll */}\n        <div ref={messagesEndRef} />\n      </ul>\n    </div>\n  ) : (\n    <div className={styles.chatPage}>\n      <ul className={styles.messageList}>\n        {sortedGlolbalMessages.map((msg, index) =>\n          msg.isInbox ? (\n            <li key={`${msg?.id}-${index}-glo`} className={styles.inbox}>\n              <button\n                type=\"button\"\n                onClick={() => {\n                  dispatch(addUser({ chatId: msg?.chatId }));\n                  setTimeout(() => {\n                    navigate(`/home/chat/${msg.chatId}`);\n                  }, 500);\n                }}\n                className={styles.inboxUserCont}>\n                <img\n                  className={styles.inboxUserImg}\n                  src={msg?.user?.avatar ?? roby}\n                  alt=\"Avatar\"\n                />\n                <span className={clsx(styles.ownerName, styles.left)}>\n                  {msg?.user?.name ?? \"User\"}\n                </span>\n              </button>\n\n              <span className={styles.msgInboxContent}>{msg.content}</span>\n              <span className={styles.timestampInbox}>\n                {msg.sentAt\n                  ? formatTimestamp(msg.sentAt)\n                  : \"Time not available\"}\n              </span>\n            </li>\n          ) : (\n            <li key={`${msg?.id} - ${index}-bal`} className={styles.outbox}>\n              <span className={clsx(styles.ownerName, styles.right)}>\n                {user ? user?.username : \"Me\"}\n              </span>\n              <span className={styles.msgOutboxContent}>{msg?.content}</span>\n              <div className={styles.timestampOutboxCont}>\n                {msg?.isRead ? (\n                  <span\n                    className={clsx(\n                      styles.timestampOutbox,\n                      theme === \"light\"\n                        ? styles.timestampOutboxLight\n                        : styles.read\n                    )}>\n                    ✔✔\n                  </span>\n                ) : (\n                  <span\n                    className={clsx(\n                      styles.timestampOutbox,\n                      msg?.sentAt && theme === \"light\"\n                        ? styles.timestampOutboxLight\n                        : styles.sent\n                    )}>\n                    ✔\n                  </span>\n                )}\n                <span className={styles.timestampOutbox}>\n                  {msg?.sentAt\n                    ? formatTimestamp(msg?.sentAt)\n                    : \"Time not available\"}\n                </span>\n              </div>\n            </li>\n          )\n        )}\n\n        {file && (\n          <li className={styles.filePreview}>\n            {file.type.startsWith(\"image/\") ? (\n              <img\n                src={URL.createObjectURL(file)}\n                alt=\"File Preview\"\n                className={styles.imagePreview}\n              />\n            ) : (\n              <span>{file.name}</span>\n            )}\n          </li>\n        )}\n\n        {/* Referință pentru scroll */}\n        <div ref={messagesEndRef} />\n      </ul>\n    </div>\n  );\n}\n"],"names":["selectChatsState","state","chats","selectActiveChats","createSelector","chatsState","activeChats","selectChats","selectLoading","loading","selectError","error","selectVisitedChatIds","visitedChatIds","chatByIdSelectorCache","selectChatById","chatId","find","chat","id","useChats","dispatch","useDispatch","useSelector","isLoading","errorChats","chatById","useParams","file","useOutletContext","navigate","useNavigate","messagesEndRef","useRef","selectedChat","messages","globalChat","globalMessages","_globalChat$users","users","forEach","us","userInfo","user","msg","push","_objectSpread","formatTimestamp","timestamp","date","Date","isNaN","getTime","fixedTimestamp","replace","getSeconds","setSeconds","formattedTime","toLocaleTimeString","hour","minute","day","getDate","month","toLocaleString","year","getFullYear","concat","sortedGlolbalMessages","sort","old","neww","sentAt","sortedMessages","a","b","useEffect","_messagesEndRef$curre","current","scrollIntoView","behavior","_jsx","className","styles","notFound","children","JSON","parse","localStorage","getItem","theme","chatPage","_jsxs","messageList","map","_selectedChat$user$na","isInbox","inbox","clsx","ownerName","left","name","msgInboxContent","content","timestampInbox","outbox","right","username","msgOutboxContent","timestampOutboxCont","isRead","timestampOutbox","timestampOutboxLight","read","sent","filePreview","type","startsWith","src","URL","createObjectURL","alt","imagePreview","ref","index","_msg$user$avatar","_msg$user","_msg$user$name","_msg$user2","onClick","addUser","setTimeout","inboxUserCont","inboxUserImg","avatar","roby"],"sourceRoot":""}