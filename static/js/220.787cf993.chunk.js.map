{"version":3,"file":"static/js/220.787cf993.chunk.js","mappings":"iPACA,QAAuB,wBAAvB,EAA0D,4BAA1D,EAA+F,0BAA/F,EAAmI,2BAAnI,EAAwK,2BAAxK,EAA8M,4BAA9M,EAAmP,0BAAnP,EAAyR,6BAAzR,EAAiU,4BAAjU,EAAoW,wBAApW,EAA0Y,+B,aCC1Y,QCae,SAAkBA,GAAc,IAAb,OAAEC,GAAQD,EAC1C,MAAM,MAAEE,IAAUC,EAAAA,EAAAA,MACXC,EAAWC,IAAgBC,EAAAA,EAAAA,UAAS,CAAC,GACtCC,GAAWC,EAAAA,EAAAA,MAaXC,EAAuBC,IAC3B,MAAMC,EAAgBD,EAAKE,SAASC,OAAQC,GAAQA,EAAIC,SACxD,OAAKJ,EAAcK,OACZL,EAAcM,OAAO,CAACC,EAAQJ,IACnC,IAAIK,KAAKL,EAAIM,QAAU,IAAID,KAAKD,EAAOE,QAAUN,EAAMI,GAFvB,MAM9BG,EAAgBnB,EAAMW,OAAQH,GAClCA,EAAKY,KAAKC,KAAKC,cAAcC,SAASxB,EAAOuB,gBAG/C,OACEE,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAYC,SACxBR,EAAcS,IAAKpB,IAAI,IAAAqB,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OACtBT,EAAAA,EAAAA,KAAA,MAAAG,UACEO,EAAAA,EAAAA,MAACC,EAAAA,GAAO,CACNC,GAAE,cAAAC,OAAgB7B,EAAK8B,IACvBb,UAAWc,IAAA,IAAC,SAAEC,GAAUD,EAAA,OACtBE,EAAAA,EAAAA,GAAKf,EAAiB,CAAE,CAACA,GAAgBc,KAE3CE,QAASA,IAAMrC,GAASsC,EAAAA,EAAAA,IAAW,CAAEC,OAAQpC,EAAK8B,MAAOX,SAAA,EACzDO,EAAAA,EAAAA,MAAA,OAAKT,UAAWC,EAAeC,SAAA,EAC7BH,EAAAA,EAAAA,KAAA,OAEEC,UAAWC,EACXmB,IAAiB,UAAZrC,EAAK8B,GAAiBQ,EAAyB,QAArBjB,EAAO,OAAJrB,QAAI,IAAJA,GAAU,QAANsB,EAAJtB,EAAMY,YAAI,IAAAU,OAAN,EAAJA,EAAYiB,cAAM,IAAAlB,EAAAA,EAAImB,EACxDC,IAAI,WACJC,QAAQ,OACRC,QAASA,KAAMC,OAtCHR,EAsCoBpC,EAAK8B,QArCjDe,WAAW,KACTlD,EAAcmD,IAAIC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACbD,GAAI,IACP,CAACV,IAAUU,EAAKV,IAAW,GAAK,MAEjC,KANqBA,QAiCP1C,EAAUM,EAAK8B,KAAO,IAO7Bd,EAAAA,EAAAA,KAAA,OACEC,WAAWgB,EAAAA,EAAAA,GACTf,EACI,OAAJlB,QAAI,IAAJA,GAAU,QAANuB,EAAJvB,EAAMY,YAAI,IAAAW,GAAVA,EAAYyB,SAAW9B,EAAgBA,SAG7CQ,EAAAA,EAAAA,MAAA,OAAKT,UAAWC,EAAgBC,SAAA,EAC9BH,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAAYC,SAAM,OAAJnB,QAAI,IAAJA,GAAU,QAANwB,EAAJxB,EAAMY,YAAI,IAAAY,OAAN,EAAJA,EAAYX,QACxCG,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAAmBC,UACL,QAAzBM,EAAA1B,EAAoBC,UAAK,IAAAyB,OAAA,EAAzBA,EAA2BwB,UAAW,2BAzBtCjD,EAAK8B,OAiCtB,E,kCC9EA,QAAwB,0BAAxB,EAAgE,gCAAhE,EAAmH,qCAAnH,EAA6K,uCAA7K,EAAmO,iCAAnO,EAAiR,+BAAjR,EAAmU,qCAAnU,EAA+X,yCAA/X,EAA4b,sCCW7a,SAASoB,IACtB,MAAM,YAAEC,IAAgB1D,EAAAA,EAAAA,MAEjBF,EAAQ6D,IAAaxD,EAAAA,EAAAA,UAAS,IAErC,OACE8B,EAAAA,EAAAA,MAAA,SAAOT,UAAWC,EAAaC,SAAA,EAC7BO,EAAAA,EAAAA,MAAA,OAAKT,UAAWC,EAAmBC,SAAA,EACjCH,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAAwBC,SAAC,YACvCH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAA0BC,SAAEgC,QAE9CzB,EAAAA,EAAAA,MAAA,OAAKT,UAAWC,EAAoBC,SAAA,EAClCH,EAAAA,EAAAA,KAACqC,EAAAA,EAAS,CACRpC,UAAWC,EACXoC,YAAa,OACbC,YAAa,YACbC,MAAOjE,EACPkE,aAAeC,GAAMN,EAAUM,EAAEC,OAAOH,OAAOrC,UAC/CH,EAAAA,EAAAA,KAAA,UAAQC,UAAWC,EAAwBC,UACzCH,EAAAA,EAAAA,KAAC4C,EAAAA,EAAe,CACd3C,UAAWC,EACX2C,KAAMC,EAAAA,WAIZ9C,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAyBC,UACvCH,EAAAA,EAAAA,KAAC+C,EAAS,CAACxE,OAAQA,WAK7B,CC1CA,QAA2B,kCAA3B,EAAwE,kCAAxE,EAAyH,sCAAzH,EAAwK,gCAAxK,EAAoN,mCAApN,EAAkQ,kCAAlQ,EAA4S,+BCQ7R,SAASyE,EAAe1E,GAAyB,IAAxB,MAAEE,EAAK,WAAEyE,GAAY3E,EAC3D,MAAM4E,GAAWC,EAAAA,EAAAA,WACX,eAAEC,IAAmB3E,EAAAA,EAAAA,MAE3B4E,EAAAA,EAAAA,WAAU,KACR,MAAMC,EAAsBC,IACtBL,EAASM,UAAYN,EAASM,QAAQC,SAASF,EAAMZ,SACvDM,KAMJ,OAFAS,SAASC,iBAAiB,YAAaL,GAEhC,KACLI,SAASE,oBAAoB,YAAaN,KAE3C,CAACL,IAEJ,MAAMd,EAAc3D,EAAMW,OAAQH,GAASoE,EAAerD,SAASf,EAAK8B,KAExE,OACEd,EAAAA,EAAAA,KAAA,OAAK6D,IAAKX,EAAS/C,SACO,IAAvBgC,EAAY7C,QACXU,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAAgBC,SAAC,iCAE/BH,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAgBC,SAC5BgC,EAAY/B,IAAKpB,IAAI,IAAAsB,EAAAC,EAAA,OACpBP,EAAAA,EAAAA,KAAA,MAAkBC,UAAWC,EAAoBC,UAC/CO,EAAAA,EAAAA,MAACoD,EAAAA,GAAI,CAAClD,GAAE,cAAAC,OAAgB7B,EAAK8B,IAAMI,QAAS+B,EAAW9C,SAAA,EACrDH,EAAAA,EAAAA,KAAA,OACEqB,IAAiB,UAAZrC,EAAK8B,GAAiBQ,EAAW,OAAJtC,QAAI,IAAJA,GAAU,QAANsB,EAAJtB,EAAMY,YAAI,IAAAU,OAAN,EAAJA,EAAYiB,OAC9CE,IAAI,SACJxB,UAAWC,EACXwB,QAAQ,UAEVhB,EAAAA,EAAAA,MAAA,OAAKT,UAAWC,EAAiBC,SAAA,EAC/BH,EAAAA,EAAAA,KAAA,QAAMC,UAAWC,EAAgBC,SAAM,OAAJnB,QAAI,IAAJA,GAAU,QAANuB,EAAJvB,EAAMY,YAAI,IAAAW,OAAN,EAAJA,EAAYV,QAC/CG,EAAAA,EAAAA,KAAA,QAAMC,UAAWC,EAAaC,SAAC,oBAV5BnB,EAAK8B,SAmB1B,C,aCtDA,QAAyB,2BAAzB,EAAuG,6BAAvG,EAA6I,2BAA7I,EAAoL,8BAApL,EAA6N,6BAA7N,EAAkQ,0BAAlQ,GAA8S,oCAA9S,GAA2V,2BC+C3V,MC9CA,GDaA,WACE,MAAM,OAAEM,IAAW2C,EAAAA,EAAAA,MACb,MAAEvF,IAAUC,EAAAA,EAAAA,KACZuF,EAAexF,EAAMyF,KAAMjF,GAASA,EAAK8B,KAAOM,IAE/C8C,EAAWC,IAAgBvF,EAAAA,EAAAA,WAAS,GAErCwF,EAAcA,IAAMD,EAAcrC,IAAUA,GAElD,OACEpB,EAAAA,EAAAA,MAAA,OAAKT,WAAWgB,EAAAA,EAAAA,GAAKf,GAAeC,SAAA,CACjC+D,IAAalE,EAAAA,EAAAA,KAACgD,EAAe,CAACxE,MAAOA,EAAOyE,WAAYmB,IAExDJ,IACCtD,EAAAA,EAAAA,MAAA,OAAKT,UAAWC,EAAgBC,SAAA,EAC9BH,EAAAA,EAAAA,KAAA,OACEqB,IAAyB,UAApB2C,EAAalD,GAAiBQ,EAAO0C,EAAapE,KAAK2B,OAC5DE,IAAI,SACJxB,UAAWC,KAEbQ,EAAAA,EAAAA,MAAA,OAAKT,UAAWC,EAAiBC,SAAA,EAC/BH,EAAAA,EAAAA,KAAA,QAAMC,UAAWC,EAAgBC,SAAE6D,EAAapE,KAAKC,QACrDG,EAAAA,EAAAA,KAAA,QAAMC,UAAWC,EAAaC,SAAC,iBAIrCH,EAAAA,EAAAA,KAAA,UAAQC,WAAWgB,EAAAA,EAAAA,GAAKf,IAAyBgB,QAASkD,EAAYjE,UACpEH,EAAAA,EAAAA,KAACqE,EAAAA,IAAW,CAACC,KAAM,GAAIrE,UAAWC,SAI1C,EE7CA,GAAuB,uBAAvB,GAA0D,4BAA1D,GAAiG,2BAAjG,GAAyI,6BAAzI,GAAgL,0BAAhL,GAAiN,uBCCjN,SCQe,WACb,MAAMqE,EAAQC,aAAaC,QAAQ,UAAY,OAE/C,OACE/D,EAAAA,EAAAA,MAAA,OACET,WAAWgB,EAAAA,EAAAA,GACTf,GACU,UAAVqE,EACIrE,GACU,WAAVqE,EACArE,GACAA,IACJC,SAAA,EACFH,EAAAA,EAAAA,KAACkC,EAAU,KACXxB,EAAAA,EAAAA,MAAA,OAAKT,WAAWgB,EAAAA,EAAAA,GAAKf,IAAgBC,SAAA,EACnCH,EAAAA,EAAAA,KAAC0E,GAAU,KACX1E,EAAAA,EAAAA,KAAA,WAASC,UAAWC,GAAYC,UAC9BH,EAAAA,EAAAA,KAAC2E,EAAAA,GAAM,WAKjB,C,oEC/BA,QAAiC,kCAAjC,EAA2E,yB,aCC3E,QCIe,SAAkBrG,GAc7B,IAd8B,KAChCsG,EAAI,YACJrC,EAAW,SACXsC,EAAQ,UACR5E,EAAS,KACTJ,EAAI,aACJ4C,EAAY,MACZqC,EAAK,MACLtC,EAAK,YACLF,EAAW,aACXyC,EAAY,WACZC,EAAU,SACV7E,EAAQ,SACR8E,GAAW,GACZ3G,EACC,MAAM4G,EAAc,CAClBH,aAAcA,GAAgB,MAC9BI,MAAO,CAAE7C,YAAaA,GAAe,OACrC8C,SAAU3C,EACV5C,KAAMA,GAAQ,GACdI,WAAWgB,EAAAA,EAAAA,GAAKf,EAAcD,GAC9BsC,YAAaA,GAAe,GAC5BsC,SAAUA,IAAY,EACtBrC,MAAOA,GAAS,GAChB6C,OAAQL,GAGV,OACEtE,EAAAA,EAAAA,MAAA,OAAKyE,MAAO,CAAEL,MAAOA,GAAS,QAAU7E,UAAWC,EAAsBC,SAAA,CACtE8E,GACCjF,EAAAA,EAAAA,KAAA,YAAA+B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACMmD,GAAW,IACfI,KAAK,IAILrF,WAAWgB,EAAAA,EAAAA,GAAKf,EAAcD,OAGhCD,EAAAA,EAAAA,KAAA,SAAA+B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACE9B,WAAWgB,EAAAA,EAAAA,GAAKf,EAAcD,IAC1BiF,GAAW,IACfN,KAAMA,GAAQ,UAGjBzE,IAGP,C,0DCpDA,MAAMoF,EAAoBC,GAAUA,EAAMhH,MAE7BiH,GAAoBC,EAAAA,EAAAA,IAC/B,CAACH,GACAI,GAAeA,EAAWxD,aAGhByD,GAAcF,EAAAA,EAAAA,IACzB,CAACH,GACAI,GAAeA,EAAWnH,OAGhBqH,GAAgBH,EAAAA,EAAAA,IAC3B,CAACH,GACAI,GAAeA,EAAWjE,SAGhBoE,GAAcJ,EAAAA,EAAAA,IACzB,CAACH,GACAI,GAAeA,EAAWI,OAGhBC,GAAuBN,EAAAA,EAAAA,IAClC,CAACH,GACAI,GAAeA,EAAWvC,gBAGvB6C,EAAwB,CAAC,EAElBC,EAAkB9E,IACxB6E,EAAsB7E,KACzB6E,EAAsB7E,IAAUsE,EAAAA,EAAAA,IAC9B,CAACE,GACApH,GAAUA,EAAMyF,KAAMjF,GAASA,EAAK8B,KAAOM,IAAW,OAGpD6E,EAAsB7E,IC5BlB3C,EAAWA,KACtB,MAAMI,GAAWC,EAAAA,EAAAA,MAQjB,MAAO,CACLqD,aARkBgE,EAAAA,EAAAA,IAAYV,GAS9BW,WARgBD,EAAAA,EAAAA,IAAYN,GAS5BQ,YARiBF,EAAAA,EAAAA,IAAYL,GAS7BtH,OARY2H,EAAAA,EAAAA,IAAYP,GASxBU,UAReH,EAAAA,EAAAA,IAAYD,GAS3BrH,WACAuE,gBATqB+C,EAAAA,EAAAA,IAAYH,I","sources":["webpack://my-react-app/./src/components/ChatsList/ChatsList.module.css?3c66","components/ChatsList/index.js","components/ChatsList/ChatsList.jsx","webpack://my-react-app/./src/components/ChatsAside/ChatsAside.module.css?1726","components/ChatsAside/ChatsAside.jsx","webpack://my-react-app/./src/components/ActiveChatModal/ActiveChatModal.module.css?f0c9","components/ActiveChatModal/ActiveChatModal.jsx","webpack://my-react-app/./src/components/ChatHeader/ChatHeader.module.css?1ebc","components/ChatHeader/ChatHeader.jsx","components/ChatHeader/index.js","webpack://my-react-app/./src/pages/ChatPage/ChatPage.module.css?88db","pages/ChatPage/index.js","pages/ChatPage/ChatPage.jsx","webpack://my-react-app/./src/components/commonComponents/ChatInput/ChatInput.module.css?8275","components/commonComponents/ChatInput/index.js","components/commonComponents/ChatInput/ChatInput.jsx","redux/public/selectorsChats.js","hooks/useChats.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ChatsList_list__I-cRZ\",\"listItem\":\"ChatsList_listItem__kPu93\",\"active\":\"ChatsList_active__LcVu2\",\"imgCont\":\"ChatsList_imgCont__pOqR3\",\"userImg\":\"ChatsList_userImg__Bdvyb\",\"isOnline\":\"ChatsList_isOnline__xmj-1\",\"online\":\"ChatsList_online__oLjAE\",\"notOnline\":\"ChatsList_notOnline__gBOoL\",\"infoCont\":\"ChatsList_infoCont__rZvnu\",\"name\":\"ChatsList_name__oTa81\",\"lastMessage\":\"ChatsList_lastMessage__AJabn\"};","import ChatsList from \"./ChatsList\";\n\nexport default ChatsList;\n","import React, { useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport { useDispatch } from \"react-redux\";\nimport { accessChat } from \"../../redux/public/chatsSlice\"; // Assuming this is your async action\n\nimport { useChats } from \"../../hooks/useChats\";\n\nimport clsx from \"clsx\";\n\nimport roby from \"../../images/Roby.jpg\";\nimport gaby from \"../../images/teamMembersPhoto/Roby.jpg\";\n\nimport styles from \"./ChatsList.module.css\";\n\nexport default function ChatsList({ search }) {\n  const { chats } = useChats();\n  const [reloadMap, setReloadMap] = useState({});\n  const dispatch = useDispatch();\n\n  // console.log(\"chats :\", chats);\n\n  const handleImageError = (chatId) => {\n    setTimeout(() => {\n      setReloadMap((prev) => ({\n        ...prev,\n        [chatId]: (prev[chatId] || 0) + 1,\n      }));\n    }, 1000);\n  };\n\n  const getLastInboxMessage = (chat) => {\n    const inboxMessages = chat.messages.filter((msg) => msg.isInbox);\n    if (!inboxMessages.length) return null;\n    return inboxMessages.reduce((latest, msg) =>\n      new Date(msg.sentAt) > new Date(latest.sentAt) ? msg : latest\n    );\n  };\n\n  const filteredChats = chats.filter((chat) =>\n    chat.user.name.toLowerCase().includes(search.toLowerCase())\n  );\n\n  return (\n    <ul className={styles.list}>\n      {filteredChats.map((chat) => (\n        <li key={chat.id}>\n          <NavLink\n            to={`/home/chat/${chat.id}`}\n            className={({ isActive }) =>\n              clsx(styles.listItem, { [styles.active]: isActive })\n            }\n            onClick={() => dispatch(accessChat({ chatId: chat.id }))}>\n            <div className={styles.imgCont}>\n              <img\n                key={reloadMap[chat.id] || 0}\n                className={styles.userImg}\n                src={chat.id === \"admin\" ? gaby : chat?.user?.avatar ?? roby}\n                alt=\"User img\"\n                loading=\"lazy\"\n                onError={() => handleImageError(chat.id)}\n              />\n              <div\n                className={clsx(\n                  styles.isOnline,\n                  chat?.user?.isOnline ? styles.online : styles.notOnline\n                )}></div>\n            </div>\n            <div className={styles.infoCont}>\n              <p className={styles.name}>{chat?.user?.name}</p>\n              <p className={styles.lastMessage}>\n                {getLastInboxMessage(chat)?.content || \"No messages yet\"}\n              </p>\n            </div>\n          </NavLink>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"aside\":\"ChatsAside_aside__3mHuE\",\"asideHeader\":\"ChatsAside_asideHeader__go94t\",\"asideHeaderTitle\":\"ChatsAside_asideHeaderTitle__ALyVk\",\"asideHeaderCounter\":\"ChatsAside_asideHeaderCounter__rN0LL\",\"asideContent\":\"ChatsAside_asideContent__KW7KY\",\"asideInput\":\"ChatsAside_asideInput__uYH6S\",\"asideInputButton\":\"ChatsAside_asideInputButton__B2-T-\",\"asideInputSearchIcon\":\"ChatsAside_asideInputSearchIcon__faP6M\",\"asideChatListCont\":\"ChatsAside_asideChatListCont__+VFhF\"};","import React, { useState } from \"react\";\n\nimport { useChats } from \"../../hooks/useChats\";\n\nimport ChatsList from \"../ChatsList\";\nimport ChatInput from \"../commonComponents/ChatInput\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMagnifyingGlass } from \"@fortawesome/free-solid-svg-icons\";\n\nimport styles from \"./ChatsAside.module.css\";\n\nexport default function ChatsAside() {\n  const { activeChats } = useChats();\n\n  const [search, setSearch] = useState(\"\");\n\n  return (\n    <aside className={styles.aside}>\n      <div className={styles.asideHeader}>\n        <p className={styles.asideHeaderTitle}>Active</p>\n        <div className={styles.asideHeaderCounter}>{activeChats}</div>\n      </div>\n      <div className={styles.asideContent}>\n        <ChatInput\n          className={styles.asideInput}\n          paddingLeft={\"18px\"}\n          placeholder={\"Search...\"}\n          value={search}\n          handleChange={(e) => setSearch(e.target.value)}>\n          <button className={styles.asideInputButton}>\n            <FontAwesomeIcon\n              className={styles.asideInputSearchIcon}\n              icon={faMagnifyingGlass}\n            />\n          </button>\n        </ChatInput>\n        <div className={styles.asideChatListCont}>\n          <ChatsList search={search} />\n        </div>\n      </div>\n    </aside>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"chatList\":\"ActiveChatModal_chatList__Q9fFe\",\"noActive\":\"ActiveChatModal_noActive__PZy9L\",\"chatListItem\":\"ActiveChatModal_chatListItem__6sAea\",\"avatar\":\"ActiveChatModal_avatar__EvQWo\",\"usersInfo\":\"ActiveChatModal_usersInfo__coDBx\",\"userName\":\"ActiveChatModal_userName__oP5eh\",\"reply\":\"ActiveChatModal_reply__O8ION\"};","import React, { useEffect, useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { useChats } from \"../../hooks/useChats\";\n\nimport gaby from \"../../images/teamMembersPhoto/Roby.jpg\";\n\nimport styles from \"./ActiveChatModal.module.css\";\n\nexport default function ActiveChatModal({ chats, closeModal }) {\n  const modalRef = useRef();\n  const { visitedChatIds } = useChats();\n\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (modalRef.current && !modalRef.current.contains(event.target)) {\n        closeModal();\n      }\n    };\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [closeModal]);\n\n  const activeChats = chats.filter((chat) => visitedChatIds.includes(chat.id));\n\n  return (\n    <div ref={modalRef}>\n      {activeChats.length === 0 ? (\n        <p className={styles.noActive}>There are no active chats !</p>\n      ) : (\n        <ul className={styles.chatList}>\n          {activeChats.map((chat) => (\n            <li key={chat.id} className={styles.chatListItem}>\n              <Link to={`/home/chat/${chat.id}`} onClick={closeModal}>\n                <img\n                  src={chat.id === \"admin\" ? gaby : chat?.user?.avatar}\n                  alt=\"Avatar\"\n                  className={styles.avatar}\n                  loading=\"lazy\"\n                />\n                <div className={styles.usersInfo}>\n                  <span className={styles.userName}>{chat?.user?.name}</span>\n                  <span className={styles.reply}>Reply...</span>\n                </div>\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n\nActiveChatModal.propTypes = {\n  chats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      user: PropTypes.shape({\n        avatar: PropTypes.string.isRequired,\n        id: PropTypes.string.isRequired,\n      }).isRequired,\n    })\n  ).isRequired,\n  closeModal: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"ChatHeader_header__sYB9S\",\"leftCont\":\"ChatHeader_leftCont__wIxId\",\"chatInfo\":\"ChatHeader_chatInfo__yqipb\",\"avatar\":\"ChatHeader_avatar__xU414\",\"usersInfo\":\"ChatHeader_usersInfo__T6Apf\",\"userName\":\"ChatHeader_userName__45JlD\",\"reply\":\"ChatHeader_reply__uD5RZ\",\"rightContButton\":\"ChatHeader_rightContButton__OKbTe\",\"button\":\"ChatHeader_button__Dm29Y\"};","import React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport { useChats } from \"../../hooks/useChats\";\n\nimport clsx from \"clsx\";\n\nimport ActiveChatModal from \"../ActiveChatModal/ActiveChatModal\";\n\nimport { FaEllipsisH } from \"react-icons/fa\";\n\nimport gaby from \"../../images/teamMembersPhoto/Roby.jpg\";\n\nimport styles from \"./ChatHeader.module.css\";\n\nfunction ChatHeader() {\n  const { chatId } = useParams();\n  const { chats } = useChats();\n  const selectedChat = chats.find((chat) => chat.id === chatId);\n\n  const [showModal, setShowModal] = useState(false);\n\n  const toggleModal = () => setShowModal((prev) => !prev);\n\n  return (\n    <div className={clsx(styles.header)}>\n      {showModal && <ActiveChatModal chats={chats} closeModal={toggleModal} />}\n\n      {selectedChat && (\n        <div className={styles.chatInfo}>\n          <img\n            src={selectedChat.id === \"admin\" ? gaby : selectedChat.user.avatar}\n            alt=\"Avatar\"\n            className={styles.avatar}\n          />\n          <div className={styles.usersInfo}>\n            <span className={styles.userName}>{selectedChat.user.name}</span>\n            <span className={styles.reply}>Reply</span>\n          </div>\n        </div>\n      )}\n      <button className={clsx(styles.rightContButton)} onClick={toggleModal}>\n        <FaEllipsisH size={16} className={styles.button} />\n      </button>\n    </div>\n  );\n}\n\nexport default ChatHeader;\n","import ChatHeader from \"./ChatHeader\";\n\nexport default ChatHeader;\n","// extracted by mini-css-extract-plugin\nexport default {\"cont\":\"ChatPage_cont__7VJ-l\",\"lightCont\":\"ChatPage_lightCont__WQleb\",\"darkCont\":\"ChatPage_darkCont__bU2Pt\",\"violetCont\":\"ChatPage_violetCont__ZSN2u\",\"content\":\"ChatPage_content__Rt+WH\",\"main\":\"ChatPage_main__6DIbi\"};","import ChatPage from \"./ChatPage\";\n\nexport default ChatPage;\n","import React from \"react\";\nimport { Outlet } from \"react-router-dom\";\n\nimport clsx from \"clsx\";\n\nimport ChatsAside from \"../../components/ChatsAside/ChatsAside\";\nimport ChatHeader from \"../../components/ChatHeader\";\n\nimport styles from \"./ChatPage.module.css\";\n\nexport default function ChatPage() {\n  const theme = localStorage.getItem(\"theme\") || \"dark\";\n\n  return (\n    <div\n      className={clsx(\n        styles.cont,\n        theme === \"light\"\n          ? styles.lightCont\n          : theme === \"violet\"\n          ? styles.violetCont\n          : styles.darkCont\n      )}>\n      <ChatsAside />\n      <div className={clsx(styles.content)}>\n        <ChatHeader />\n        <section className={styles.main}>\n          <Outlet />\n        </section>\n      </div>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"inputContainer\":\"ChatInput_inputContainer__IBOKh\",\"input\":\"ChatInput_input__s+2Y2\",\"inputCenter\":\"ChatInput_inputCenter__Ckgec\",\"inputInfo\":\"ChatInput_inputInfo__HNq2h\",\"autoResizeTextarea\":\"ChatInput_autoResizeTextarea__nF2eA\"};","import ChatInput from \"./ChatInput\";\n\nexport default ChatInput;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\n\nimport styles from \"./ChatInput.module.css\";\n\nexport default function ChatInput({\n  type,\n  placeholder,\n  required,\n  className,\n  name,\n  handleChange,\n  width,\n  value,\n  paddingLeft,\n  autoComplete,\n  handleBlur,\n  children,\n  textarea = false,\n}) {\n  const commonProps = {\n    autoComplete: autoComplete || \"off\",\n    style: { paddingLeft: paddingLeft || \"0px\" },\n    onChange: handleChange,\n    name: name || \"\",\n    className: clsx(styles.input, className),\n    placeholder: placeholder || \"\",\n    required: required || false,\n    value: value || \"\",\n    onBlur: handleBlur,\n  };\n\n  return (\n    <div style={{ width: width || \"auto\" }} className={styles.inputContainer}>\n      {textarea ? (\n        <textarea\n          {...commonProps}\n          rows=\"1\"\n          //   onInput={(e) => {\n          //     handleChange && handleChange(e);\n          //   }}\n          className={clsx(styles.input, className)} // adaugi o clasă\n        />\n      ) : (\n        <input\n          className={clsx(styles.input, className)}\n          {...commonProps}\n          type={type || \"text\"}\n        />\n      )}\n      {children}\n    </div>\n  );\n}\n\nChatInput.propTypes = {\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  paddingLeft: PropTypes.string,\n  autoComplete: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  name: PropTypes.string,\n  type: PropTypes.string,\n  handleChange: PropTypes.func,\n  handleBlur: PropTypes.func,\n  required: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  textarea: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  placeholder: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  children: PropTypes.node,\n};\n","import { createSelector } from \"reselect\";\n\nconst selectChatsState = (state) => state.chats;\n\nexport const selectActiveChats = createSelector(\n  [selectChatsState],\n  (chatsState) => chatsState.activeChats\n);\n\nexport const selectChats = createSelector(\n  [selectChatsState],\n  (chatsState) => chatsState.chats\n);\n\nexport const selectLoading = createSelector(\n  [selectChatsState],\n  (chatsState) => chatsState.loading\n);\n\nexport const selectError = createSelector(\n  [selectChatsState],\n  (chatsState) => chatsState.error\n);\n\nexport const selectVisitedChatIds = createSelector(\n  [selectChatsState],\n  (chatsState) => chatsState.visitedChatIds\n);\n\nconst chatByIdSelectorCache = {};\n\nexport const selectChatById = (chatId) => {\n  if (!chatByIdSelectorCache[chatId]) {\n    chatByIdSelectorCache[chatId] = createSelector(\n      [selectChats],\n      (chats) => chats.find((chat) => chat.id === chatId) || null\n    );\n  }\n  return chatByIdSelectorCache[chatId];\n};\n","import { useDispatch, useSelector } from \"react-redux\";\nimport {\n  selectError,\n  selectActiveChats,\n  selectLoading,\n  selectChats,\n  selectChatById,\n  selectVisitedChatIds,\n} from \"../redux/public/selectorsChats\";\n\nexport const useChats = () => {\n  const dispatch = useDispatch();\n  const activeChats = useSelector(selectActiveChats);\n  const isLoading = useSelector(selectLoading);\n  const errorChats = useSelector(selectError);\n  const chats = useSelector(selectChats);\n  const chatById = useSelector(selectChatById);\n  const visitedChatIds = useSelector(selectVisitedChatIds);\n\n  return {\n    activeChats,\n    isLoading,\n    errorChats,\n    chats,\n    chatById,\n    dispatch,\n    visitedChatIds,\n  };\n};\n"],"names":["_ref","search","chats","useChats","reloadMap","setReloadMap","useState","dispatch","useDispatch","getLastInboxMessage","chat","inboxMessages","messages","filter","msg","isInbox","length","reduce","latest","Date","sentAt","filteredChats","user","name","toLowerCase","includes","_jsx","className","styles","children","map","_chat$user$avatar","_chat$user","_chat$user2","_chat$user3","_getLastInboxMessage","_jsxs","NavLink","to","concat","id","_ref2","isActive","clsx","onClick","accessChat","chatId","src","gaby","avatar","roby","alt","loading","onError","handleImageError","setTimeout","prev","_objectSpread","isOnline","content","ChatsAside","activeChats","setSearch","ChatInput","paddingLeft","placeholder","value","handleChange","e","target","FontAwesomeIcon","icon","faMagnifyingGlass","ChatsList","ActiveChatModal","closeModal","modalRef","useRef","visitedChatIds","useEffect","handleClickOutside","event","current","contains","document","addEventListener","removeEventListener","ref","Link","useParams","selectedChat","find","showModal","setShowModal","toggleModal","FaEllipsisH","size","theme","localStorage","getItem","ChatHeader","Outlet","type","required","width","autoComplete","handleBlur","textarea","commonProps","style","onChange","onBlur","rows","selectChatsState","state","selectActiveChats","createSelector","chatsState","selectChats","selectLoading","selectError","error","selectVisitedChatIds","chatByIdSelectorCache","selectChatById","useSelector","isLoading","errorChats","chatById"],"sourceRoot":""}